

================================================================
== Vivado HLS Report for 'resample_for_conv2'
================================================================
* Date:           Tue Dec  3 11:18:57 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        final
* Solution:       bigger_II
* Product family: kintex7
* Target device:  xc7k325tffg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     4.375|        0.63|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------------------------------------------+
    |   Latency   |   Interval  |                   Pipeline                  |
    |  min |  max |  min |  max |                     Type                    |
    +------+------+------+------+---------------------------------------------+
    |  1773|  1774|  1764|  1764| loop rewind(delay=2 initiation interval(s)) |
    +------+------+------+------+---------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------+------+------+----------+-----------+-----------+------+----------+
        |                       |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name       |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------+------+------+----------+-----------+-----------+------+----------+
        |- row_window1_window2  |  1773|  1773|        11|          1|          1|  1764|    yes   |
        +-----------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 11, States = { 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.87>
ST_1 : Operation 13 [1/1] (0.87ns)   --->   "br label %.reset24"   --->   Operation 13 'br' <Predicate = true> <Delay = 0.87>

State 2 <SV = 1> <Delay = 3.26>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%exitcond_flatten3 = phi i1 [ false, %0 ], [ %exitcond_flatten1, %ifBlock ], [ false, %1 ]"   --->   Operation 14 'phi' 'exitcond_flatten3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%exitcond_flatten4 = phi i1 [ false, %0 ], [ %exitcond_flatten, %ifBlock ], [ false, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 15 'phi' 'exitcond_flatten4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1 = phi i1 [ false, %0 ], [ %tmp_3, %ifBlock ], [ false, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 16 'phi' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%m_cast = phi i2 [ 0, %0 ], [ %m_cast_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:138]   --->   Operation 17 'phi' 'm_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%n = phi i2 [ 0, %0 ], [ %n_1, %ifBlock ], [ 0, %1 ]"   --->   Operation 18 'phi' 'n' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %indvar_flatten_next, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 19 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%j = phi i4 [ 0, %0 ], [ %j_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 20 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%indvar_flatten1 = phi i8 [ 0, %0 ], [ %indvar_flatten_next1, %ifBlock ], [ 0, %1 ]"   --->   Operation 21 'phi' 'indvar_flatten1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i = phi i4 [ 0, %0 ], [ %i_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:131]   --->   Operation 22 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten2 = phi i11 [ 0, %0 ], [ %indvar_flatten_next2, %ifBlock ], [ 0, %1 ]"   --->   Operation 23 'phi' 'indvar_flatten2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.01ns)   --->   "%i_1 = add i4 1, %i" [../src/CNN_final.cpp:131]   --->   Operation 24 'add' 'i_1' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.51ns)   --->   "%j_mid = select i1 %exitcond_flatten3, i4 0, i4 %j" [../src/CNN_final.cpp:140]   --->   Operation 25 'select' 'j_mid' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.47ns)   --->   "%not_exitcond_flatten = xor i1 %exitcond_flatten3, true" [../src/CNN_final.cpp:140]   --->   Operation 26 'xor' 'not_exitcond_flatten' <Predicate = true> <Delay = 0.47> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node tmp_3_mid1)   --->   "%tmp_3_mid = and i1 %tmp_1, %not_exitcond_flatten" [../src/CNN_final.cpp:140]   --->   Operation 27 'and' 'tmp_3_mid' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.47ns)   --->   "%exitcond_flatten_mid = and i1 %exitcond_flatten4, %not_exitcond_flatten" [../src/CNN_final.cpp:140]   --->   Operation 28 'and' 'exitcond_flatten_mid' <Predicate = true> <Delay = 0.47> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.51ns)   --->   "%i_mid2 = select i1 %exitcond_flatten3, i4 %i_1, i4 %i" [../src/CNN_final.cpp:131]   --->   Operation 29 'select' 'i_mid2' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.01ns)   --->   "%j_1 = add i4 1, %j_mid" [../src/CNN_final.cpp:133]   --->   Operation 30 'add' 'j_1' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.47ns)   --->   "%tmp = or i1 %exitcond_flatten_mid, %exitcond_flatten3" [../src/CNN_final.cpp:140]   --->   Operation 31 'or' 'tmp' <Predicate = true> <Delay = 0.47> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.48ns)   --->   "%m_mid = select i1 %tmp, i2 0, i2 %m_cast" [../src/CNN_final.cpp:140]   --->   Operation 32 'select' 'm_mid' <Predicate = true> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node tmp_3_mid1)   --->   "%exitcond_flatten_not = xor i1 %exitcond_flatten4, true" [../src/CNN_final.cpp:140]   --->   Operation 33 'xor' 'exitcond_flatten_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node tmp_3_mid1)   --->   "%not_exitcond_flatten_1 = or i1 %exitcond_flatten3, %exitcond_flatten_not" [../src/CNN_final.cpp:140]   --->   Operation 34 'or' 'not_exitcond_flatten_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.47ns) (out node of the LUT)   --->   "%tmp_3_mid1 = and i1 %tmp_3_mid, %not_exitcond_flatten_1" [../src/CNN_final.cpp:140]   --->   Operation 35 'and' 'tmp_3_mid1' <Predicate = true> <Delay = 0.47> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.51ns)   --->   "%j_mid2 = select i1 %exitcond_flatten_mid, i4 %j_1, i4 %j_mid" [../src/CNN_final.cpp:140]   --->   Operation 36 'select' 'j_mid2' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.85ns)   --->   "%m = add i2 1, %m_mid" [../src/CNN_final.cpp:138]   --->   Operation 37 'add' 'm' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node n_mid2)   --->   "%tmp_4 = or i1 %tmp_3_mid1, %exitcond_flatten_mid" [../src/CNN_final.cpp:140]   --->   Operation 38 'or' 'tmp_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node n_mid2)   --->   "%tmp_5 = or i1 %tmp_4, %exitcond_flatten3" [../src/CNN_final.cpp:140]   --->   Operation 39 'or' 'tmp_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.48ns) (out node of the LUT)   --->   "%n_mid2 = select i1 %tmp_5, i2 0, i2 %n" [../src/CNN_final.cpp:140]   --->   Operation 40 'select' 'n_mid2' <Predicate = true> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.48ns)   --->   "%m_cast_mid2 = select i1 %tmp_3_mid1, i2 %m, i2 %m_mid" [../src/CNN_final.cpp:138]   --->   Operation 41 'select' 'm_cast_mid2' <Predicate = true> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_7 = trunc i4 %i_mid2 to i2" [../src/CNN_final.cpp:131]   --->   Operation 42 'trunc' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.35ns)   --->   "%indvar_flatten_next2 = add i11 1, %indvar_flatten2"   --->   Operation 43 'add' 'indvar_flatten_next2' <Predicate = true> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.85ns)   --->   "%n_1 = add i2 %n_mid2, 1" [../src/CNN_final.cpp:140]   --->   Operation 44 'add' 'n_1' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.01ns)   --->   "%indvar_flatten_op = add i4 %indvar_flatten, 1" [../src/CNN_final.cpp:140]   --->   Operation 45 'add' 'indvar_flatten_op' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.51ns)   --->   "%indvar_flatten_next = select i1 %tmp, i4 1, i4 %indvar_flatten_op" [../src/CNN_final.cpp:140]   --->   Operation 46 'select' 'indvar_flatten_next' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.35ns)   --->   "%indvar_flatten17_op = add i8 %indvar_flatten1, 1"   --->   Operation 47 'add' 'indvar_flatten17_op' <Predicate = true> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.37ns)   --->   "%indvar_flatten_next1 = select i1 %exitcond_flatten3, i8 1, i8 %indvar_flatten17_op"   --->   Operation 48 'select' 'indvar_flatten_next1' <Predicate = true> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.50ns)   --->   "%tmp_3 = icmp eq i2 %n_1, -1" [../src/CNN_final.cpp:140]   --->   Operation 49 'icmp' 'tmp_3' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.86ns)   --->   "%exitcond_flatten = icmp eq i4 %indvar_flatten_next, -7" [../src/CNN_final.cpp:140]   --->   Operation 50 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.94ns)   --->   "%exitcond_flatten1 = icmp eq i8 %indvar_flatten_next1, 126"   --->   Operation 51 'icmp' 'exitcond_flatten1' <Predicate = true> <Delay = 0.94> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.07ns)   --->   "%exitcond_flatten2 = icmp eq i11 %indvar_flatten2, -285"   --->   Operation 52 'icmp' 'exitcond_flatten2' <Predicate = true> <Delay = 1.07> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "br label %.reset24" [../src/CNN_final.cpp:151]   --->   Operation 53 'br' <Predicate = (exitcond_flatten2)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.38>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%k_s = phi i4 [ 0, %0 ], [ %tmp_10, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:144]   --->   Operation 54 'phi' 'k_s' <Predicate = (!tmp & !tmp_3_mid1)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%k = phi i4 [ 0, %0 ], [ %k_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 55 'phi' 'k' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.51ns)   --->   "%k_mid = select i1 %tmp, i4 0, i4 %k" [../src/CNN_final.cpp:140]   --->   Operation 56 'select' 'k_mid' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node k_1_mid2)   --->   "%k_1_mid = select i1 %tmp, i4 0, i4 %k_s" [../src/CNN_final.cpp:140]   --->   Operation 57 'select' 'k_1_mid' <Predicate = (!tmp_3_mid1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (1.01ns)   --->   "%k_2_dup = add i4 3, %k_mid" [../src/CNN_final.cpp:144]   --->   Operation 58 'add' 'k_2_dup' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.51ns) (out node of the LUT)   --->   "%k_1_mid2 = select i1 %tmp_3_mid1, i4 %k_2_dup, i4 %k_1_mid" [../src/CNN_final.cpp:140]   --->   Operation 59 'select' 'k_1_mid2' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%m_cast_mid2_cast = zext i2 %m_cast_mid2 to i4" [../src/CNN_final.cpp:138]   --->   Operation 60 'zext' 'm_cast_mid2_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.51ns)   --->   "%k_mid2 = select i1 %tmp_3_mid1, i4 %k_2_dup, i4 %k_mid" [../src/CNN_final.cpp:140]   --->   Operation 61 'select' 'k_mid2' <Predicate = true> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%n_cast = zext i2 %n_mid2 to i4" [../src/CNN_final.cpp:140]   --->   Operation 62 'zext' 'n_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.01ns)   --->   "%tmp_6 = add i4 %n_cast, %j_mid2" [../src/CNN_final.cpp:143]   --->   Operation 63 'add' 'tmp_6' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (1.01ns)   --->   "%tmp_8 = add i4 %m_cast_mid2_cast, %i_mid2" [../src/CNN_final.cpp:143]   --->   Operation 64 'add' 'tmp_8' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%arrayNo = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %tmp_8, i32 2, i32 3)" [../src/CNN_final.cpp:143]   --->   Operation 65 'partselect' 'arrayNo' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.85ns)   --->   "%newIndex_trunc = add i2 %tmp_7, %m_cast_mid2" [../src/CNN_final.cpp:131]   --->   Operation 66 'add' 'newIndex_trunc' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_9 = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 %newIndex_trunc, i4 %tmp_6)" [../src/CNN_final.cpp:131]   --->   Operation 67 'bitconcatenate' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_11 = zext i6 %tmp_9 to i64" [../src/CNN_final.cpp:131]   --->   Operation 68 'zext' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%square_image_0_V_ad = getelementptr [64 x i25]* %square_image_0_V, i64 0, i64 %tmp_11" [../src/CNN_final.cpp:131]   --->   Operation 69 'getelementptr' 'square_image_0_V_ad' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%square_image_1_V_ad = getelementptr [64 x i25]* %square_image_1_V, i64 0, i64 %tmp_11" [../src/CNN_final.cpp:131]   --->   Operation 70 'getelementptr' 'square_image_1_V_ad' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%square_image_2_V_ad = getelementptr [64 x i25]* %square_image_2_V, i64 0, i64 %tmp_11" [../src/CNN_final.cpp:131]   --->   Operation 71 'getelementptr' 'square_image_2_V_ad' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%square_image_3_V_ad = getelementptr [64 x i25]* %square_image_3_V, i64 0, i64 %tmp_11" [../src/CNN_final.cpp:131]   --->   Operation 72 'getelementptr' 'square_image_3_V_ad' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [2/2] (2.26ns)   --->   "%square_image_0_V_lo = load i25* %square_image_0_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 73 'load' 'square_image_0_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_3 : Operation 74 [2/2] (2.26ns)   --->   "%square_image_1_V_lo = load i25* %square_image_1_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 74 'load' 'square_image_1_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_3 : Operation 75 [2/2] (2.26ns)   --->   "%square_image_2_V_lo = load i25* %square_image_2_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 75 'load' 'square_image_2_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_3 : Operation 76 [2/2] (2.26ns)   --->   "%square_image_3_V_lo = load i25* %square_image_3_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 76 'load' 'square_image_3_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_3 : Operation 77 [8/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 77 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.86ns)   --->   "%tmp_15 = icmp ult i4 %k_1_mid2, 5" [../src/CNN_final.cpp:143]   --->   Operation 78 'icmp' 'tmp_15' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %tmp_15, label %branch0, label %branch1" [../src/CNN_final.cpp:143]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (1.01ns)   --->   "%tmp_10 = add i4 %k_1_mid2, 1" [../src/CNN_final.cpp:144]   --->   Operation 80 'add' 'tmp_10' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.15>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%arrayNo_cast = zext i2 %arrayNo to i32" [../src/CNN_final.cpp:143]   --->   Operation 81 'zext' 'arrayNo_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/2] (2.26ns)   --->   "%square_image_0_V_lo = load i25* %square_image_0_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 82 'load' 'square_image_0_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_4 : Operation 83 [1/2] (2.26ns)   --->   "%square_image_1_V_lo = load i25* %square_image_1_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 83 'load' 'square_image_1_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_4 : Operation 84 [1/2] (2.26ns)   --->   "%square_image_2_V_lo = load i25* %square_image_2_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 84 'load' 'square_image_2_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_4 : Operation 85 [1/2] (2.26ns)   --->   "%square_image_3_V_lo = load i25* %square_image_3_V_ad, align 4" [../src/CNN_final.cpp:131]   --->   Operation 85 'load' 'square_image_3_V_lo' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_4 : Operation 86 [1/1] (0.88ns)   --->   "%tmp_12 = call i25 @_ssdm_op_Mux.ap_auto.4i25.i32(i25 %square_image_0_V_lo, i25 %square_image_1_V_lo, i25 %square_image_2_V_lo, i25 %square_image_3_V_lo, i32 %arrayNo_cast)" [../src/CNN_final.cpp:131]   --->   Operation 86 'mux' 'tmp_12' <Predicate = true> <Delay = 0.88> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [7/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 87 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.33>
ST_5 : Operation 88 [6/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 88 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.33>
ST_6 : Operation 89 [5/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 89 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.33>
ST_7 : Operation 90 [4/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 90 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 1.33>
ST_8 : Operation 91 [3/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 91 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.33>
ST_9 : Operation 92 [2/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 92 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.37>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%l_s = phi i8 [ 0, %0 ], [ %l_1_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:140]   --->   Operation 93 'phi' 'l_s' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%l = phi i8 [ 0, %0 ], [ %l_mid2, %ifBlock ], [ 0, %1 ]" [../src/CNN_final.cpp:147]   --->   Operation 94 'phi' 'l' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (1.35ns)   --->   "%l_2_dup = add i8 14, %l" [../src/CNN_final.cpp:147]   --->   Operation 95 'add' 'l_2_dup' <Predicate = true> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 96 [1/1] (0.37ns)   --->   "%l_1_mid = select i1 %exitcond_flatten3, i8 %l_2_dup, i8 %l_s" [../src/CNN_final.cpp:147]   --->   Operation 96 'select' 'l_1_mid' <Predicate = true> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.37ns)   --->   "%l_mid2 = select i1 %exitcond_flatten3, i8 %l_2_dup, i8 %l" [../src/CNN_final.cpp:147]   --->   Operation 97 'select' 'l_mid2' <Predicate = true> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 98 [1/1] (1.35ns)   --->   "%tmp_2 = add i8 1, %l_1_mid" [../src/CNN_final.cpp:147]   --->   Operation 98 'add' 'tmp_2' <Predicate = (exitcond_flatten_mid)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/1] (0.37ns)   --->   "%l_1_mid2 = select i1 %exitcond_flatten_mid, i8 %tmp_2, i8 %l_1_mid" [../src/CNN_final.cpp:140]   --->   Operation 99 'select' 'l_1_mid2' <Predicate = true> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 100 [1/8] (1.33ns)   --->   "%newIndex = urem i4 %k_1_mid2, 5" [../src/CNN_final.cpp:140]   --->   Operation 100 'urem' 'newIndex' <Predicate = true> <Delay = 1.33> <Core = "DivnS">   --->   Core 23 'DivnS' <Latency = 7> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%newIndex1_cast = zext i4 %newIndex to i11" [../src/CNN_final.cpp:143]   --->   Operation 101 'zext' 'newIndex1_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 102 [2/2] (3.04ns)   --->   "%tmp_13 = mul i11 196, %newIndex1_cast" [../src/CNN_final.cpp:143]   --->   Operation 102 'mul' 'tmp_13' <Predicate = true> <Delay = 3.04> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 1> <II = 1> <Delay = 4.60> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 2.70>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i8 %l_1_mid2 to i11" [../src/CNN_final.cpp:143]   --->   Operation 103 'zext' 'tmp_4_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 104 [1/2] (0.00ns)   --->   "%tmp_13 = mul i11 196, %newIndex1_cast" [../src/CNN_final.cpp:143]   --->   Operation 104 'mul' 'tmp_13' <Predicate = true> <Delay = 0.00> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 1> <II = 1> <Delay = 4.60> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 105 [1/1] (2.70ns)   --->   "%tmp_14 = add i11 %tmp_13, %tmp_4_cast" [../src/CNN_final.cpp:143]   --->   Operation 105 'add' 'tmp_14' <Predicate = true> <Delay = 2.70> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 1> <II = 1> <Delay = 4.60> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten2, label %1, label %.reset24"   --->   Operation 106 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 2.26>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @row_window1_window2_s)"   --->   Operation 107 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 108 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @col_window1_window2_s)"   --->   Operation 108 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @window1_window2_str)"   --->   Operation 109 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str737) nounwind" [../src/CNN_final.cpp:141]   --->   Operation 110 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str737)" [../src/CNN_final.cpp:141]   --->   Operation 111 'specregionbegin' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str131) nounwind" [../src/CNN_final.cpp:142]   --->   Operation 112 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_17_cast = sext i11 %tmp_14 to i64" [../src/CNN_final.cpp:143]   --->   Operation 113 'sext' 'tmp_17_cast' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "%resampled_0_V_addr = getelementptr [980 x i25]* %resampled_0_V, i64 0, i64 %tmp_17_cast" [../src/CNN_final.cpp:143]   --->   Operation 114 'getelementptr' 'resampled_0_V_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%resampled_1_V_addr = getelementptr [784 x i25]* %resampled_1_V, i64 0, i64 %tmp_17_cast" [../src/CNN_final.cpp:143]   --->   Operation 115 'getelementptr' 'resampled_1_V_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1764, i64 1764, i64 1764)"   --->   Operation 116 'speclooptripcount' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 117 [1/1] (2.26ns)   --->   "store i25 %tmp_12, i25* %resampled_1_V_addr, align 4" [../src/CNN_final.cpp:143]   --->   Operation 117 'store' <Predicate = (!tmp_15)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "br label %ifBlock" [../src/CNN_final.cpp:143]   --->   Operation 118 'br' <Predicate = (!tmp_15)> <Delay = 0.00>
ST_12 : Operation 119 [1/1] (2.26ns)   --->   "store i25 %tmp_12, i25* %resampled_0_V_addr, align 4" [../src/CNN_final.cpp:143]   --->   Operation 119 'store' <Predicate = (tmp_15)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 25> <Depth = 980> <RAM>
ST_12 : Operation 120 [1/1] (0.00ns)   --->   "br label %ifBlock" [../src/CNN_final.cpp:143]   --->   Operation 120 'br' <Predicate = (tmp_15)> <Delay = 0.00>
ST_12 : Operation 121 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str737, i32 %tmp_s)" [../src/CNN_final.cpp:145]   --->   Operation 121 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_Return()" [../src/CNN_final.cpp:151]   --->   Operation 122 'return' <Predicate = (exitcond_flatten2)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.872ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('exitcond_flatten3') with incoming values : ('exitcond_flatten1') [9]  (0.872 ns)

 <State 2>: 3.26ns
The critical path consists of the following:
	'phi' operation ('exitcond_flatten3') with incoming values : ('exitcond_flatten1') [9]  (0 ns)
	'xor' operation ('not_exitcond_flatten', ../src/CNN_final.cpp:140) [28]  (0.479 ns)
	'and' operation ('exitcond_flatten_mid', ../src/CNN_final.cpp:140) [30]  (0.479 ns)
	'or' operation ('tmp', ../src/CNN_final.cpp:140) [36]  (0.479 ns)
	'select' operation ('m_mid', ../src/CNN_final.cpp:140) [38]  (0.487 ns)
	'add' operation ('m', ../src/CNN_final.cpp:138) [45]  (0.85 ns)
	'select' operation ('m_cast_mid2', ../src/CNN_final.cpp:138) [52]  (0.487 ns)

 <State 3>: 3.39ns
The critical path consists of the following:
	'phi' operation ('k', ../src/CNN_final.cpp:140) with incoming values : ('k_mid2', ../src/CNN_final.cpp:140) [15]  (0 ns)
	'select' operation ('k_mid', ../src/CNN_final.cpp:140) [37]  (0.517 ns)
	'add' operation ('k_2_dup', ../src/CNN_final.cpp:144) [46]  (1.02 ns)
	'select' operation ('k_1_mid2', ../src/CNN_final.cpp:140) [48]  (0.517 ns)
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 4>: 3.15ns
The critical path consists of the following:
	'load' operation ('square_image_0_V_lo', ../src/CNN_final.cpp:131) on array 'square_image_0_V' [72]  (2.27 ns)
	'mux' operation ('tmp_12', ../src/CNN_final.cpp:131) [76]  (0.887 ns)

 <State 5>: 1.33ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 6>: 1.33ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 7>: 1.33ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 8>: 1.33ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 9>: 1.33ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)

 <State 10>: 4.38ns
The critical path consists of the following:
	'urem' operation ('newIndex', ../src/CNN_final.cpp:140) [77]  (1.33 ns)
	'mul' operation ('tmp_13', ../src/CNN_final.cpp:143) [79]  (3.04 ns)

 <State 11>: 2.7ns
The critical path consists of the following:
	'add' operation ('tmp_14', ../src/CNN_final.cpp:143) [80]  (2.7 ns)

 <State 12>: 2.27ns
The critical path consists of the following:
	'getelementptr' operation ('resampled_1_V_addr', ../src/CNN_final.cpp:143) [83]  (0 ns)
	'store' operation (../src/CNN_final.cpp:143) of variable 'tmp_12', ../src/CNN_final.cpp:131 on array 'resampled_1_V' [89]  (2.27 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
