// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv2d_3x3_1chan_rev (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        kernel_0_V_dout,
        kernel_0_V_empty_n,
        kernel_0_V_read,
        kernel_1_V_dout,
        kernel_1_V_empty_n,
        kernel_1_V_read,
        kernel_2_V_dout,
        kernel_2_V_empty_n,
        kernel_2_V_read,
        kernel_3_V_dout,
        kernel_3_V_empty_n,
        kernel_3_V_read,
        kernel_4_V_dout,
        kernel_4_V_empty_n,
        kernel_4_V_read,
        kernel_5_V_dout,
        kernel_5_V_empty_n,
        kernel_5_V_read,
        kernel_6_V_dout,
        kernel_6_V_empty_n,
        kernel_6_V_read,
        kernel_7_V_dout,
        kernel_7_V_empty_n,
        kernel_7_V_read,
        kernel_8_V_dout,
        kernel_8_V_empty_n,
        kernel_8_V_read,
        bias_V_dout,
        bias_V_empty_n,
        bias_V_read,
        in_image_0_0_V_address0,
        in_image_0_0_V_ce0,
        in_image_0_0_V_q0,
        in_image_0_1_V_address0,
        in_image_0_1_V_ce0,
        in_image_0_1_V_q0,
        in_image_0_2_V_address0,
        in_image_0_2_V_ce0,
        in_image_0_2_V_q0,
        in_image_0_3_V_address0,
        in_image_0_3_V_ce0,
        in_image_0_3_V_q0,
        in_image_0_4_V_address0,
        in_image_0_4_V_ce0,
        in_image_0_4_V_q0,
        in_image_1_0_V_address0,
        in_image_1_0_V_ce0,
        in_image_1_0_V_q0,
        in_image_1_1_V_address0,
        in_image_1_1_V_ce0,
        in_image_1_1_V_q0,
        in_image_1_2_V_address0,
        in_image_1_2_V_ce0,
        in_image_1_2_V_q0,
        in_image_1_3_V_address0,
        in_image_1_3_V_ce0,
        in_image_1_3_V_q0,
        out_image_0_V_address0,
        out_image_0_V_ce0,
        out_image_0_V_we0,
        out_image_0_V_d0,
        out_image_1_V_address0,
        out_image_1_V_ce0,
        out_image_1_V_we0,
        out_image_1_V_d0,
        out_image_2_V_address0,
        out_image_2_V_ce0,
        out_image_2_V_we0,
        out_image_2_V_d0,
        out_image_3_V_address0,
        out_image_3_V_ce0,
        out_image_3_V_we0,
        out_image_3_V_d0,
        out_image_4_V_address0,
        out_image_4_V_ce0,
        out_image_4_V_we0,
        out_image_4_V_d0,
        out_image_5_V_address0,
        out_image_5_V_ce0,
        out_image_5_V_we0,
        out_image_5_V_d0,
        out_image_6_V_address0,
        out_image_6_V_ce0,
        out_image_6_V_we0,
        out_image_6_V_d0
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [17:0] kernel_0_V_dout;
input   kernel_0_V_empty_n;
output   kernel_0_V_read;
input  [17:0] kernel_1_V_dout;
input   kernel_1_V_empty_n;
output   kernel_1_V_read;
input  [17:0] kernel_2_V_dout;
input   kernel_2_V_empty_n;
output   kernel_2_V_read;
input  [17:0] kernel_3_V_dout;
input   kernel_3_V_empty_n;
output   kernel_3_V_read;
input  [17:0] kernel_4_V_dout;
input   kernel_4_V_empty_n;
output   kernel_4_V_read;
input  [17:0] kernel_5_V_dout;
input   kernel_5_V_empty_n;
output   kernel_5_V_read;
input  [17:0] kernel_6_V_dout;
input   kernel_6_V_empty_n;
output   kernel_6_V_read;
input  [17:0] kernel_7_V_dout;
input   kernel_7_V_empty_n;
output   kernel_7_V_read;
input  [17:0] kernel_8_V_dout;
input   kernel_8_V_empty_n;
output   kernel_8_V_read;
input  [47:0] bias_V_dout;
input   bias_V_empty_n;
output   bias_V_read;
output  [9:0] in_image_0_0_V_address0;
output   in_image_0_0_V_ce0;
input  [17:0] in_image_0_0_V_q0;
output  [9:0] in_image_0_1_V_address0;
output   in_image_0_1_V_ce0;
input  [17:0] in_image_0_1_V_q0;
output  [9:0] in_image_0_2_V_address0;
output   in_image_0_2_V_ce0;
input  [17:0] in_image_0_2_V_q0;
output  [9:0] in_image_0_3_V_address0;
output   in_image_0_3_V_ce0;
input  [17:0] in_image_0_3_V_q0;
output  [9:0] in_image_0_4_V_address0;
output   in_image_0_4_V_ce0;
input  [17:0] in_image_0_4_V_q0;
output  [9:0] in_image_1_0_V_address0;
output   in_image_1_0_V_ce0;
input  [17:0] in_image_1_0_V_q0;
output  [9:0] in_image_1_1_V_address0;
output   in_image_1_1_V_ce0;
input  [17:0] in_image_1_1_V_q0;
output  [9:0] in_image_1_2_V_address0;
output   in_image_1_2_V_ce0;
input  [17:0] in_image_1_2_V_q0;
output  [9:0] in_image_1_3_V_address0;
output   in_image_1_3_V_ce0;
input  [17:0] in_image_1_3_V_q0;
output  [6:0] out_image_0_V_address0;
output   out_image_0_V_ce0;
output   out_image_0_V_we0;
output  [24:0] out_image_0_V_d0;
output  [6:0] out_image_1_V_address0;
output   out_image_1_V_ce0;
output   out_image_1_V_we0;
output  [24:0] out_image_1_V_d0;
output  [6:0] out_image_2_V_address0;
output   out_image_2_V_ce0;
output   out_image_2_V_we0;
output  [24:0] out_image_2_V_d0;
output  [6:0] out_image_3_V_address0;
output   out_image_3_V_ce0;
output   out_image_3_V_we0;
output  [24:0] out_image_3_V_d0;
output  [6:0] out_image_4_V_address0;
output   out_image_4_V_ce0;
output   out_image_4_V_we0;
output  [24:0] out_image_4_V_d0;
output  [6:0] out_image_5_V_address0;
output   out_image_5_V_ce0;
output   out_image_5_V_we0;
output  [24:0] out_image_5_V_d0;
output  [6:0] out_image_6_V_address0;
output   out_image_6_V_ce0;
output   out_image_6_V_we0;
output  [24:0] out_image_6_V_d0;

reg ap_done;
reg ap_idle;
reg kernel_0_V_read;
reg kernel_1_V_read;
reg kernel_2_V_read;
reg kernel_3_V_read;
reg kernel_4_V_read;
reg kernel_5_V_read;
reg kernel_6_V_read;
reg kernel_7_V_read;
reg kernel_8_V_read;
reg bias_V_read;
reg in_image_0_0_V_ce0;
reg in_image_0_1_V_ce0;
reg in_image_0_2_V_ce0;
reg in_image_0_3_V_ce0;
reg in_image_0_4_V_ce0;
reg in_image_1_0_V_ce0;
reg in_image_1_1_V_ce0;
reg in_image_1_2_V_ce0;
reg in_image_1_3_V_ce0;
reg out_image_0_V_ce0;
reg out_image_0_V_we0;
reg out_image_1_V_ce0;
reg out_image_1_V_we0;
reg out_image_2_V_ce0;
reg out_image_2_V_we0;
reg out_image_3_V_ce0;
reg out_image_3_V_we0;
reg out_image_4_V_ce0;
reg out_image_4_V_we0;
reg out_image_5_V_ce0;
reg out_image_5_V_we0;
reg out_image_6_V_ce0;
reg out_image_6_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] tmp_i_67_reg_1231;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
reg   [0:0] ap_phi_mux_do_init_phi_fu_418_p6;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_11001;
reg    kernel_0_V_blk_n;
wire    ap_block_pp0_stage0;
reg    kernel_1_V_blk_n;
reg    kernel_2_V_blk_n;
reg    kernel_3_V_blk_n;
reg    kernel_4_V_blk_n;
reg    kernel_5_V_blk_n;
reg    kernel_6_V_blk_n;
reg    kernel_7_V_blk_n;
reg    kernel_8_V_blk_n;
reg    bias_V_blk_n;
reg   [0:0] do_init_reg_414;
reg   [9:0] i_i_reg_430;
reg   [47:0] p_Val2_rewind_reg_444;
reg   [17:0] kernel_8_V_load_rew_reg_458;
reg   [17:0] kernel_7_V_load_rew_reg_472;
reg   [17:0] kernel_6_V_load_rew_reg_486;
reg   [17:0] kernel_5_V_load_rew_reg_500;
reg   [17:0] kernel_4_V_load_rew_reg_514;
reg   [17:0] kernel_3_V_load_rew_reg_528;
reg   [17:0] kernel_2_V_load_rew_reg_542;
reg   [17:0] kernel_1_V_load_rew_reg_556;
reg   [17:0] kernel_0_V_load_rew_reg_570;
reg  signed [47:0] p_Val2_phi_reg_584;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter2_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter3_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter4_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter5_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter6_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter7_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter8_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter9_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter10_reg;
reg  signed [47:0] p_Val2_phi_reg_584_pp0_iter11_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter2_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter3_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter4_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter5_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter6_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter7_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter8_reg;
reg  signed [17:0] kernel_8_V_load_phi_reg_597_pp0_iter9_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter2_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter3_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter4_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter5_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter6_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter7_reg;
reg  signed [17:0] kernel_7_V_load_phi_reg_610_pp0_iter8_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter2_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter3_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter4_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter5_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter6_reg;
reg  signed [17:0] kernel_6_V_load_phi_reg_623_pp0_iter7_reg;
reg  signed [17:0] kernel_5_V_load_phi_reg_636;
reg  signed [17:0] kernel_5_V_load_phi_reg_636_pp0_iter2_reg;
reg  signed [17:0] kernel_5_V_load_phi_reg_636_pp0_iter3_reg;
reg  signed [17:0] kernel_5_V_load_phi_reg_636_pp0_iter4_reg;
reg  signed [17:0] kernel_5_V_load_phi_reg_636_pp0_iter5_reg;
reg  signed [17:0] kernel_5_V_load_phi_reg_636_pp0_iter6_reg;
reg  signed [17:0] kernel_4_V_load_phi_reg_649;
reg  signed [17:0] kernel_4_V_load_phi_reg_649_pp0_iter2_reg;
reg  signed [17:0] kernel_4_V_load_phi_reg_649_pp0_iter3_reg;
reg  signed [17:0] kernel_4_V_load_phi_reg_649_pp0_iter4_reg;
reg  signed [17:0] kernel_4_V_load_phi_reg_649_pp0_iter5_reg;
reg  signed [17:0] kernel_3_V_load_phi_reg_662;
reg  signed [17:0] kernel_3_V_load_phi_reg_662_pp0_iter2_reg;
reg  signed [17:0] kernel_3_V_load_phi_reg_662_pp0_iter3_reg;
reg  signed [17:0] kernel_3_V_load_phi_reg_662_pp0_iter4_reg;
reg  signed [17:0] kernel_2_V_load_phi_reg_675;
reg  signed [17:0] kernel_2_V_load_phi_reg_675_pp0_iter2_reg;
reg  signed [17:0] kernel_2_V_load_phi_reg_675_pp0_iter3_reg;
reg  signed [17:0] kernel_1_V_load_phi_reg_688;
reg  signed [17:0] kernel_1_V_load_phi_reg_688_pp0_iter2_reg;
reg  signed [17:0] kernel_0_V_load_phi_reg_701;
reg   [31:0] y_i_reg_714;
reg   [31:0] x_i_reg_728;
wire   [9:0] i_fu_755_p2;
reg   [9:0] i_reg_1226;
wire    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_i_67_fu_761_p2;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter1_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter2_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter3_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter4_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter5_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter6_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter7_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter8_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter9_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter10_reg;
reg   [0:0] tmp_i_67_reg_1231_pp0_iter11_reg;
reg  signed [17:0] in_image_0_0_V_loa_reg_1235;
reg   [17:0] in_image_0_1_V_loa_reg_1240;
reg  signed [17:0] in_image_0_1_V_loa_reg_1240_pp0_iter2_reg;
reg   [17:0] in_image_0_2_V_loa_reg_1245;
reg   [17:0] in_image_0_2_V_loa_reg_1245_pp0_iter2_reg;
reg  signed [17:0] in_image_0_2_V_loa_reg_1245_pp0_iter3_reg;
reg   [17:0] in_image_0_3_V_loa_reg_1250;
reg   [17:0] in_image_0_3_V_loa_reg_1250_pp0_iter2_reg;
reg   [17:0] in_image_0_3_V_loa_reg_1250_pp0_iter3_reg;
reg  signed [17:0] in_image_0_3_V_loa_reg_1250_pp0_iter4_reg;
reg   [17:0] in_image_0_4_V_loa_reg_1255;
reg   [17:0] in_image_0_4_V_loa_reg_1255_pp0_iter2_reg;
reg   [17:0] in_image_0_4_V_loa_reg_1255_pp0_iter3_reg;
reg   [17:0] in_image_0_4_V_loa_reg_1255_pp0_iter4_reg;
reg  signed [17:0] in_image_0_4_V_loa_reg_1255_pp0_iter5_reg;
reg   [17:0] in_image_1_0_V_loa_reg_1260;
reg   [17:0] in_image_1_0_V_loa_reg_1260_pp0_iter2_reg;
reg   [17:0] in_image_1_0_V_loa_reg_1260_pp0_iter3_reg;
reg   [17:0] in_image_1_0_V_loa_reg_1260_pp0_iter4_reg;
reg   [17:0] in_image_1_0_V_loa_reg_1260_pp0_iter5_reg;
reg  signed [17:0] in_image_1_0_V_loa_reg_1260_pp0_iter6_reg;
reg   [17:0] in_image_1_1_V_loa_reg_1265;
reg   [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter2_reg;
reg   [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter3_reg;
reg   [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter4_reg;
reg   [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter5_reg;
reg   [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter6_reg;
reg  signed [17:0] in_image_1_1_V_loa_reg_1265_pp0_iter7_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter2_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter3_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter4_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter5_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter6_reg;
reg   [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter7_reg;
reg  signed [17:0] in_image_1_2_V_loa_reg_1270_pp0_iter8_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter2_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter3_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter4_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter5_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter6_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter7_reg;
reg   [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter8_reg;
reg  signed [17:0] in_image_1_3_V_loa_reg_1275_pp0_iter9_reg;
wire  signed [34:0] grp_fu_1103_p2;
reg  signed [34:0] p_Val2_14_i_reg_1290;
reg   [24:0] tmp_s_reg_1315;
reg   [24:0] tmp_66_reg_1330;
reg   [24:0] tmp_67_reg_1345;
reg   [24:0] tmp_68_reg_1360;
reg   [24:0] tmp_69_reg_1375;
reg   [24:0] tmp_70_reg_1390;
reg   [24:0] tmp_71_reg_1405;
reg   [24:0] tmp_72_reg_1410;
wire   [31:0] p_x_1_8_i_fu_1085_p3;
reg    ap_enable_reg_pp0_iter12;
wire   [31:0] p_8_i_fu_1093_p3;
reg    rewind_ap_ready;
reg    rewind_ap_ready_reg;
reg    rewind_enable;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg   [9:0] ap_phi_mux_i_i_phi_fu_434_p6;
reg   [47:0] ap_phi_mux_p_Val2_rewind_phi_fu_448_p6;
reg   [17:0] ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6;
reg   [17:0] ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6;
reg   [17:0] ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6;
reg   [17:0] ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6;
reg   [17:0] ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6;
reg   [17:0] ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6;
reg   [17:0] ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6;
reg   [17:0] ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6;
reg   [17:0] ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6;
wire  signed [47:0] ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688;
wire  signed [17:0] ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701;
wire   [63:0] tmp_i_fu_742_p1;
wire  signed [63:0] tmp_90_cast_fu_1056_p1;
wire   [29:0] arrayNo_cast_i_fu_1006_p4;
wire   [24:0] tmp_fu_781_p4;
wire  signed [34:0] grp_fu_1109_p3;
wire  signed [34:0] grp_fu_1118_p3;
wire  signed [34:0] grp_fu_1127_p3;
wire  signed [34:0] grp_fu_1136_p3;
wire  signed [34:0] grp_fu_1145_p3;
wire  signed [34:0] grp_fu_1154_p3;
wire  signed [34:0] grp_fu_1163_p3;
wire  signed [34:0] grp_fu_1172_p3;
wire   [55:0] tmp_89_8_i_fu_972_p3;
wire  signed [55:0] tmp_90_8_cast_i_fu_979_p1;
wire   [55:0] p_Val2_18_8_i_fu_983_p2;
wire   [1:0] tmp_19_fu_1016_p1;
wire   [6:0] tmp_73_fu_1020_p3;
wire   [3:0] tmp_74_fu_1032_p3;
wire   [7:0] p_shl_cast_fu_1028_p1;
wire   [7:0] p_shl1_cast_fu_1040_p1;
wire   [7:0] tmp_18_fu_968_p1;
wire   [7:0] tmp_75_fu_1044_p2;
wire   [7:0] tmp_76_fu_1050_p2;
wire   [31:0] y_5_8_i_fu_1067_p2;
wire   [0:0] tmp_93_8_i_fu_1073_p2;
wire   [31:0] x_5_8_i_fu_1079_p2;
wire   [34:0] grp_fu_1109_p2;
wire   [34:0] grp_fu_1118_p2;
wire   [34:0] grp_fu_1127_p2;
wire   [34:0] grp_fu_1136_p2;
wire   [34:0] grp_fu_1145_p2;
wire   [34:0] grp_fu_1154_p2;
wire   [34:0] grp_fu_1163_p2;
wire   [34:0] grp_fu_1172_p2;
reg    grp_fu_1103_ce;
reg    grp_fu_1109_ce;
reg    grp_fu_1118_ce;
reg    grp_fu_1127_ce;
reg    grp_fu_1136_ce;
reg    grp_fu_1145_ce;
reg    grp_fu_1154_ce;
reg    grp_fu_1163_ce;
reg    grp_fu_1172_ce;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to11;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_236;
reg    ap_condition_127;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 rewind_ap_ready_reg = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

CNN_mul_mul_18s_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 35 ))
CNN_mul_mul_18s_1bkb_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_0_V_loa_reg_1235),
    .din1(kernel_0_V_load_phi_reg_701),
    .ce(grp_fu_1103_ce),
    .dout(grp_fu_1103_p2)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_1_V_loa_reg_1240_pp0_iter2_reg),
    .din1(kernel_1_V_load_phi_reg_688_pp0_iter2_reg),
    .din2(grp_fu_1109_p2),
    .ce(grp_fu_1109_ce),
    .dout(grp_fu_1109_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_2_V_loa_reg_1245_pp0_iter3_reg),
    .din1(kernel_2_V_load_phi_reg_675_pp0_iter3_reg),
    .din2(grp_fu_1118_p2),
    .ce(grp_fu_1118_ce),
    .dout(grp_fu_1118_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_3_V_loa_reg_1250_pp0_iter4_reg),
    .din1(kernel_3_V_load_phi_reg_662_pp0_iter4_reg),
    .din2(grp_fu_1127_p2),
    .ce(grp_fu_1127_ce),
    .dout(grp_fu_1127_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_4_V_loa_reg_1255_pp0_iter5_reg),
    .din1(kernel_4_V_load_phi_reg_649_pp0_iter5_reg),
    .din2(grp_fu_1136_p2),
    .ce(grp_fu_1136_ce),
    .dout(grp_fu_1136_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_1_0_V_loa_reg_1260_pp0_iter6_reg),
    .din1(kernel_5_V_load_phi_reg_636_pp0_iter6_reg),
    .din2(grp_fu_1145_p2),
    .ce(grp_fu_1145_ce),
    .dout(grp_fu_1145_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_1_1_V_loa_reg_1265_pp0_iter7_reg),
    .din1(kernel_6_V_load_phi_reg_623_pp0_iter7_reg),
    .din2(grp_fu_1154_p2),
    .ce(grp_fu_1154_ce),
    .dout(grp_fu_1154_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_1_2_V_loa_reg_1270_pp0_iter8_reg),
    .din1(kernel_7_V_load_phi_reg_610_pp0_iter8_reg),
    .din2(grp_fu_1163_p2),
    .ce(grp_fu_1163_ce),
    .dout(grp_fu_1163_p3)
);

CNN_mac_muladd_18cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 35 ),
    .dout_WIDTH( 35 ))
CNN_mac_muladd_18cud_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_1_3_V_loa_reg_1275_pp0_iter9_reg),
    .din1(kernel_8_V_load_phi_reg_597_pp0_iter9_reg),
    .din2(grp_fu_1172_p2),
    .ce(grp_fu_1172_ce),
    .dout(grp_fu_1172_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= rewind_enable;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rewind_ap_ready_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (ap_start == 1'b1))) begin
            rewind_ap_ready_reg <= rewind_ap_ready;
        end else begin
            rewind_ap_ready_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        do_init_reg_414 <= 1'd0;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        do_init_reg_414 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_67_reg_1231 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_i_reg_430 <= i_reg_1226;
    end else if ((((tmp_i_67_reg_1231 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        i_i_reg_430 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_0_V_load_phi_reg_701 <= ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_0_V_load_phi_reg_701 <= kernel_0_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_0_V_load_phi_reg_701 <= ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_1_V_load_phi_reg_688 <= ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_1_V_load_phi_reg_688 <= kernel_1_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_1_V_load_phi_reg_688 <= ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_2_V_load_phi_reg_675 <= ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_2_V_load_phi_reg_675 <= kernel_2_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_2_V_load_phi_reg_675 <= ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_3_V_load_phi_reg_662 <= ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_3_V_load_phi_reg_662 <= kernel_3_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_3_V_load_phi_reg_662 <= ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_4_V_load_phi_reg_649 <= ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_4_V_load_phi_reg_649 <= kernel_4_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_4_V_load_phi_reg_649 <= ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_5_V_load_phi_reg_636 <= ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_5_V_load_phi_reg_636 <= kernel_5_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_5_V_load_phi_reg_636 <= ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_6_V_load_phi_reg_623 <= ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_6_V_load_phi_reg_623 <= kernel_6_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_6_V_load_phi_reg_623 <= ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_7_V_load_phi_reg_610 <= ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_7_V_load_phi_reg_610 <= kernel_7_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_7_V_load_phi_reg_610 <= ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            kernel_8_V_load_phi_reg_597 <= ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            kernel_8_V_load_phi_reg_597 <= kernel_8_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            kernel_8_V_load_phi_reg_597 <= ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd0)) begin
            p_Val2_phi_reg_584 <= ap_phi_mux_p_Val2_rewind_phi_fu_448_p6;
        end else if ((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) begin
            p_Val2_phi_reg_584 <= bias_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            p_Val2_phi_reg_584 <= ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_i_reg_728 <= p_x_1_8_i_fu_1085_p3;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        x_i_reg_728 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_i_reg_714 <= p_8_i_fu_1093_p3;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        y_i_reg_714 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_1226 <= i_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_0_V_loa_reg_1235 <= in_image_0_0_V_q0;
        in_image_0_1_V_loa_reg_1240 <= in_image_0_1_V_q0;
        in_image_0_2_V_loa_reg_1245 <= in_image_0_2_V_q0;
        in_image_0_3_V_loa_reg_1250 <= in_image_0_3_V_q0;
        in_image_0_4_V_loa_reg_1255 <= in_image_0_4_V_q0;
        in_image_1_0_V_loa_reg_1260 <= in_image_1_0_V_q0;
        in_image_1_1_V_loa_reg_1265 <= in_image_1_1_V_q0;
        in_image_1_2_V_loa_reg_1270 <= in_image_1_2_V_q0;
        in_image_1_3_V_loa_reg_1275 <= in_image_1_3_V_q0;
        tmp_i_67_reg_1231 <= tmp_i_67_fu_761_p2;
        tmp_i_67_reg_1231_pp0_iter1_reg <= tmp_i_67_reg_1231;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        in_image_0_1_V_loa_reg_1240_pp0_iter2_reg <= in_image_0_1_V_loa_reg_1240;
        in_image_0_2_V_loa_reg_1245_pp0_iter2_reg <= in_image_0_2_V_loa_reg_1245;
        in_image_0_2_V_loa_reg_1245_pp0_iter3_reg <= in_image_0_2_V_loa_reg_1245_pp0_iter2_reg;
        in_image_0_3_V_loa_reg_1250_pp0_iter2_reg <= in_image_0_3_V_loa_reg_1250;
        in_image_0_3_V_loa_reg_1250_pp0_iter3_reg <= in_image_0_3_V_loa_reg_1250_pp0_iter2_reg;
        in_image_0_3_V_loa_reg_1250_pp0_iter4_reg <= in_image_0_3_V_loa_reg_1250_pp0_iter3_reg;
        in_image_0_4_V_loa_reg_1255_pp0_iter2_reg <= in_image_0_4_V_loa_reg_1255;
        in_image_0_4_V_loa_reg_1255_pp0_iter3_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter2_reg;
        in_image_0_4_V_loa_reg_1255_pp0_iter4_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter3_reg;
        in_image_0_4_V_loa_reg_1255_pp0_iter5_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter4_reg;
        in_image_1_0_V_loa_reg_1260_pp0_iter2_reg <= in_image_1_0_V_loa_reg_1260;
        in_image_1_0_V_loa_reg_1260_pp0_iter3_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter2_reg;
        in_image_1_0_V_loa_reg_1260_pp0_iter4_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter3_reg;
        in_image_1_0_V_loa_reg_1260_pp0_iter5_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter4_reg;
        in_image_1_0_V_loa_reg_1260_pp0_iter6_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter5_reg;
        in_image_1_1_V_loa_reg_1265_pp0_iter2_reg <= in_image_1_1_V_loa_reg_1265;
        in_image_1_1_V_loa_reg_1265_pp0_iter3_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter2_reg;
        in_image_1_1_V_loa_reg_1265_pp0_iter4_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter3_reg;
        in_image_1_1_V_loa_reg_1265_pp0_iter5_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter4_reg;
        in_image_1_1_V_loa_reg_1265_pp0_iter6_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter5_reg;
        in_image_1_1_V_loa_reg_1265_pp0_iter7_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter6_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter2_reg <= in_image_1_2_V_loa_reg_1270;
        in_image_1_2_V_loa_reg_1270_pp0_iter3_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter2_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter4_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter3_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter5_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter4_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter6_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter5_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter7_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter6_reg;
        in_image_1_2_V_loa_reg_1270_pp0_iter8_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter7_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter2_reg <= in_image_1_3_V_loa_reg_1275;
        in_image_1_3_V_loa_reg_1275_pp0_iter3_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter2_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter4_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter3_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter5_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter4_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter6_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter5_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter7_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter6_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter8_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter7_reg;
        in_image_1_3_V_loa_reg_1275_pp0_iter9_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter8_reg;
        kernel_1_V_load_phi_reg_688_pp0_iter2_reg <= kernel_1_V_load_phi_reg_688;
        kernel_2_V_load_phi_reg_675_pp0_iter2_reg <= kernel_2_V_load_phi_reg_675;
        kernel_2_V_load_phi_reg_675_pp0_iter3_reg <= kernel_2_V_load_phi_reg_675_pp0_iter2_reg;
        kernel_3_V_load_phi_reg_662_pp0_iter2_reg <= kernel_3_V_load_phi_reg_662;
        kernel_3_V_load_phi_reg_662_pp0_iter3_reg <= kernel_3_V_load_phi_reg_662_pp0_iter2_reg;
        kernel_3_V_load_phi_reg_662_pp0_iter4_reg <= kernel_3_V_load_phi_reg_662_pp0_iter3_reg;
        kernel_4_V_load_phi_reg_649_pp0_iter2_reg <= kernel_4_V_load_phi_reg_649;
        kernel_4_V_load_phi_reg_649_pp0_iter3_reg <= kernel_4_V_load_phi_reg_649_pp0_iter2_reg;
        kernel_4_V_load_phi_reg_649_pp0_iter4_reg <= kernel_4_V_load_phi_reg_649_pp0_iter3_reg;
        kernel_4_V_load_phi_reg_649_pp0_iter5_reg <= kernel_4_V_load_phi_reg_649_pp0_iter4_reg;
        kernel_5_V_load_phi_reg_636_pp0_iter2_reg <= kernel_5_V_load_phi_reg_636;
        kernel_5_V_load_phi_reg_636_pp0_iter3_reg <= kernel_5_V_load_phi_reg_636_pp0_iter2_reg;
        kernel_5_V_load_phi_reg_636_pp0_iter4_reg <= kernel_5_V_load_phi_reg_636_pp0_iter3_reg;
        kernel_5_V_load_phi_reg_636_pp0_iter5_reg <= kernel_5_V_load_phi_reg_636_pp0_iter4_reg;
        kernel_5_V_load_phi_reg_636_pp0_iter6_reg <= kernel_5_V_load_phi_reg_636_pp0_iter5_reg;
        kernel_6_V_load_phi_reg_623_pp0_iter2_reg <= kernel_6_V_load_phi_reg_623;
        kernel_6_V_load_phi_reg_623_pp0_iter3_reg <= kernel_6_V_load_phi_reg_623_pp0_iter2_reg;
        kernel_6_V_load_phi_reg_623_pp0_iter4_reg <= kernel_6_V_load_phi_reg_623_pp0_iter3_reg;
        kernel_6_V_load_phi_reg_623_pp0_iter5_reg <= kernel_6_V_load_phi_reg_623_pp0_iter4_reg;
        kernel_6_V_load_phi_reg_623_pp0_iter6_reg <= kernel_6_V_load_phi_reg_623_pp0_iter5_reg;
        kernel_6_V_load_phi_reg_623_pp0_iter7_reg <= kernel_6_V_load_phi_reg_623_pp0_iter6_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter2_reg <= kernel_7_V_load_phi_reg_610;
        kernel_7_V_load_phi_reg_610_pp0_iter3_reg <= kernel_7_V_load_phi_reg_610_pp0_iter2_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter4_reg <= kernel_7_V_load_phi_reg_610_pp0_iter3_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter5_reg <= kernel_7_V_load_phi_reg_610_pp0_iter4_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter6_reg <= kernel_7_V_load_phi_reg_610_pp0_iter5_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter7_reg <= kernel_7_V_load_phi_reg_610_pp0_iter6_reg;
        kernel_7_V_load_phi_reg_610_pp0_iter8_reg <= kernel_7_V_load_phi_reg_610_pp0_iter7_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter2_reg <= kernel_8_V_load_phi_reg_597;
        kernel_8_V_load_phi_reg_597_pp0_iter3_reg <= kernel_8_V_load_phi_reg_597_pp0_iter2_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter4_reg <= kernel_8_V_load_phi_reg_597_pp0_iter3_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter5_reg <= kernel_8_V_load_phi_reg_597_pp0_iter4_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter6_reg <= kernel_8_V_load_phi_reg_597_pp0_iter5_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter7_reg <= kernel_8_V_load_phi_reg_597_pp0_iter6_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter8_reg <= kernel_8_V_load_phi_reg_597_pp0_iter7_reg;
        kernel_8_V_load_phi_reg_597_pp0_iter9_reg <= kernel_8_V_load_phi_reg_597_pp0_iter8_reg;
        p_Val2_14_i_reg_1290 <= grp_fu_1103_p2;
        p_Val2_phi_reg_584_pp0_iter10_reg <= p_Val2_phi_reg_584_pp0_iter9_reg;
        p_Val2_phi_reg_584_pp0_iter11_reg <= p_Val2_phi_reg_584_pp0_iter10_reg;
        p_Val2_phi_reg_584_pp0_iter2_reg <= p_Val2_phi_reg_584;
        p_Val2_phi_reg_584_pp0_iter3_reg <= p_Val2_phi_reg_584_pp0_iter2_reg;
        p_Val2_phi_reg_584_pp0_iter4_reg <= p_Val2_phi_reg_584_pp0_iter3_reg;
        p_Val2_phi_reg_584_pp0_iter5_reg <= p_Val2_phi_reg_584_pp0_iter4_reg;
        p_Val2_phi_reg_584_pp0_iter6_reg <= p_Val2_phi_reg_584_pp0_iter5_reg;
        p_Val2_phi_reg_584_pp0_iter7_reg <= p_Val2_phi_reg_584_pp0_iter6_reg;
        p_Val2_phi_reg_584_pp0_iter8_reg <= p_Val2_phi_reg_584_pp0_iter7_reg;
        p_Val2_phi_reg_584_pp0_iter9_reg <= p_Val2_phi_reg_584_pp0_iter8_reg;
        tmp_66_reg_1330 <= {{grp_fu_1118_p3[34:10]}};
        tmp_67_reg_1345 <= {{grp_fu_1127_p3[34:10]}};
        tmp_68_reg_1360 <= {{grp_fu_1136_p3[34:10]}};
        tmp_69_reg_1375 <= {{grp_fu_1145_p3[34:10]}};
        tmp_70_reg_1390 <= {{grp_fu_1154_p3[34:10]}};
        tmp_71_reg_1405 <= {{grp_fu_1163_p3[34:10]}};
        tmp_72_reg_1410 <= {{grp_fu_1172_p3[34:10]}};
        tmp_i_67_reg_1231_pp0_iter10_reg <= tmp_i_67_reg_1231_pp0_iter9_reg;
        tmp_i_67_reg_1231_pp0_iter11_reg <= tmp_i_67_reg_1231_pp0_iter10_reg;
        tmp_i_67_reg_1231_pp0_iter2_reg <= tmp_i_67_reg_1231_pp0_iter1_reg;
        tmp_i_67_reg_1231_pp0_iter3_reg <= tmp_i_67_reg_1231_pp0_iter2_reg;
        tmp_i_67_reg_1231_pp0_iter4_reg <= tmp_i_67_reg_1231_pp0_iter3_reg;
        tmp_i_67_reg_1231_pp0_iter5_reg <= tmp_i_67_reg_1231_pp0_iter4_reg;
        tmp_i_67_reg_1231_pp0_iter6_reg <= tmp_i_67_reg_1231_pp0_iter5_reg;
        tmp_i_67_reg_1231_pp0_iter7_reg <= tmp_i_67_reg_1231_pp0_iter6_reg;
        tmp_i_67_reg_1231_pp0_iter8_reg <= tmp_i_67_reg_1231_pp0_iter7_reg;
        tmp_i_67_reg_1231_pp0_iter9_reg <= tmp_i_67_reg_1231_pp0_iter8_reg;
        tmp_s_reg_1315 <= {{grp_fu_1109_p3[34:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_0_V_load_rew_reg_570 <= kernel_0_V_load_phi_reg_701;
        kernel_1_V_load_rew_reg_556 <= kernel_1_V_load_phi_reg_688;
        kernel_2_V_load_rew_reg_542 <= kernel_2_V_load_phi_reg_675;
        kernel_3_V_load_rew_reg_528 <= kernel_3_V_load_phi_reg_662;
        kernel_4_V_load_rew_reg_514 <= kernel_4_V_load_phi_reg_649;
        kernel_5_V_load_rew_reg_500 <= kernel_5_V_load_phi_reg_636;
        kernel_6_V_load_rew_reg_486 <= kernel_6_V_load_phi_reg_623;
        kernel_7_V_load_rew_reg_472 <= kernel_7_V_load_phi_reg_610;
        kernel_8_V_load_rew_reg_458 <= kernel_8_V_load_phi_reg_597;
        p_Val2_rewind_reg_444 <= p_Val2_phi_reg_584;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_418_p6 = 1'd1;
        end else if ((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_418_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_418_p6 = do_init_reg_414;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_418_p6 = do_init_reg_414;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_236)) begin
        if ((tmp_i_67_reg_1231 == 1'd1)) begin
            ap_phi_mux_i_i_phi_fu_434_p6 = 10'd0;
        end else if ((tmp_i_67_reg_1231 == 1'd0)) begin
            ap_phi_mux_i_i_phi_fu_434_p6 = i_reg_1226;
        end else begin
            ap_phi_mux_i_i_phi_fu_434_p6 = i_i_reg_430;
        end
    end else begin
        ap_phi_mux_i_i_phi_fu_434_p6 = i_i_reg_430;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6 = kernel_0_V_load_phi_reg_701;
    end else begin
        ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6 = kernel_0_V_load_rew_reg_570;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6 = kernel_1_V_load_phi_reg_688;
    end else begin
        ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6 = kernel_1_V_load_rew_reg_556;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6 = kernel_2_V_load_phi_reg_675;
    end else begin
        ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6 = kernel_2_V_load_rew_reg_542;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6 = kernel_3_V_load_phi_reg_662;
    end else begin
        ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6 = kernel_3_V_load_rew_reg_528;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6 = kernel_4_V_load_phi_reg_649;
    end else begin
        ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6 = kernel_4_V_load_rew_reg_514;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6 = kernel_5_V_load_phi_reg_636;
    end else begin
        ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6 = kernel_5_V_load_rew_reg_500;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6 = kernel_6_V_load_phi_reg_623;
    end else begin
        ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6 = kernel_6_V_load_rew_reg_486;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6 = kernel_7_V_load_phi_reg_610;
    end else begin
        ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6 = kernel_7_V_load_rew_reg_472;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6 = kernel_8_V_load_phi_reg_597;
    end else begin
        ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6 = kernel_8_V_load_rew_reg_458;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_p_Val2_rewind_phi_fu_448_p6 = p_Val2_phi_reg_584;
    end else begin
        ap_phi_mux_p_Val2_rewind_phi_fu_448_p6 = p_Val2_rewind_reg_444;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_V_blk_n = bias_V_empty_n;
    end else begin
        bias_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_V_read = 1'b1;
    end else begin
        bias_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1103_ce = 1'b1;
    end else begin
        grp_fu_1103_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1109_ce = 1'b1;
    end else begin
        grp_fu_1109_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1118_ce = 1'b1;
    end else begin
        grp_fu_1118_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1127_ce = 1'b1;
    end else begin
        grp_fu_1127_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1136_ce = 1'b1;
    end else begin
        grp_fu_1136_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1145_ce = 1'b1;
    end else begin
        grp_fu_1145_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1154_ce = 1'b1;
    end else begin
        grp_fu_1154_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1163_ce = 1'b1;
    end else begin
        grp_fu_1163_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1172_ce = 1'b1;
    end else begin
        grp_fu_1172_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_0_V_ce0 = 1'b1;
    end else begin
        in_image_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_1_V_ce0 = 1'b1;
    end else begin
        in_image_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_2_V_ce0 = 1'b1;
    end else begin
        in_image_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_3_V_ce0 = 1'b1;
    end else begin
        in_image_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_0_4_V_ce0 = 1'b1;
    end else begin
        in_image_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_1_0_V_ce0 = 1'b1;
    end else begin
        in_image_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_1_1_V_ce0 = 1'b1;
    end else begin
        in_image_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_1_2_V_ce0 = 1'b1;
    end else begin
        in_image_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_image_1_3_V_ce0 = 1'b1;
    end else begin
        in_image_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_67_reg_1231 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_0_V_blk_n = kernel_0_V_empty_n;
    end else begin
        kernel_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_0_V_read = 1'b1;
    end else begin
        kernel_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_1_V_blk_n = kernel_1_V_empty_n;
    end else begin
        kernel_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_1_V_read = 1'b1;
    end else begin
        kernel_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_2_V_blk_n = kernel_2_V_empty_n;
    end else begin
        kernel_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_2_V_read = 1'b1;
    end else begin
        kernel_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_3_V_blk_n = kernel_3_V_empty_n;
    end else begin
        kernel_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_3_V_read = 1'b1;
    end else begin
        kernel_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_4_V_blk_n = kernel_4_V_empty_n;
    end else begin
        kernel_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_4_V_read = 1'b1;
    end else begin
        kernel_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_5_V_blk_n = kernel_5_V_empty_n;
    end else begin
        kernel_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_5_V_read = 1'b1;
    end else begin
        kernel_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_6_V_blk_n = kernel_6_V_empty_n;
    end else begin
        kernel_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_6_V_read = 1'b1;
    end else begin
        kernel_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_7_V_blk_n = kernel_7_V_empty_n;
    end else begin
        kernel_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_7_V_read = 1'b1;
    end else begin
        kernel_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_8_V_blk_n = kernel_8_V_empty_n;
    end else begin
        kernel_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_8_V_read = 1'b1;
    end else begin
        kernel_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_0_V_ce0 = 1'b1;
    end else begin
        out_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_0_V_we0 = 1'b1;
    end else begin
        out_image_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_1_V_ce0 = 1'b1;
    end else begin
        out_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_1_V_we0 = 1'b1;
    end else begin
        out_image_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_2_V_ce0 = 1'b1;
    end else begin
        out_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd2) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_2_V_we0 = 1'b1;
    end else begin
        out_image_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_3_V_ce0 = 1'b1;
    end else begin
        out_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd3) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_3_V_we0 = 1'b1;
    end else begin
        out_image_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_4_V_ce0 = 1'b1;
    end else begin
        out_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd4) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_4_V_we0 = 1'b1;
    end else begin
        out_image_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_5_V_ce0 = 1'b1;
    end else begin
        out_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_i_fu_1006_p4 == 30'd5) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_5_V_we0 = 1'b1;
    end else begin
        out_image_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_6_V_ce0 = 1'b1;
    end else begin
        out_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo_cast_i_fu_1006_p4 == 30'd0) & ~(arrayNo_cast_i_fu_1006_p4 == 30'd1) & ~(arrayNo_cast_i_fu_1006_p4 == 30'd2) & ~(arrayNo_cast_i_fu_1006_p4 == 30'd3) & ~(arrayNo_cast_i_fu_1006_p4 == 30'd4) & ~(arrayNo_cast_i_fu_1006_p4 == 30'd5) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_image_6_V_we0 = 1'b1;
    end else begin
        out_image_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((rewind_ap_ready_reg == 1'b1) | ((tmp_i_67_fu_761_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        rewind_ap_ready = 1'b1;
    end else begin
        rewind_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((rewind_ap_ready_reg == 1'b0) & (ap_start == 1'b1))) begin
        rewind_enable = 1'b1;
    end else begin
        rewind_enable = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((kernel_8_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_7_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_6_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_5_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_4_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_3_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_2_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_1_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((bias_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_0_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((kernel_8_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_7_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_6_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_5_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_4_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_3_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_2_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_1_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((bias_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_0_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((kernel_8_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_7_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_6_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_5_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_4_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_3_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_2_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_1_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((bias_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)) | ((kernel_0_V_empty_n == 1'b0) & (ap_phi_mux_do_init_phi_fu_418_p6 == 1'd1)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_127 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_236 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = rewind_enable;

assign ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610 = 'bx;

assign ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597 = 'bx;

assign ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584 = 'bx;

assign ap_ready = internal_ap_ready;

assign arrayNo_cast_i_fu_1006_p4 = {{x_i_reg_728[31:2]}};

assign grp_fu_1109_p2 = {{tmp_fu_781_p4}, {10'd0}};

assign grp_fu_1118_p2 = {{tmp_s_reg_1315}, {10'd0}};

assign grp_fu_1127_p2 = {{tmp_66_reg_1330}, {10'd0}};

assign grp_fu_1136_p2 = {{tmp_67_reg_1345}, {10'd0}};

assign grp_fu_1145_p2 = {{tmp_68_reg_1360}, {10'd0}};

assign grp_fu_1154_p2 = {{tmp_69_reg_1375}, {10'd0}};

assign grp_fu_1163_p2 = {{tmp_70_reg_1390}, {10'd0}};

assign grp_fu_1172_p2 = {{tmp_71_reg_1405}, {10'd0}};

assign i_fu_755_p2 = (10'd1 + ap_phi_mux_i_i_phi_fu_434_p6);

assign in_image_0_0_V_address0 = tmp_i_fu_742_p1;

assign in_image_0_1_V_address0 = tmp_i_fu_742_p1;

assign in_image_0_2_V_address0 = tmp_i_fu_742_p1;

assign in_image_0_3_V_address0 = tmp_i_fu_742_p1;

assign in_image_0_4_V_address0 = tmp_i_fu_742_p1;

assign in_image_1_0_V_address0 = tmp_i_fu_742_p1;

assign in_image_1_1_V_address0 = tmp_i_fu_742_p1;

assign in_image_1_2_V_address0 = tmp_i_fu_742_p1;

assign in_image_1_3_V_address0 = tmp_i_fu_742_p1;

assign out_image_0_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_0_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_1_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_1_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_2_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_2_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_3_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_3_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_4_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_4_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_5_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_5_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign out_image_6_V_address0 = tmp_90_cast_fu_1056_p1;

assign out_image_6_V_d0 = {{p_Val2_18_8_i_fu_983_p2[55:31]}};

assign p_8_i_fu_1093_p3 = ((tmp_93_8_i_fu_1073_p2[0:0] === 1'b1) ? 32'd0 : y_5_8_i_fu_1067_p2);

assign p_Val2_18_8_i_fu_983_p2 = ($signed(tmp_89_8_i_fu_972_p3) + $signed(tmp_90_8_cast_i_fu_979_p1));

assign p_shl1_cast_fu_1040_p1 = tmp_74_fu_1032_p3;

assign p_shl_cast_fu_1028_p1 = tmp_73_fu_1020_p3;

assign p_x_1_8_i_fu_1085_p3 = ((tmp_93_8_i_fu_1073_p2[0:0] === 1'b1) ? x_5_8_i_fu_1079_p2 : x_i_reg_728);

assign tmp_18_fu_968_p1 = y_i_reg_714[7:0];

assign tmp_19_fu_1016_p1 = x_i_reg_728[1:0];

assign tmp_73_fu_1020_p3 = {{tmp_19_fu_1016_p1}, {5'd0}};

assign tmp_74_fu_1032_p3 = {{tmp_19_fu_1016_p1}, {2'd0}};

assign tmp_75_fu_1044_p2 = (p_shl_cast_fu_1028_p1 - p_shl1_cast_fu_1040_p1);

assign tmp_76_fu_1050_p2 = (tmp_18_fu_968_p1 + tmp_75_fu_1044_p2);

assign tmp_89_8_i_fu_972_p3 = {{tmp_72_reg_1410}, {31'd0}};

assign tmp_90_8_cast_i_fu_979_p1 = p_Val2_phi_reg_584_pp0_iter11_reg;

assign tmp_90_cast_fu_1056_p1 = $signed(tmp_76_fu_1050_p2);

assign tmp_93_8_i_fu_1073_p2 = ((y_5_8_i_fu_1067_p2 == 32'd28) ? 1'b1 : 1'b0);

assign tmp_fu_781_p4 = {{p_Val2_14_i_reg_1290[34:10]}};

assign tmp_i_67_fu_761_p2 = ((ap_phi_mux_i_i_phi_fu_434_p6 == 10'd783) ? 1'b1 : 1'b0);

assign tmp_i_fu_742_p1 = ap_phi_mux_i_i_phi_fu_434_p6;

assign x_5_8_i_fu_1079_p2 = (x_i_reg_728 + 32'd1);

assign y_5_8_i_fu_1067_p2 = (y_i_reg_714 + 32'd1);

endmodule //conv2d_3x3_1chan_rev
