-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d_3x3_4chan_rev is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_0_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_0_V_empty_n : IN STD_LOGIC;
    bias_0_V_read : OUT STD_LOGIC;
    bias_1_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_1_V_empty_n : IN STD_LOGIC;
    bias_1_V_read : OUT STD_LOGIC;
    bias_2_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_2_V_empty_n : IN STD_LOGIC;
    bias_2_V_read : OUT STD_LOGIC;
    bias_3_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_3_V_empty_n : IN STD_LOGIC;
    bias_3_V_read : OUT STD_LOGIC;
    in_image_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_V_ce0 : OUT STD_LOGIC;
    in_image_0_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_V_ce1 : OUT STD_LOGIC;
    in_image_0_V_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_V_ce0 : OUT STD_LOGIC;
    in_image_1_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_V_ce1 : OUT STD_LOGIC;
    in_image_1_V_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
    kernel_0_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_0_V_ce0 : OUT STD_LOGIC;
    kernel_0_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_1_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_1_V_ce0 : OUT STD_LOGIC;
    kernel_1_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_2_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_2_V_ce0 : OUT STD_LOGIC;
    kernel_2_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_3_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_3_V_ce0 : OUT STD_LOGIC;
    kernel_3_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_4_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_4_V_ce0 : OUT STD_LOGIC;
    kernel_4_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_5_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_5_V_ce0 : OUT STD_LOGIC;
    kernel_5_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_6_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_6_V_ce0 : OUT STD_LOGIC;
    kernel_6_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_7_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_7_V_ce0 : OUT STD_LOGIC;
    kernel_7_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_8_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_8_V_ce0 : OUT STD_LOGIC;
    kernel_8_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    out_image_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_0_V_ce0 : OUT STD_LOGIC;
    out_image_0_V_we0 : OUT STD_LOGIC;
    out_image_0_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_1_V_ce0 : OUT STD_LOGIC;
    out_image_1_V_we0 : OUT STD_LOGIC;
    out_image_1_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_2_V_ce0 : OUT STD_LOGIC;
    out_image_2_V_we0 : OUT STD_LOGIC;
    out_image_2_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_3_V_ce0 : OUT STD_LOGIC;
    out_image_3_V_we0 : OUT STD_LOGIC;
    out_image_3_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_4_V_ce0 : OUT STD_LOGIC;
    out_image_4_V_we0 : OUT STD_LOGIC;
    out_image_4_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_5_V_ce0 : OUT STD_LOGIC;
    out_image_5_V_we0 : OUT STD_LOGIC;
    out_image_5_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_6_V_ce0 : OUT STD_LOGIC;
    out_image_6_V_we0 : OUT STD_LOGIC;
    out_image_6_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of conv2d_3x3_4chan_rev is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv31_5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000101";
    constant ap_const_lv31_4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_const_lv31_3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000011";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_C4 : STD_LOGIC_VECTOR (9 downto 0) := "0011000100";
    constant ap_const_lv10_188 : STD_LOGIC_VECTOR (9 downto 0) := "0110001000";
    constant ap_const_lv11_24C : STD_LOGIC_VECTOR (10 downto 0) := "01001001100";
    constant ap_const_lv11_310 : STD_LOGIC_VECTOR (10 downto 0) := "01100010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal exitcond_flatten_reg_1410 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_535_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bias_0_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal bias_1_V_blk_n : STD_LOGIC;
    signal bias_2_V_blk_n : STD_LOGIC;
    signal bias_3_V_blk_n : STD_LOGIC;
    signal tmp_i1_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_472_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_472_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i_reg_487 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_i_reg_501 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_515 : STD_LOGIC_VECTOR (9 downto 0);
    signal do_init_reg_530 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_3_V_load_rewin_reg_547 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_2_V_load_rewin_reg_562 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_1_V_load_rewin_reg_577 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_0_V_load_rewin_reg_592 : STD_LOGIC_VECTOR (47 downto 0);
    signal y_i_reg_607 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_621 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_3_V_load_phi_reg_635 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_2_V_load_phi_reg_647 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_1_V_load_phi_reg_659 : STD_LOGIC_VECTOR (47 downto 0);
    signal bias_0_V_load_phi_reg_671 : STD_LOGIC_VECTOR (47 downto 0);
    signal reg_683 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_687 : STD_LOGIC_VECTOR (24 downto 0);
    signal reg_691 : STD_LOGIC_VECTOR (24 downto 0);
    signal i_i_mid2_fu_701_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_i_mid2_reg_1182 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_i_mid2_fu_709_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_i_mid2_reg_1188 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_i_mid2_reg_1188_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_i_mid2_reg_1188_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_50_i_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_i_reg_1195 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i_reg_1205 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_reg_1220 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_756_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_1250 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_1250_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_reg_1250_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_i_cast1_fu_760_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_i_cast1_reg_1255 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_0_V_load_reg_1280 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_1_V_load_reg_1285 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_reg_1310 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_V_load_2_reg_1320 : STD_LOGIC_VECTOR (24 downto 0);
    signal kernel_2_V_load_reg_1355 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_reg_1360 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_reg_1365 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_reg_1370 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_reg_1385 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_reg_1390 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_V_load_3_reg_1395 : STD_LOGIC_VECTOR (24 downto 0);
    signal i_fu_806_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_1400 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1405 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1410_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1128_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_i_reg_1414 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1134_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_1_i_reg_1419 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1140_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_6_i_reg_1444 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1146_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_2_i_reg_1459 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1152_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_3_i_reg_1464 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1158_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_7_i_reg_1489 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp1_fu_877_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp1_reg_1504 : STD_LOGIC_VECTOR (47 downto 0);
    signal indvar_flatten_next_fu_883_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1509 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1164_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_4_i_reg_1514 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1170_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_5_i_reg_1519 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1176_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_8_i_reg_1524 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_fu_909_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_reg_1529 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp4_fu_949_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp4_reg_1554 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp5_fu_961_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp5_reg_1559 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_i_mid2_fu_967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_mid2_reg_1564 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_i_mid2_fu_975_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_i_mid2_reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_8_i_reg_1575 : STD_LOGIC_VECTOR (47 downto 0);
    signal arrayNo_cast_i_reg_1586 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_65_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_reg_1590 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_x_1_8_i_fu_1111_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_8_i_fu_1118_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rewind_ap_ready : STD_LOGIC;
    signal rewind_ap_ready_reg : STD_LOGIC := '0';
    signal rewind_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_tmp_i1_phi_fu_476_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_i_phi_fu_491_p6 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_k_i_phi_fu_505_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_519_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_bias_3_V_load_phi_reg_635 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_bias_3_V_load_phi_reg_635 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter0_bias_2_V_load_phi_reg_647 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_bias_2_V_load_phi_reg_647 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter0_bias_1_V_load_phi_reg_659 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_bias_1_V_load_phi_reg_659 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter0_bias_0_V_load_phi_reg_671 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_bias_0_V_load_phi_reg_671 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_69_cast_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_71_cast_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_cast_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_cast_fu_1085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_695_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_51_i_cast_fu_729_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_733_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_fu_745_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_60_fu_763_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_61_fu_775_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_1_i_fu_850_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_i_fu_843_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_3_i_fu_896_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_2_i_fu_889_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp2_fu_903_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_5_i_fu_921_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_4_i_fu_914_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_8_i_fu_942_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_7_i_fu_935_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_68_6_i_fu_928_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp6_fu_955_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp3_fu_983_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_10_8_i_fu_987_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_21_fu_1004_p6 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_74_8_cast_i_fu_1017_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_73_8_i_fu_996_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_13_8_i_fu_1021_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_17_fu_1047_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1060_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_fu_1051_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_cast_fu_1069_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_fu_1073_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_992_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_4_8_i_fu_1095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_8_i_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_4_8_i_fu_1106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1128_ce : STD_LOGIC;
    signal grp_fu_1134_ce : STD_LOGIC;
    signal grp_fu_1140_ce : STD_LOGIC;
    signal grp_fu_1146_ce : STD_LOGIC;
    signal grp_fu_1152_ce : STD_LOGIC;
    signal grp_fu_1158_ce : STD_LOGIC;
    signal grp_fu_1164_ce : STD_LOGIC;
    signal grp_fu_1170_ce : STD_LOGIC;
    signal grp_fu_1176_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_472 : BOOLEAN;
    signal ap_condition_488 : BOOLEAN;

    component CNN_mux_42_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (47 downto 0);
        din1 : IN STD_LOGIC_VECTOR (47 downto 0);
        din2 : IN STD_LOGIC_VECTOR (47 downto 0);
        din3 : IN STD_LOGIC_VECTOR (47 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component CNN_mul_mul_18s_2g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;



begin
    CNN_mux_42_48_1_1_U152 : component CNN_mux_42_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 48,
        din1_WIDTH => 48,
        din2_WIDTH => 48,
        din3_WIDTH => 48,
        din4_WIDTH => 2,
        dout_WIDTH => 48)
    port map (
        din0 => ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671,
        din1 => ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659,
        din2 => ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647,
        din3 => ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635,
        din4 => tmp_16_reg_1250_pp0_iter2_reg,
        dout => tmp_21_fu_1004_p6);

    CNN_mul_mul_18s_2g8j_U153 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_0_V_load_reg_1280,
        din1 => reg_683,
        ce => grp_fu_1128_ce,
        dout => grp_fu_1128_p2);

    CNN_mul_mul_18s_2g8j_U154 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_1_V_load_reg_1285,
        din1 => reg_687,
        ce => grp_fu_1134_ce,
        dout => grp_fu_1134_p2);

    CNN_mul_mul_18s_2g8j_U155 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_6_V_load_reg_1310,
        din1 => reg_691,
        ce => grp_fu_1140_ce,
        dout => grp_fu_1140_p2);

    CNN_mul_mul_18s_2g8j_U156 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_2_V_load_reg_1355,
        din1 => reg_683,
        ce => grp_fu_1146_ce,
        dout => grp_fu_1146_p2);

    CNN_mul_mul_18s_2g8j_U157 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_3_V_load_reg_1360,
        din1 => reg_687,
        ce => grp_fu_1152_ce,
        dout => grp_fu_1152_p2);

    CNN_mul_mul_18s_2g8j_U158 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_7_V_load_reg_1385,
        din1 => in_image_1_V_load_2_reg_1320,
        ce => grp_fu_1158_ce,
        dout => grp_fu_1158_p2);

    CNN_mul_mul_18s_2g8j_U159 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_4_V_load_reg_1365,
        din1 => reg_683,
        ce => grp_fu_1164_ce,
        dout => grp_fu_1164_p2);

    CNN_mul_mul_18s_2g8j_U160 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_5_V_load_reg_1370,
        din1 => reg_691,
        ce => grp_fu_1170_ce,
        dout => grp_fu_1170_p2);

    CNN_mul_mul_18s_2g8j_U161 : component CNN_mul_mul_18s_2g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_8_V_load_reg_1390,
        din1 => in_image_1_V_load_3_reg_1395,
        ce => grp_fu_1176_ce,
        dout => grp_fu_1176_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= rewind_enable;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rewind_ap_ready_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rewind_ap_ready_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
                    rewind_ap_ready_reg <= rewind_ap_ready;
                else 
                    rewind_ap_ready_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_do_init_phi_fu_535_p6 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671 <= bias_0_V_load_rewin_reg_592;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671 <= bias_0_V_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671 <= ap_phi_reg_pp0_iter1_bias_0_V_load_phi_reg_671;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_do_init_phi_fu_535_p6 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659 <= bias_1_V_load_rewin_reg_577;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659 <= bias_1_V_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659 <= ap_phi_reg_pp0_iter1_bias_1_V_load_phi_reg_659;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_do_init_phi_fu_535_p6 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647 <= bias_2_V_load_rewin_reg_562;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647 <= bias_2_V_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647 <= ap_phi_reg_pp0_iter1_bias_2_V_load_phi_reg_647;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_do_init_phi_fu_535_p6 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635 <= bias_3_V_load_rewin_reg_547;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635 <= bias_3_V_dout;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635 <= ap_phi_reg_pp0_iter1_bias_3_V_load_phi_reg_635;
            end if; 
        end if;
    end process;

    do_init_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                do_init_reg_530 <= ap_const_lv1_0;
            elsif ((((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_530 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i_i_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_i_reg_487 <= i_reg_1400;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i_i_reg_487 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1410 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                indvar_flatten_reg_515 <= indvar_flatten_next_reg_1509;
            elsif ((((exitcond_flatten_reg_1410 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten_reg_515 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    k_i_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k_i_reg_501 <= k_i_mid2_reg_1188;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                k_i_reg_501 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    tmp_i1_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_i1_reg_472 <= tmp_i_reg_1405;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                tmp_i1_reg_472 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    x_i_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                x_i_reg_621 <= p_x_1_8_i_fu_1111_p3;
            elsif ((((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                x_i_reg_621 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_i_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                y_i_reg_607 <= p_8_i_fu_1118_p3;
            elsif ((((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                y_i_reg_607 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_bias_0_V_load_phi_reg_671 <= ap_phi_reg_pp0_iter0_bias_0_V_load_phi_reg_671;
                ap_phi_reg_pp0_iter1_bias_1_V_load_phi_reg_659 <= ap_phi_reg_pp0_iter0_bias_1_V_load_phi_reg_659;
                ap_phi_reg_pp0_iter1_bias_2_V_load_phi_reg_647 <= ap_phi_reg_pp0_iter0_bias_2_V_load_phi_reg_647;
                ap_phi_reg_pp0_iter1_bias_3_V_load_phi_reg_635 <= ap_phi_reg_pp0_iter0_bias_3_V_load_phi_reg_635;
                i_reg_1400 <= i_fu_806_p2;
                in_image_1_V_load_3_reg_1395 <= in_image_1_V_q1;
                tmp_i_reg_1405 <= tmp_i_fu_811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                arrayNo_cast_i_reg_1586 <= x_i_mid2_fu_967_p3(31 downto 1);
                kernel_0_V_load_reg_1280 <= kernel_0_V_q0;
                kernel_1_V_load_reg_1285 <= kernel_1_V_q0;
                kernel_6_V_load_reg_1310 <= kernel_6_V_q0;
                p_Val2_9_2_i_reg_1459 <= grp_fu_1146_p2;
                p_Val2_9_3_i_reg_1464 <= grp_fu_1152_p2;
                p_Val2_9_7_i_reg_1489 <= grp_fu_1158_p2;
                    tmp1_reg_1504(47 downto 7) <= tmp1_fu_877_p2(47 downto 7);
                    tmp_51_i_cast1_reg_1255(8 downto 0) <= tmp_51_i_cast1_fu_760_p1(8 downto 0);
                tmp_65_reg_1590 <= tmp_65_fu_1079_p2;
                tmp_76_8_i_reg_1575 <= p_Val2_13_8_i_fu_1021_p2(49 downto 2);
                x_i_mid2_reg_1564 <= x_i_mid2_fu_967_p3;
                y_i_mid2_reg_1570 <= y_i_mid2_fu_975_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                bias_0_V_load_phi_reg_671 <= ap_phi_reg_pp0_iter2_bias_0_V_load_phi_reg_671;
                bias_1_V_load_phi_reg_659 <= ap_phi_reg_pp0_iter2_bias_1_V_load_phi_reg_659;
                bias_2_V_load_phi_reg_647 <= ap_phi_reg_pp0_iter2_bias_2_V_load_phi_reg_647;
                bias_3_V_load_phi_reg_635 <= ap_phi_reg_pp0_iter2_bias_3_V_load_phi_reg_635;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                bias_0_V_load_rewin_reg_592 <= bias_0_V_load_phi_reg_671;
                bias_1_V_load_rewin_reg_577 <= bias_1_V_load_phi_reg_659;
                bias_2_V_load_rewin_reg_562 <= bias_2_V_load_phi_reg_647;
                bias_3_V_load_rewin_reg_547 <= bias_3_V_load_phi_reg_635;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exitcond_flatten_reg_1410 <= exitcond_flatten_fu_817_p2;
                exitcond_flatten_reg_1410_pp0_iter1_reg <= exitcond_flatten_reg_1410;
                kernel_2_V_load_reg_1355 <= kernel_2_V_q0;
                kernel_3_V_load_reg_1360 <= kernel_3_V_q0;
                kernel_4_V_load_reg_1365 <= kernel_4_V_q0;
                kernel_5_V_load_reg_1370 <= kernel_5_V_q0;
                kernel_7_V_load_reg_1385 <= kernel_7_V_q0;
                kernel_8_V_load_reg_1390 <= kernel_8_V_q0;
                p_Val2_9_4_i_reg_1514 <= grp_fu_1164_p2;
                p_Val2_9_5_i_reg_1519 <= grp_fu_1170_p2;
                p_Val2_9_8_i_reg_1524 <= grp_fu_1176_p2;
                    tmp_reg_1529(47 downto 7) <= tmp_fu_909_p2(47 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_i_mid2_reg_1182 <= i_i_mid2_fu_701_p3;
                k_i_mid2_reg_1188_pp0_iter1_reg <= k_i_mid2_reg_1188;
                k_i_mid2_reg_1188_pp0_iter2_reg <= k_i_mid2_reg_1188_pp0_iter1_reg;
                p_Val2_9_1_i_reg_1419 <= grp_fu_1134_p2;
                p_Val2_9_6_i_reg_1444 <= grp_fu_1140_p2;
                p_Val2_9_i_reg_1414 <= grp_fu_1128_p2;
                    tmp4_reg_1554(47 downto 7) <= tmp4_fu_949_p2(47 downto 7);
                    tmp5_reg_1559(47 downto 7) <= tmp5_fu_961_p2(47 downto 7);
                tmp_16_reg_1250 <= tmp_16_fu_756_p1;
                tmp_16_reg_1250_pp0_iter1_reg <= tmp_16_reg_1250;
                tmp_16_reg_1250_pp0_iter2_reg <= tmp_16_reg_1250_pp0_iter1_reg;
                    tmp_50_i_reg_1195(2 downto 0) <= tmp_50_i_fu_717_p1(2 downto 0);
                    tmp_51_i_reg_1205(8 downto 0) <= tmp_51_i_fu_724_p1(8 downto 0);
                    tmp_70_cast_reg_1220(9 downto 0) <= tmp_70_cast_fu_751_p1(9 downto 0);
                tmp_i1_reg_472_pp0_iter1_reg <= tmp_i1_reg_472;
                tmp_i1_reg_472_pp0_iter2_reg <= tmp_i1_reg_472_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                in_image_1_V_load_2_reg_1320 <= in_image_1_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                indvar_flatten_next_reg_1509 <= indvar_flatten_next_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                k_i_mid2_reg_1188 <= k_i_mid2_fu_709_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_683 <= in_image_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_687 <= in_image_0_V_q1;
                reg_691 <= in_image_1_V_q0;
            end if;
        end if;
    end process;
    tmp_50_i_reg_1195(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_51_i_reg_1205(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_70_cast_reg_1220(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_51_i_cast1_reg_1255(10 downto 9) <= "00";
    tmp1_reg_1504(6 downto 0) <= "0000000";
    tmp_reg_1529(6 downto 0) <= "0000000";
    tmp4_reg_1554(6 downto 0) <= "0000000";
    tmp5_reg_1559(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_done_reg, bias_0_V_empty_n, bias_1_V_empty_n, bias_2_V_empty_n, bias_3_V_empty_n, ap_enable_reg_pp0_iter2, do_init_reg_530)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((bias_3_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_2_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_1_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_0_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_done_reg, bias_0_V_empty_n, bias_1_V_empty_n, bias_2_V_empty_n, bias_3_V_empty_n, ap_enable_reg_pp0_iter2, do_init_reg_530)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((bias_3_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_2_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_1_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_0_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter2_assign_proc : process(bias_0_V_empty_n, bias_1_V_empty_n, bias_2_V_empty_n, bias_3_V_empty_n, do_init_reg_530)
    begin
                ap_block_state8_pp0_stage0_iter2 <= (((bias_3_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_2_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_1_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)) or ((bias_0_V_empty_n = ap_const_logic_0) and (do_init_reg_530 = ap_const_lv1_1)));
    end process;

        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_472_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_472 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_488_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
                ap_condition_488 <= ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, exitcond_flatten_reg_1410_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1410_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, rewind_enable, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= rewind_enable;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_do_init_phi_fu_535_p6 <= do_init_reg_530;

    ap_phi_mux_i_i_phi_fu_491_p6_assign_proc : process(exitcond_flatten_reg_1410, i_i_reg_487, i_reg_1400, ap_condition_472)
    begin
        if ((ap_const_boolean_1 = ap_condition_472)) then
            if ((exitcond_flatten_reg_1410 = ap_const_lv1_1)) then 
                ap_phi_mux_i_i_phi_fu_491_p6 <= ap_const_lv9_0;
            elsif ((exitcond_flatten_reg_1410 = ap_const_lv1_0)) then 
                ap_phi_mux_i_i_phi_fu_491_p6 <= i_reg_1400;
            else 
                ap_phi_mux_i_i_phi_fu_491_p6 <= i_i_reg_487;
            end if;
        else 
            ap_phi_mux_i_i_phi_fu_491_p6 <= i_i_reg_487;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_519_p6_assign_proc : process(exitcond_flatten_reg_1410, indvar_flatten_reg_515, indvar_flatten_next_reg_1509, ap_condition_488)
    begin
        if ((ap_const_boolean_1 = ap_condition_488)) then
            if ((exitcond_flatten_reg_1410 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten_phi_fu_519_p6 <= ap_const_lv10_0;
            elsif ((exitcond_flatten_reg_1410 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten_phi_fu_519_p6 <= indvar_flatten_next_reg_1509;
            else 
                ap_phi_mux_indvar_flatten_phi_fu_519_p6 <= indvar_flatten_reg_515;
            end if;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_519_p6 <= indvar_flatten_reg_515;
        end if; 
    end process;


    ap_phi_mux_k_i_phi_fu_505_p6_assign_proc : process(exitcond_flatten_reg_1410, k_i_reg_501, k_i_mid2_reg_1188, ap_condition_472)
    begin
        if ((ap_const_boolean_1 = ap_condition_472)) then
            if ((exitcond_flatten_reg_1410 = ap_const_lv1_1)) then 
                ap_phi_mux_k_i_phi_fu_505_p6 <= ap_const_lv3_0;
            elsif ((exitcond_flatten_reg_1410 = ap_const_lv1_0)) then 
                ap_phi_mux_k_i_phi_fu_505_p6 <= k_i_mid2_reg_1188;
            else 
                ap_phi_mux_k_i_phi_fu_505_p6 <= k_i_reg_501;
            end if;
        else 
            ap_phi_mux_k_i_phi_fu_505_p6 <= k_i_reg_501;
        end if; 
    end process;


    ap_phi_mux_tmp_i1_phi_fu_476_p6_assign_proc : process(exitcond_flatten_reg_1410, tmp_i1_reg_472, tmp_i_reg_1405, ap_condition_472)
    begin
        if ((ap_const_boolean_1 = ap_condition_472)) then
            if ((exitcond_flatten_reg_1410 = ap_const_lv1_1)) then 
                ap_phi_mux_tmp_i1_phi_fu_476_p6 <= ap_const_lv1_0;
            elsif ((exitcond_flatten_reg_1410 = ap_const_lv1_0)) then 
                ap_phi_mux_tmp_i1_phi_fu_476_p6 <= tmp_i_reg_1405;
            else 
                ap_phi_mux_tmp_i1_phi_fu_476_p6 <= tmp_i1_reg_472;
            end if;
        else 
            ap_phi_mux_tmp_i1_phi_fu_476_p6 <= tmp_i1_reg_472;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_bias_0_V_load_phi_reg_671 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_bias_1_V_load_phi_reg_659 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_bias_2_V_load_phi_reg_647 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_bias_3_V_load_phi_reg_635 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, bias_0_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, do_init_reg_530)
    begin
        if (((do_init_reg_530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_0_V_blk_n <= bias_0_V_empty_n;
        else 
            bias_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, do_init_reg_530)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_0_V_read <= ap_const_logic_1;
        else 
            bias_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, bias_1_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, do_init_reg_530)
    begin
        if (((do_init_reg_530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_V_blk_n <= bias_1_V_empty_n;
        else 
            bias_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, do_init_reg_530)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_V_read <= ap_const_logic_1;
        else 
            bias_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, bias_2_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, do_init_reg_530)
    begin
        if (((do_init_reg_530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_V_blk_n <= bias_2_V_empty_n;
        else 
            bias_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, do_init_reg_530)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_V_read <= ap_const_logic_1;
        else 
            bias_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    bias_3_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, bias_3_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, do_init_reg_530)
    begin
        if (((do_init_reg_530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_3_V_blk_n <= bias_3_V_empty_n;
        else 
            bias_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, do_init_reg_530)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_530 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_3_V_read <= ap_const_logic_1;
        else 
            bias_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_817_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_519_p6 = ap_const_lv10_3FF) else "0";

    grp_fu_1128_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1128_ce <= ap_const_logic_1;
        else 
            grp_fu_1128_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1134_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1134_ce <= ap_const_logic_1;
        else 
            grp_fu_1134_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1140_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1140_ce <= ap_const_logic_1;
        else 
            grp_fu_1140_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1146_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1146_ce <= ap_const_logic_1;
        else 
            grp_fu_1146_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1152_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1152_ce <= ap_const_logic_1;
        else 
            grp_fu_1152_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1158_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1158_ce <= ap_const_logic_1;
        else 
            grp_fu_1158_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1164_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1164_ce <= ap_const_logic_1;
        else 
            grp_fu_1164_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1170_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1170_ce <= ap_const_logic_1;
        else 
            grp_fu_1170_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1176_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1176_ce <= ap_const_logic_1;
        else 
            grp_fu_1176_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_806_p2 <= std_logic_vector(unsigned(i_i_mid2_reg_1182) + unsigned(ap_const_lv9_1));
    i_i_mid2_fu_701_p3 <= 
        ap_const_lv9_0 when (ap_phi_mux_tmp_i1_phi_fu_476_p6(0) = '1') else 
        ap_phi_mux_i_i_phi_fu_491_p6;

    in_image_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_51_i_fu_724_p1, tmp_70_cast_reg_1220, ap_block_pp0_stage2, ap_block_pp0_stage1, tmp_72_cast_fu_780_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                in_image_0_V_address0 <= tmp_72_cast_fu_780_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_0_V_address0 <= tmp_70_cast_reg_1220(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_0_V_address0 <= tmp_51_i_fu_724_p1(10 - 1 downto 0);
            else 
                in_image_0_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_image_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_69_cast_fu_739_p1, ap_block_pp0_stage1, tmp_71_cast_fu_769_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_0_V_address1 <= tmp_71_cast_fu_769_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_0_V_address1 <= tmp_69_cast_fu_739_p1(10 - 1 downto 0);
            else 
                in_image_0_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_image_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_0_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_0_V_ce1 <= ap_const_logic_1;
        else 
            in_image_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_51_i_reg_1205, tmp_69_cast_fu_739_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_1_V_address0 <= tmp_51_i_reg_1205(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_1_V_address0 <= tmp_69_cast_fu_739_p1(10 - 1 downto 0);
            else 
                in_image_1_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_image_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_70_cast_fu_751_p1, ap_block_pp0_stage1, tmp_71_cast_fu_769_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_1_V_address1 <= tmp_71_cast_fu_769_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_1_V_address1 <= tmp_70_cast_fu_751_p1(10 - 1 downto 0);
            else 
                in_image_1_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_1_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_image_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_1_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_1_V_ce1 <= ap_const_logic_1;
        else 
            in_image_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_883_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(indvar_flatten_reg_515));

    internal_ap_ready_assign_proc : process(exitcond_flatten_reg_1410, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1410 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    k_fu_695_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ap_phi_mux_k_i_phi_fu_505_p6));
    k_i_mid2_fu_709_p3 <= 
        k_fu_695_p2 when (ap_phi_mux_tmp_i1_phi_fu_476_p6(0) = '1') else 
        ap_phi_mux_k_i_phi_fu_505_p6;
    kernel_0_V_address0 <= tmp_50_i_fu_717_p1(2 - 1 downto 0);

    kernel_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_0_V_ce0 <= ap_const_logic_1;
        else 
            kernel_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_1_V_address0 <= tmp_50_i_fu_717_p1(2 - 1 downto 0);

    kernel_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_1_V_ce0 <= ap_const_logic_1;
        else 
            kernel_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_2_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_2_V_ce0 <= ap_const_logic_1;
        else 
            kernel_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_3_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_3_V_ce0 <= ap_const_logic_1;
        else 
            kernel_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_4_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_4_V_ce0 <= ap_const_logic_1;
        else 
            kernel_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_5_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_5_V_ce0 <= ap_const_logic_1;
        else 
            kernel_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_6_V_address0 <= tmp_50_i_fu_717_p1(2 - 1 downto 0);

    kernel_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_6_V_ce0 <= ap_const_logic_1;
        else 
            kernel_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_7_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_7_V_ce0 <= ap_const_logic_1;
        else 
            kernel_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_8_V_address0 <= tmp_50_i_reg_1195(2 - 1 downto 0);

    kernel_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_8_V_ce0 <= ap_const_logic_1;
        else 
            kernel_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_0_V_ce0 <= ap_const_logic_1;
        else 
            out_image_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_0_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_0_V_we0 <= ap_const_logic_1;
        else 
            out_image_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_1_V_ce0 <= ap_const_logic_1;
        else 
            out_image_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_1_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_1_V_we0 <= ap_const_logic_1;
        else 
            out_image_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_2_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_2_V_ce0 <= ap_const_logic_1;
        else 
            out_image_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_2_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_2_V_we0 <= ap_const_logic_1;
        else 
            out_image_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_3_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_3_V_ce0 <= ap_const_logic_1;
        else 
            out_image_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_3_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_3) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_3_V_we0 <= ap_const_logic_1;
        else 
            out_image_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_4_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_4_V_ce0 <= ap_const_logic_1;
        else 
            out_image_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_4_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_4) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_4_V_we0 <= ap_const_logic_1;
        else 
            out_image_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_5_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_5_V_ce0 <= ap_const_logic_1;
        else 
            out_image_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_5_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if (((arrayNo_cast_i_reg_1586 = ap_const_lv31_5) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_5_V_we0 <= ap_const_logic_1;
        else 
            out_image_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_address0 <= tmp_76_cast_fu_1085_p1(7 - 1 downto 0);

    out_image_6_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_6_V_ce0 <= ap_const_logic_1;
        else 
            out_image_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_d0 <= tmp_76_8_i_reg_1575;

    out_image_6_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, arrayNo_cast_i_reg_1586)
    begin
        if ((not((arrayNo_cast_i_reg_1586 = ap_const_lv31_0)) and not((arrayNo_cast_i_reg_1586 = ap_const_lv31_1)) and not((arrayNo_cast_i_reg_1586 = ap_const_lv31_2)) and not((arrayNo_cast_i_reg_1586 = ap_const_lv31_3)) and not((arrayNo_cast_i_reg_1586 = ap_const_lv31_4)) and not((arrayNo_cast_i_reg_1586 = ap_const_lv31_5)) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            out_image_6_V_we0 <= ap_const_logic_1;
        else 
            out_image_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_8_i_fu_1118_p3 <= 
        ap_const_lv32_0 when (tmp_77_8_i_fu_1100_p2(0) = '1') else 
        y_4_8_i_fu_1095_p2;
    p_Val2_10_8_i_fu_987_p2 <= std_logic_vector(unsigned(tmp_reg_1529) + unsigned(tmp3_fu_983_p2));
    p_Val2_13_8_i_fu_1021_p2 <= std_logic_vector(signed(tmp_74_8_cast_i_fu_1017_p1) + signed(tmp_73_8_i_fu_996_p3));
    p_shl1_cast_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1060_p4),8));
    p_x_1_8_i_fu_1111_p3 <= 
        x_4_8_i_fu_1106_p2 when (tmp_77_8_i_fu_1100_p2(0) = '1') else 
        x_i_mid2_reg_1564;

    rewind_ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, exitcond_flatten_fu_817_p2, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_1) or ((exitcond_flatten_fu_817_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            rewind_ap_ready <= ap_const_logic_1;
        else 
            rewind_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    rewind_enable_assign_proc : process(ap_start, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
            rewind_enable <= ap_const_logic_1;
        else 
            rewind_enable <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_877_p2 <= std_logic_vector(unsigned(tmp_68_1_i_fu_850_p3) + unsigned(tmp_68_i_fu_843_p3));
    tmp2_fu_903_p2 <= std_logic_vector(unsigned(tmp_68_3_i_fu_896_p3) + unsigned(tmp_68_2_i_fu_889_p3));
    tmp3_fu_983_p2 <= std_logic_vector(unsigned(tmp4_reg_1554) + unsigned(tmp5_reg_1559));
    tmp4_fu_949_p2 <= std_logic_vector(unsigned(tmp_68_5_i_fu_921_p3) + unsigned(tmp_68_4_i_fu_914_p3));
    tmp5_fu_961_p2 <= std_logic_vector(unsigned(tmp_68_6_i_fu_928_p3) + unsigned(tmp6_fu_955_p2));
    tmp6_fu_955_p2 <= std_logic_vector(unsigned(tmp_68_8_i_fu_942_p3) + unsigned(tmp_68_7_i_fu_935_p3));
    tmp_15_fu_992_p1 <= y_i_mid2_fu_975_p3(8 - 1 downto 0);
    tmp_16_fu_756_p1 <= k_i_mid2_fu_709_p3(2 - 1 downto 0);
    tmp_17_fu_1047_p1 <= x_i_mid2_fu_967_p3(1 - 1 downto 0);
    tmp_50_i_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_i_mid2_fu_709_p3),64));
    tmp_51_i_cast1_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_mid2_reg_1182),11));
    tmp_51_i_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_mid2_fu_701_p3),10));
    tmp_51_i_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_mid2_fu_701_p3),64));
    tmp_59_fu_745_p2 <= std_logic_vector(unsigned(ap_const_lv10_188) + unsigned(tmp_51_i_cast_fu_729_p1));
    tmp_60_fu_763_p2 <= std_logic_vector(unsigned(ap_const_lv11_24C) + unsigned(tmp_51_i_cast1_fu_760_p1));
    tmp_61_fu_775_p2 <= std_logic_vector(unsigned(ap_const_lv11_310) + unsigned(tmp_51_i_cast1_reg_1255));
    tmp_62_fu_1051_p4 <= ((k_i_mid2_reg_1188_pp0_iter2_reg & tmp_17_fu_1047_p1) & ap_const_lv4_0);
    tmp_63_fu_1060_p4 <= ((k_i_mid2_reg_1188_pp0_iter2_reg & tmp_17_fu_1047_p1) & ap_const_lv1_0);
    tmp_64_fu_1073_p2 <= std_logic_vector(unsigned(tmp_62_fu_1051_p4) - unsigned(p_shl1_cast_fu_1069_p1));
    tmp_65_fu_1079_p2 <= std_logic_vector(unsigned(tmp_64_fu_1073_p2) + unsigned(tmp_15_fu_992_p1));
    tmp_68_1_i_fu_850_p3 <= (p_Val2_9_1_i_reg_1419 & ap_const_lv7_0);
    tmp_68_2_i_fu_889_p3 <= (p_Val2_9_2_i_reg_1459 & ap_const_lv7_0);
    tmp_68_3_i_fu_896_p3 <= (p_Val2_9_3_i_reg_1464 & ap_const_lv7_0);
    tmp_68_4_i_fu_914_p3 <= (p_Val2_9_4_i_reg_1514 & ap_const_lv7_0);
    tmp_68_5_i_fu_921_p3 <= (p_Val2_9_5_i_reg_1519 & ap_const_lv7_0);
    tmp_68_6_i_fu_928_p3 <= (p_Val2_9_6_i_reg_1444 & ap_const_lv7_0);
    tmp_68_7_i_fu_935_p3 <= (p_Val2_9_7_i_reg_1489 & ap_const_lv7_0);
    tmp_68_8_i_fu_942_p3 <= (p_Val2_9_8_i_reg_1524 & ap_const_lv7_0);
    tmp_68_i_fu_843_p3 <= (p_Val2_9_i_reg_1414 & ap_const_lv7_0);
    tmp_69_cast_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_733_p2),64));
    tmp_70_cast_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_745_p2),64));
        tmp_71_cast_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_60_fu_763_p2),64));

        tmp_72_cast_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_61_fu_775_p2),64));

    tmp_73_8_i_fu_996_p3 <= (p_Val2_10_8_i_fu_987_p2 & ap_const_lv2_0);
        tmp_74_8_cast_i_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_1004_p6),50));

        tmp_76_cast_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_reg_1590),64));

    tmp_77_8_i_fu_1100_p2 <= "1" when (y_4_8_i_fu_1095_p2 = ap_const_lv32_E) else "0";
    tmp_fu_909_p2 <= std_logic_vector(unsigned(tmp1_reg_1504) + unsigned(tmp2_fu_903_p2));
    tmp_i_fu_811_p2 <= "1" when (i_fu_806_p2 = ap_const_lv9_100) else "0";
    tmp_s_fu_733_p2 <= std_logic_vector(unsigned(ap_const_lv10_C4) + unsigned(tmp_51_i_cast_fu_729_p1));
    x_4_8_i_fu_1106_p2 <= std_logic_vector(unsigned(x_i_mid2_reg_1564) + unsigned(ap_const_lv32_1));
    x_i_mid2_fu_967_p3 <= 
        ap_const_lv32_0 when (tmp_i1_reg_472_pp0_iter2_reg(0) = '1') else 
        x_i_reg_621;
    y_4_8_i_fu_1095_p2 <= std_logic_vector(unsigned(y_i_mid2_reg_1570) + unsigned(ap_const_lv32_1));
    y_i_mid2_fu_975_p3 <= 
        ap_const_lv32_0 when (tmp_i1_reg_472_pp0_iter2_reg(0) = '1') else 
        y_i_reg_607;
end behav;
