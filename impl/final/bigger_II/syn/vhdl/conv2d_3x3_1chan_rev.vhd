-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d_3x3_1chan_rev is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    kernel_0_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_0_V_empty_n : IN STD_LOGIC;
    kernel_0_V_read : OUT STD_LOGIC;
    kernel_1_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_1_V_empty_n : IN STD_LOGIC;
    kernel_1_V_read : OUT STD_LOGIC;
    kernel_2_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_2_V_empty_n : IN STD_LOGIC;
    kernel_2_V_read : OUT STD_LOGIC;
    kernel_3_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_3_V_empty_n : IN STD_LOGIC;
    kernel_3_V_read : OUT STD_LOGIC;
    kernel_4_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_4_V_empty_n : IN STD_LOGIC;
    kernel_4_V_read : OUT STD_LOGIC;
    kernel_5_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_5_V_empty_n : IN STD_LOGIC;
    kernel_5_V_read : OUT STD_LOGIC;
    kernel_6_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_6_V_empty_n : IN STD_LOGIC;
    kernel_6_V_read : OUT STD_LOGIC;
    kernel_7_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_7_V_empty_n : IN STD_LOGIC;
    kernel_7_V_read : OUT STD_LOGIC;
    kernel_8_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_8_V_empty_n : IN STD_LOGIC;
    kernel_8_V_read : OUT STD_LOGIC;
    bias_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_V_empty_n : IN STD_LOGIC;
    bias_V_read : OUT STD_LOGIC;
    in_image_0_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_0_V_ce0 : OUT STD_LOGIC;
    in_image_0_0_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_0_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_1_V_ce0 : OUT STD_LOGIC;
    in_image_0_1_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_0_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_2_V_ce0 : OUT STD_LOGIC;
    in_image_0_2_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_0_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_3_V_ce0 : OUT STD_LOGIC;
    in_image_0_3_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_0_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_4_V_ce0 : OUT STD_LOGIC;
    in_image_0_4_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_1_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_0_V_ce0 : OUT STD_LOGIC;
    in_image_1_0_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_1_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_1_V_ce0 : OUT STD_LOGIC;
    in_image_1_1_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_1_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_2_V_ce0 : OUT STD_LOGIC;
    in_image_1_2_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_1_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_3_V_ce0 : OUT STD_LOGIC;
    in_image_1_3_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    out_image_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_0_V_ce0 : OUT STD_LOGIC;
    out_image_0_V_we0 : OUT STD_LOGIC;
    out_image_0_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_1_V_ce0 : OUT STD_LOGIC;
    out_image_1_V_we0 : OUT STD_LOGIC;
    out_image_1_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_2_V_ce0 : OUT STD_LOGIC;
    out_image_2_V_we0 : OUT STD_LOGIC;
    out_image_2_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_3_V_ce0 : OUT STD_LOGIC;
    out_image_3_V_we0 : OUT STD_LOGIC;
    out_image_3_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_4_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_4_V_ce0 : OUT STD_LOGIC;
    out_image_4_V_we0 : OUT STD_LOGIC;
    out_image_4_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_5_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_5_V_ce0 : OUT STD_LOGIC;
    out_image_5_V_we0 : OUT STD_LOGIC;
    out_image_5_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    out_image_6_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_image_6_V_ce0 : OUT STD_LOGIC;
    out_image_6_V_we0 : OUT STD_LOGIC;
    out_image_6_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
end;


architecture behav of conv2d_3x3_1chan_rev is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv30_5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000101";
    constant ap_const_lv30_4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_const_lv30_3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000011";
    constant ap_const_lv30_2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_30F : STD_LOGIC_VECTOR (9 downto 0) := "1100001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal tmp_i_67_reg_1231 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_418_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_0_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal kernel_1_V_blk_n : STD_LOGIC;
    signal kernel_2_V_blk_n : STD_LOGIC;
    signal kernel_3_V_blk_n : STD_LOGIC;
    signal kernel_4_V_blk_n : STD_LOGIC;
    signal kernel_5_V_blk_n : STD_LOGIC;
    signal kernel_6_V_blk_n : STD_LOGIC;
    signal kernel_7_V_blk_n : STD_LOGIC;
    signal kernel_8_V_blk_n : STD_LOGIC;
    signal bias_V_blk_n : STD_LOGIC;
    signal do_init_reg_414 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i_reg_430 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_rewind_reg_444 : STD_LOGIC_VECTOR (47 downto 0);
    signal kernel_8_V_load_rew_reg_458 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_rew_reg_472 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_rew_reg_486 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_rew_reg_500 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_rew_reg_514 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_rew_reg_528 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_2_V_load_rew_reg_542 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_1_V_load_rew_reg_556 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_0_V_load_rew_reg_570 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_phi_reg_584 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter2_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter3_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter4_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter5_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter6_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter7_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter8_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter9_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter10_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_phi_reg_584_pp0_iter11_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal kernel_8_V_load_phi_reg_597 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_phi_reg_597_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_phi_reg_610_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_6_V_load_phi_reg_623_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_phi_reg_636_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_phi_reg_649 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_phi_reg_649_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_phi_reg_649_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_phi_reg_649_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_4_V_load_phi_reg_649_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_phi_reg_662 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_phi_reg_662_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_phi_reg_662_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_phi_reg_662_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_2_V_load_phi_reg_675 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_2_V_load_phi_reg_675_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_2_V_load_phi_reg_675_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_1_V_load_phi_reg_688 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_1_V_load_phi_reg_688_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_0_V_load_phi_reg_701 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_i_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_728 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_755_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_1226 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal tmp_i_67_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_67_reg_1231_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_image_0_0_V_loa_reg_1235 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_1_V_loa_reg_1240 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_1_V_loa_reg_1240_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_2_V_loa_reg_1245 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_2_V_loa_reg_1245_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_2_V_loa_reg_1245_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_3_V_loa_reg_1250 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_3_V_loa_reg_1250_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_3_V_loa_reg_1250_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_3_V_loa_reg_1250_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_4_V_loa_reg_1255 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_4_V_loa_reg_1255_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_4_V_loa_reg_1255_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_4_V_loa_reg_1255_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_4_V_loa_reg_1255_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_0_V_loa_reg_1260_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_1_V_loa_reg_1265_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_2_V_loa_reg_1270_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter5_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter6_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter7_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter8_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_3_V_loa_reg_1275_pp0_iter9_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1103_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_14_i_reg_1290 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_s_reg_1315 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_66_reg_1330 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_67_reg_1345 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_68_reg_1360 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_69_reg_1375 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_70_reg_1390 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_71_reg_1405 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_72_reg_1410 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_x_1_8_i_fu_1085_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal p_8_i_fu_1093_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rewind_ap_ready : STD_LOGIC;
    signal rewind_ap_ready_reg : STD_LOGIC := '0';
    signal rewind_enable : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_phi_mux_i_i_phi_fu_434_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_p_Val2_rewind_phi_fu_448_p6 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_cast_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal arrayNo_cast_i_fu_1006_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_781_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1109_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1118_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1127_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1136_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1145_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1154_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1163_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1172_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_89_8_i_fu_972_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_90_8_cast_i_fu_979_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Val2_18_8_i_fu_983_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_19_fu_1016_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_1020_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_74_fu_1032_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_1028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_cast_fu_1040_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_968_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_1044_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_1050_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_5_8_i_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_8_i_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_5_8_i_fu_1079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1109_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1118_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1127_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1136_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1145_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1154_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1163_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1172_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_1103_ce : STD_LOGIC;
    signal grp_fu_1109_ce : STD_LOGIC;
    signal grp_fu_1118_ce : STD_LOGIC;
    signal grp_fu_1127_ce : STD_LOGIC;
    signal grp_fu_1136_ce : STD_LOGIC;
    signal grp_fu_1145_ce : STD_LOGIC;
    signal grp_fu_1154_ce : STD_LOGIC;
    signal grp_fu_1163_ce : STD_LOGIC;
    signal grp_fu_1172_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_236 : BOOLEAN;
    signal ap_condition_127 : BOOLEAN;

    component CNN_mul_mul_18s_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component CNN_mac_muladd_18cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (34 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;



begin
    CNN_mul_mul_18s_1bkb_U80 : component CNN_mul_mul_18s_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_0_V_loa_reg_1235,
        din1 => kernel_0_V_load_phi_reg_701,
        ce => grp_fu_1103_ce,
        dout => grp_fu_1103_p2);

    CNN_mac_muladd_18cud_U81 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_1_V_loa_reg_1240_pp0_iter2_reg,
        din1 => kernel_1_V_load_phi_reg_688_pp0_iter2_reg,
        din2 => grp_fu_1109_p2,
        ce => grp_fu_1109_ce,
        dout => grp_fu_1109_p3);

    CNN_mac_muladd_18cud_U82 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_2_V_loa_reg_1245_pp0_iter3_reg,
        din1 => kernel_2_V_load_phi_reg_675_pp0_iter3_reg,
        din2 => grp_fu_1118_p2,
        ce => grp_fu_1118_ce,
        dout => grp_fu_1118_p3);

    CNN_mac_muladd_18cud_U83 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_3_V_loa_reg_1250_pp0_iter4_reg,
        din1 => kernel_3_V_load_phi_reg_662_pp0_iter4_reg,
        din2 => grp_fu_1127_p2,
        ce => grp_fu_1127_ce,
        dout => grp_fu_1127_p3);

    CNN_mac_muladd_18cud_U84 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_4_V_loa_reg_1255_pp0_iter5_reg,
        din1 => kernel_4_V_load_phi_reg_649_pp0_iter5_reg,
        din2 => grp_fu_1136_p2,
        ce => grp_fu_1136_ce,
        dout => grp_fu_1136_p3);

    CNN_mac_muladd_18cud_U85 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_1_0_V_loa_reg_1260_pp0_iter6_reg,
        din1 => kernel_5_V_load_phi_reg_636_pp0_iter6_reg,
        din2 => grp_fu_1145_p2,
        ce => grp_fu_1145_ce,
        dout => grp_fu_1145_p3);

    CNN_mac_muladd_18cud_U86 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_1_1_V_loa_reg_1265_pp0_iter7_reg,
        din1 => kernel_6_V_load_phi_reg_623_pp0_iter7_reg,
        din2 => grp_fu_1154_p2,
        ce => grp_fu_1154_ce,
        dout => grp_fu_1154_p3);

    CNN_mac_muladd_18cud_U87 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_1_2_V_loa_reg_1270_pp0_iter8_reg,
        din1 => kernel_7_V_load_phi_reg_610_pp0_iter8_reg,
        din2 => grp_fu_1163_p2,
        ce => grp_fu_1163_ce,
        dout => grp_fu_1163_p3);

    CNN_mac_muladd_18cud_U88 : component CNN_mac_muladd_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 35,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_1_3_V_loa_reg_1275_pp0_iter9_reg,
        din1 => kernel_8_V_load_phi_reg_597_pp0_iter9_reg,
        din2 => grp_fu_1172_p2,
        ce => grp_fu_1172_ce,
        dout => grp_fu_1172_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= rewind_enable;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    rewind_ap_ready_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rewind_ap_ready_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
                    rewind_ap_ready_reg <= rewind_ap_ready;
                else 
                    rewind_ap_ready_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    do_init_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                do_init_reg_414 <= ap_const_lv1_0;
            elsif (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                do_init_reg_414 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i_i_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_67_reg_1231 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_i_reg_430 <= i_reg_1226;
            elsif ((((tmp_i_67_reg_1231 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i_i_reg_430 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    kernel_0_V_load_phi_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_0_V_load_phi_reg_701 <= ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_0_V_load_phi_reg_701 <= kernel_0_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_0_V_load_phi_reg_701 <= ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701;
                end if;
            end if; 
        end if;
    end process;

    kernel_1_V_load_phi_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_1_V_load_phi_reg_688 <= ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_1_V_load_phi_reg_688 <= kernel_1_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_1_V_load_phi_reg_688 <= ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688;
                end if;
            end if; 
        end if;
    end process;

    kernel_2_V_load_phi_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_2_V_load_phi_reg_675 <= ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_2_V_load_phi_reg_675 <= kernel_2_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_2_V_load_phi_reg_675 <= ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675;
                end if;
            end if; 
        end if;
    end process;

    kernel_3_V_load_phi_reg_662_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_3_V_load_phi_reg_662 <= ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_3_V_load_phi_reg_662 <= kernel_3_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_3_V_load_phi_reg_662 <= ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662;
                end if;
            end if; 
        end if;
    end process;

    kernel_4_V_load_phi_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_4_V_load_phi_reg_649 <= ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_4_V_load_phi_reg_649 <= kernel_4_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_4_V_load_phi_reg_649 <= ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649;
                end if;
            end if; 
        end if;
    end process;

    kernel_5_V_load_phi_reg_636_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_5_V_load_phi_reg_636 <= ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_5_V_load_phi_reg_636 <= kernel_5_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_5_V_load_phi_reg_636 <= ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636;
                end if;
            end if; 
        end if;
    end process;

    kernel_6_V_load_phi_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_6_V_load_phi_reg_623 <= ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_6_V_load_phi_reg_623 <= kernel_6_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_6_V_load_phi_reg_623 <= ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623;
                end if;
            end if; 
        end if;
    end process;

    kernel_7_V_load_phi_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_7_V_load_phi_reg_610 <= ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_7_V_load_phi_reg_610 <= kernel_7_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_7_V_load_phi_reg_610 <= ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610;
                end if;
            end if; 
        end if;
    end process;

    kernel_8_V_load_phi_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    kernel_8_V_load_phi_reg_597 <= ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    kernel_8_V_load_phi_reg_597 <= kernel_8_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    kernel_8_V_load_phi_reg_597 <= ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_phi_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_127)) then
                if ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_0)) then 
                    p_Val2_phi_reg_584 <= ap_phi_mux_p_Val2_rewind_phi_fu_448_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) then 
                    p_Val2_phi_reg_584 <= bias_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_Val2_phi_reg_584 <= ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584;
                end if;
            end if; 
        end if;
    end process;

    x_i_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_i_reg_728 <= p_x_1_8_i_fu_1085_p3;
            elsif (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                x_i_reg_728 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_i_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                y_i_reg_714 <= p_8_i_fu_1093_p3;
            elsif (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                y_i_reg_714 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1226 <= i_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                in_image_0_0_V_loa_reg_1235 <= in_image_0_0_V_q0;
                in_image_0_1_V_loa_reg_1240 <= in_image_0_1_V_q0;
                in_image_0_2_V_loa_reg_1245 <= in_image_0_2_V_q0;
                in_image_0_3_V_loa_reg_1250 <= in_image_0_3_V_q0;
                in_image_0_4_V_loa_reg_1255 <= in_image_0_4_V_q0;
                in_image_1_0_V_loa_reg_1260 <= in_image_1_0_V_q0;
                in_image_1_1_V_loa_reg_1265 <= in_image_1_1_V_q0;
                in_image_1_2_V_loa_reg_1270 <= in_image_1_2_V_q0;
                in_image_1_3_V_loa_reg_1275 <= in_image_1_3_V_q0;
                tmp_i_67_reg_1231 <= tmp_i_67_fu_761_p2;
                tmp_i_67_reg_1231_pp0_iter1_reg <= tmp_i_67_reg_1231;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                in_image_0_1_V_loa_reg_1240_pp0_iter2_reg <= in_image_0_1_V_loa_reg_1240;
                in_image_0_2_V_loa_reg_1245_pp0_iter2_reg <= in_image_0_2_V_loa_reg_1245;
                in_image_0_2_V_loa_reg_1245_pp0_iter3_reg <= in_image_0_2_V_loa_reg_1245_pp0_iter2_reg;
                in_image_0_3_V_loa_reg_1250_pp0_iter2_reg <= in_image_0_3_V_loa_reg_1250;
                in_image_0_3_V_loa_reg_1250_pp0_iter3_reg <= in_image_0_3_V_loa_reg_1250_pp0_iter2_reg;
                in_image_0_3_V_loa_reg_1250_pp0_iter4_reg <= in_image_0_3_V_loa_reg_1250_pp0_iter3_reg;
                in_image_0_4_V_loa_reg_1255_pp0_iter2_reg <= in_image_0_4_V_loa_reg_1255;
                in_image_0_4_V_loa_reg_1255_pp0_iter3_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter2_reg;
                in_image_0_4_V_loa_reg_1255_pp0_iter4_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter3_reg;
                in_image_0_4_V_loa_reg_1255_pp0_iter5_reg <= in_image_0_4_V_loa_reg_1255_pp0_iter4_reg;
                in_image_1_0_V_loa_reg_1260_pp0_iter2_reg <= in_image_1_0_V_loa_reg_1260;
                in_image_1_0_V_loa_reg_1260_pp0_iter3_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter2_reg;
                in_image_1_0_V_loa_reg_1260_pp0_iter4_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter3_reg;
                in_image_1_0_V_loa_reg_1260_pp0_iter5_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter4_reg;
                in_image_1_0_V_loa_reg_1260_pp0_iter6_reg <= in_image_1_0_V_loa_reg_1260_pp0_iter5_reg;
                in_image_1_1_V_loa_reg_1265_pp0_iter2_reg <= in_image_1_1_V_loa_reg_1265;
                in_image_1_1_V_loa_reg_1265_pp0_iter3_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter2_reg;
                in_image_1_1_V_loa_reg_1265_pp0_iter4_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter3_reg;
                in_image_1_1_V_loa_reg_1265_pp0_iter5_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter4_reg;
                in_image_1_1_V_loa_reg_1265_pp0_iter6_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter5_reg;
                in_image_1_1_V_loa_reg_1265_pp0_iter7_reg <= in_image_1_1_V_loa_reg_1265_pp0_iter6_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter2_reg <= in_image_1_2_V_loa_reg_1270;
                in_image_1_2_V_loa_reg_1270_pp0_iter3_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter2_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter4_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter3_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter5_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter4_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter6_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter5_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter7_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter6_reg;
                in_image_1_2_V_loa_reg_1270_pp0_iter8_reg <= in_image_1_2_V_loa_reg_1270_pp0_iter7_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter2_reg <= in_image_1_3_V_loa_reg_1275;
                in_image_1_3_V_loa_reg_1275_pp0_iter3_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter2_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter4_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter3_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter5_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter4_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter6_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter5_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter7_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter6_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter8_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter7_reg;
                in_image_1_3_V_loa_reg_1275_pp0_iter9_reg <= in_image_1_3_V_loa_reg_1275_pp0_iter8_reg;
                kernel_1_V_load_phi_reg_688_pp0_iter2_reg <= kernel_1_V_load_phi_reg_688;
                kernel_2_V_load_phi_reg_675_pp0_iter2_reg <= kernel_2_V_load_phi_reg_675;
                kernel_2_V_load_phi_reg_675_pp0_iter3_reg <= kernel_2_V_load_phi_reg_675_pp0_iter2_reg;
                kernel_3_V_load_phi_reg_662_pp0_iter2_reg <= kernel_3_V_load_phi_reg_662;
                kernel_3_V_load_phi_reg_662_pp0_iter3_reg <= kernel_3_V_load_phi_reg_662_pp0_iter2_reg;
                kernel_3_V_load_phi_reg_662_pp0_iter4_reg <= kernel_3_V_load_phi_reg_662_pp0_iter3_reg;
                kernel_4_V_load_phi_reg_649_pp0_iter2_reg <= kernel_4_V_load_phi_reg_649;
                kernel_4_V_load_phi_reg_649_pp0_iter3_reg <= kernel_4_V_load_phi_reg_649_pp0_iter2_reg;
                kernel_4_V_load_phi_reg_649_pp0_iter4_reg <= kernel_4_V_load_phi_reg_649_pp0_iter3_reg;
                kernel_4_V_load_phi_reg_649_pp0_iter5_reg <= kernel_4_V_load_phi_reg_649_pp0_iter4_reg;
                kernel_5_V_load_phi_reg_636_pp0_iter2_reg <= kernel_5_V_load_phi_reg_636;
                kernel_5_V_load_phi_reg_636_pp0_iter3_reg <= kernel_5_V_load_phi_reg_636_pp0_iter2_reg;
                kernel_5_V_load_phi_reg_636_pp0_iter4_reg <= kernel_5_V_load_phi_reg_636_pp0_iter3_reg;
                kernel_5_V_load_phi_reg_636_pp0_iter5_reg <= kernel_5_V_load_phi_reg_636_pp0_iter4_reg;
                kernel_5_V_load_phi_reg_636_pp0_iter6_reg <= kernel_5_V_load_phi_reg_636_pp0_iter5_reg;
                kernel_6_V_load_phi_reg_623_pp0_iter2_reg <= kernel_6_V_load_phi_reg_623;
                kernel_6_V_load_phi_reg_623_pp0_iter3_reg <= kernel_6_V_load_phi_reg_623_pp0_iter2_reg;
                kernel_6_V_load_phi_reg_623_pp0_iter4_reg <= kernel_6_V_load_phi_reg_623_pp0_iter3_reg;
                kernel_6_V_load_phi_reg_623_pp0_iter5_reg <= kernel_6_V_load_phi_reg_623_pp0_iter4_reg;
                kernel_6_V_load_phi_reg_623_pp0_iter6_reg <= kernel_6_V_load_phi_reg_623_pp0_iter5_reg;
                kernel_6_V_load_phi_reg_623_pp0_iter7_reg <= kernel_6_V_load_phi_reg_623_pp0_iter6_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter2_reg <= kernel_7_V_load_phi_reg_610;
                kernel_7_V_load_phi_reg_610_pp0_iter3_reg <= kernel_7_V_load_phi_reg_610_pp0_iter2_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter4_reg <= kernel_7_V_load_phi_reg_610_pp0_iter3_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter5_reg <= kernel_7_V_load_phi_reg_610_pp0_iter4_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter6_reg <= kernel_7_V_load_phi_reg_610_pp0_iter5_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter7_reg <= kernel_7_V_load_phi_reg_610_pp0_iter6_reg;
                kernel_7_V_load_phi_reg_610_pp0_iter8_reg <= kernel_7_V_load_phi_reg_610_pp0_iter7_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter2_reg <= kernel_8_V_load_phi_reg_597;
                kernel_8_V_load_phi_reg_597_pp0_iter3_reg <= kernel_8_V_load_phi_reg_597_pp0_iter2_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter4_reg <= kernel_8_V_load_phi_reg_597_pp0_iter3_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter5_reg <= kernel_8_V_load_phi_reg_597_pp0_iter4_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter6_reg <= kernel_8_V_load_phi_reg_597_pp0_iter5_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter7_reg <= kernel_8_V_load_phi_reg_597_pp0_iter6_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter8_reg <= kernel_8_V_load_phi_reg_597_pp0_iter7_reg;
                kernel_8_V_load_phi_reg_597_pp0_iter9_reg <= kernel_8_V_load_phi_reg_597_pp0_iter8_reg;
                p_Val2_14_i_reg_1290 <= grp_fu_1103_p2;
                p_Val2_phi_reg_584_pp0_iter10_reg <= p_Val2_phi_reg_584_pp0_iter9_reg;
                p_Val2_phi_reg_584_pp0_iter11_reg <= p_Val2_phi_reg_584_pp0_iter10_reg;
                p_Val2_phi_reg_584_pp0_iter2_reg <= p_Val2_phi_reg_584;
                p_Val2_phi_reg_584_pp0_iter3_reg <= p_Val2_phi_reg_584_pp0_iter2_reg;
                p_Val2_phi_reg_584_pp0_iter4_reg <= p_Val2_phi_reg_584_pp0_iter3_reg;
                p_Val2_phi_reg_584_pp0_iter5_reg <= p_Val2_phi_reg_584_pp0_iter4_reg;
                p_Val2_phi_reg_584_pp0_iter6_reg <= p_Val2_phi_reg_584_pp0_iter5_reg;
                p_Val2_phi_reg_584_pp0_iter7_reg <= p_Val2_phi_reg_584_pp0_iter6_reg;
                p_Val2_phi_reg_584_pp0_iter8_reg <= p_Val2_phi_reg_584_pp0_iter7_reg;
                p_Val2_phi_reg_584_pp0_iter9_reg <= p_Val2_phi_reg_584_pp0_iter8_reg;
                tmp_66_reg_1330 <= grp_fu_1118_p3(34 downto 10);
                tmp_67_reg_1345 <= grp_fu_1127_p3(34 downto 10);
                tmp_68_reg_1360 <= grp_fu_1136_p3(34 downto 10);
                tmp_69_reg_1375 <= grp_fu_1145_p3(34 downto 10);
                tmp_70_reg_1390 <= grp_fu_1154_p3(34 downto 10);
                tmp_71_reg_1405 <= grp_fu_1163_p3(34 downto 10);
                tmp_72_reg_1410 <= grp_fu_1172_p3(34 downto 10);
                tmp_i_67_reg_1231_pp0_iter10_reg <= tmp_i_67_reg_1231_pp0_iter9_reg;
                tmp_i_67_reg_1231_pp0_iter11_reg <= tmp_i_67_reg_1231_pp0_iter10_reg;
                tmp_i_67_reg_1231_pp0_iter2_reg <= tmp_i_67_reg_1231_pp0_iter1_reg;
                tmp_i_67_reg_1231_pp0_iter3_reg <= tmp_i_67_reg_1231_pp0_iter2_reg;
                tmp_i_67_reg_1231_pp0_iter4_reg <= tmp_i_67_reg_1231_pp0_iter3_reg;
                tmp_i_67_reg_1231_pp0_iter5_reg <= tmp_i_67_reg_1231_pp0_iter4_reg;
                tmp_i_67_reg_1231_pp0_iter6_reg <= tmp_i_67_reg_1231_pp0_iter5_reg;
                tmp_i_67_reg_1231_pp0_iter7_reg <= tmp_i_67_reg_1231_pp0_iter6_reg;
                tmp_i_67_reg_1231_pp0_iter8_reg <= tmp_i_67_reg_1231_pp0_iter7_reg;
                tmp_i_67_reg_1231_pp0_iter9_reg <= tmp_i_67_reg_1231_pp0_iter8_reg;
                tmp_s_reg_1315 <= grp_fu_1109_p3(34 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                kernel_0_V_load_rew_reg_570 <= kernel_0_V_load_phi_reg_701;
                kernel_1_V_load_rew_reg_556 <= kernel_1_V_load_phi_reg_688;
                kernel_2_V_load_rew_reg_542 <= kernel_2_V_load_phi_reg_675;
                kernel_3_V_load_rew_reg_528 <= kernel_3_V_load_phi_reg_662;
                kernel_4_V_load_rew_reg_514 <= kernel_4_V_load_phi_reg_649;
                kernel_5_V_load_rew_reg_500 <= kernel_5_V_load_phi_reg_636;
                kernel_6_V_load_rew_reg_486 <= kernel_6_V_load_phi_reg_623;
                kernel_7_V_load_rew_reg_472 <= kernel_7_V_load_phi_reg_610;
                kernel_8_V_load_rew_reg_458 <= kernel_8_V_load_phi_reg_597;
                p_Val2_rewind_reg_444 <= p_Val2_phi_reg_584;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter1, kernel_0_V_empty_n, ap_phi_mux_do_init_phi_fu_418_p6, kernel_1_V_empty_n, kernel_2_V_empty_n, kernel_3_V_empty_n, kernel_4_V_empty_n, kernel_5_V_empty_n, kernel_6_V_empty_n, kernel_7_V_empty_n, kernel_8_V_empty_n, bias_V_empty_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((kernel_8_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_7_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_6_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_5_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_4_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_3_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_2_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_1_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((bias_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_0_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter1, kernel_0_V_empty_n, ap_phi_mux_do_init_phi_fu_418_p6, kernel_1_V_empty_n, kernel_2_V_empty_n, kernel_3_V_empty_n, kernel_4_V_empty_n, kernel_5_V_empty_n, kernel_6_V_empty_n, kernel_7_V_empty_n, kernel_8_V_empty_n, bias_V_empty_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((kernel_8_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_7_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_6_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_5_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_4_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_3_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_2_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_1_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((bias_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_0_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(kernel_0_V_empty_n, ap_phi_mux_do_init_phi_fu_418_p6, kernel_1_V_empty_n, kernel_2_V_empty_n, kernel_3_V_empty_n, kernel_4_V_empty_n, kernel_5_V_empty_n, kernel_6_V_empty_n, kernel_7_V_empty_n, kernel_8_V_empty_n, bias_V_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((kernel_8_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_7_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_6_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_5_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_4_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_3_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_2_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_1_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((bias_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)) or ((kernel_0_V_empty_n = ap_const_logic_0) and (ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1)));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_127_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_127 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_236_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_236 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_block_pp0_stage0_11001, tmp_i_67_reg_1231_pp0_iter11_reg, ap_enable_reg_pp0_iter12)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= rewind_enable;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_418_p6_assign_proc : process(ap_block_pp0_stage0, do_init_reg_414, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_418_p6 <= ap_const_lv1_1;
            elsif ((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_418_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_418_p6 <= do_init_reg_414;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_418_p6 <= do_init_reg_414;
        end if; 
    end process;


    ap_phi_mux_i_i_phi_fu_434_p6_assign_proc : process(tmp_i_67_reg_1231, i_i_reg_430, i_reg_1226, ap_condition_236)
    begin
        if ((ap_const_boolean_1 = ap_condition_236)) then
            if ((tmp_i_67_reg_1231 = ap_const_lv1_1)) then 
                ap_phi_mux_i_i_phi_fu_434_p6 <= ap_const_lv10_0;
            elsif ((tmp_i_67_reg_1231 = ap_const_lv1_0)) then 
                ap_phi_mux_i_i_phi_fu_434_p6 <= i_reg_1226;
            else 
                ap_phi_mux_i_i_phi_fu_434_p6 <= i_i_reg_430;
            end if;
        else 
            ap_phi_mux_i_i_phi_fu_434_p6 <= i_i_reg_430;
        end if; 
    end process;


    ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6_assign_proc : process(ap_block_pp0_stage0, kernel_0_V_load_rew_reg_570, kernel_0_V_load_phi_reg_701, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6 <= kernel_0_V_load_phi_reg_701;
        else 
            ap_phi_mux_kernel_0_V_load_rew_phi_fu_574_p6 <= kernel_0_V_load_rew_reg_570;
        end if; 
    end process;


    ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6_assign_proc : process(ap_block_pp0_stage0, kernel_1_V_load_rew_reg_556, kernel_1_V_load_phi_reg_688, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6 <= kernel_1_V_load_phi_reg_688;
        else 
            ap_phi_mux_kernel_1_V_load_rew_phi_fu_560_p6 <= kernel_1_V_load_rew_reg_556;
        end if; 
    end process;


    ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6_assign_proc : process(ap_block_pp0_stage0, kernel_2_V_load_rew_reg_542, kernel_2_V_load_phi_reg_675, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6 <= kernel_2_V_load_phi_reg_675;
        else 
            ap_phi_mux_kernel_2_V_load_rew_phi_fu_546_p6 <= kernel_2_V_load_rew_reg_542;
        end if; 
    end process;


    ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6_assign_proc : process(ap_block_pp0_stage0, kernel_3_V_load_rew_reg_528, kernel_3_V_load_phi_reg_662, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6 <= kernel_3_V_load_phi_reg_662;
        else 
            ap_phi_mux_kernel_3_V_load_rew_phi_fu_532_p6 <= kernel_3_V_load_rew_reg_528;
        end if; 
    end process;


    ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6_assign_proc : process(ap_block_pp0_stage0, kernel_4_V_load_rew_reg_514, kernel_4_V_load_phi_reg_649, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6 <= kernel_4_V_load_phi_reg_649;
        else 
            ap_phi_mux_kernel_4_V_load_rew_phi_fu_518_p6 <= kernel_4_V_load_rew_reg_514;
        end if; 
    end process;


    ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6_assign_proc : process(ap_block_pp0_stage0, kernel_5_V_load_rew_reg_500, kernel_5_V_load_phi_reg_636, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6 <= kernel_5_V_load_phi_reg_636;
        else 
            ap_phi_mux_kernel_5_V_load_rew_phi_fu_504_p6 <= kernel_5_V_load_rew_reg_500;
        end if; 
    end process;


    ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6_assign_proc : process(ap_block_pp0_stage0, kernel_6_V_load_rew_reg_486, kernel_6_V_load_phi_reg_623, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6 <= kernel_6_V_load_phi_reg_623;
        else 
            ap_phi_mux_kernel_6_V_load_rew_phi_fu_490_p6 <= kernel_6_V_load_rew_reg_486;
        end if; 
    end process;


    ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6_assign_proc : process(ap_block_pp0_stage0, kernel_7_V_load_rew_reg_472, kernel_7_V_load_phi_reg_610, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6 <= kernel_7_V_load_phi_reg_610;
        else 
            ap_phi_mux_kernel_7_V_load_rew_phi_fu_476_p6 <= kernel_7_V_load_rew_reg_472;
        end if; 
    end process;


    ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6_assign_proc : process(ap_block_pp0_stage0, kernel_8_V_load_rew_reg_458, kernel_8_V_load_phi_reg_597, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6 <= kernel_8_V_load_phi_reg_597;
        else 
            ap_phi_mux_kernel_8_V_load_rew_phi_fu_462_p6 <= kernel_8_V_load_rew_reg_458;
        end if; 
    end process;


    ap_phi_mux_p_Val2_rewind_phi_fu_448_p6_assign_proc : process(ap_block_pp0_stage0, p_Val2_rewind_reg_444, p_Val2_phi_reg_584, tmp_i_67_reg_1231_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_i_67_reg_1231_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_p_Val2_rewind_phi_fu_448_p6 <= p_Val2_phi_reg_584;
        else 
            ap_phi_mux_p_Val2_rewind_phi_fu_448_p6 <= p_Val2_rewind_reg_444;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_kernel_0_V_load_phi_reg_701 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_1_V_load_phi_reg_688 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_2_V_load_phi_reg_675 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_3_V_load_phi_reg_662 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_4_V_load_phi_reg_649 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_5_V_load_phi_reg_636 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_6_V_load_phi_reg_623 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_7_V_load_phi_reg_610 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_kernel_8_V_load_phi_reg_597 <= "XXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_Val2_phi_reg_584 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to11)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    arrayNo_cast_i_fu_1006_p4 <= x_i_reg_728(31 downto 2);

    bias_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, bias_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_V_blk_n <= bias_V_empty_n;
        else 
            bias_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bias_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            bias_V_read <= ap_const_logic_1;
        else 
            bias_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1103_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1103_ce <= ap_const_logic_1;
        else 
            grp_fu_1103_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1109_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1109_ce <= ap_const_logic_1;
        else 
            grp_fu_1109_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1109_p2 <= (tmp_fu_781_p4 & ap_const_lv10_0);

    grp_fu_1118_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1118_ce <= ap_const_logic_1;
        else 
            grp_fu_1118_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1118_p2 <= (tmp_s_reg_1315 & ap_const_lv10_0);

    grp_fu_1127_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1127_ce <= ap_const_logic_1;
        else 
            grp_fu_1127_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1127_p2 <= (tmp_66_reg_1330 & ap_const_lv10_0);

    grp_fu_1136_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1136_ce <= ap_const_logic_1;
        else 
            grp_fu_1136_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1136_p2 <= (tmp_67_reg_1345 & ap_const_lv10_0);

    grp_fu_1145_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1145_ce <= ap_const_logic_1;
        else 
            grp_fu_1145_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1145_p2 <= (tmp_68_reg_1360 & ap_const_lv10_0);

    grp_fu_1154_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1154_ce <= ap_const_logic_1;
        else 
            grp_fu_1154_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1154_p2 <= (tmp_69_reg_1375 & ap_const_lv10_0);

    grp_fu_1163_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1163_ce <= ap_const_logic_1;
        else 
            grp_fu_1163_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1163_p2 <= (tmp_70_reg_1390 & ap_const_lv10_0);

    grp_fu_1172_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1172_ce <= ap_const_logic_1;
        else 
            grp_fu_1172_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1172_p2 <= (tmp_71_reg_1405 & ap_const_lv10_0);
    i_fu_755_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ap_phi_mux_i_i_phi_fu_434_p6));
    in_image_0_0_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_0_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_0_0_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_0_1_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_0_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_0_1_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_0_2_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_0_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_0_2_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_0_3_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_0_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_0_3_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_0_4_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_0_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_0_4_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_1_0_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_1_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_1_0_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_1_1_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_1_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_1_1_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_1_2_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_1_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_1_2_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_image_1_3_V_address0 <= tmp_i_fu_742_p1(10 - 1 downto 0);

    in_image_1_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_image_1_3_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(tmp_i_67_reg_1231, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_67_reg_1231 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    kernel_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, kernel_0_V_empty_n, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_0_V_blk_n <= kernel_0_V_empty_n;
        else 
            kernel_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_0_V_read <= ap_const_logic_1;
        else 
            kernel_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_1_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_1_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_1_V_blk_n <= kernel_1_V_empty_n;
        else 
            kernel_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_1_V_read <= ap_const_logic_1;
        else 
            kernel_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_2_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_2_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_2_V_blk_n <= kernel_2_V_empty_n;
        else 
            kernel_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_2_V_read <= ap_const_logic_1;
        else 
            kernel_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_3_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_3_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_3_V_blk_n <= kernel_3_V_empty_n;
        else 
            kernel_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_3_V_read <= ap_const_logic_1;
        else 
            kernel_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_4_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_4_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_4_V_blk_n <= kernel_4_V_empty_n;
        else 
            kernel_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_4_V_read <= ap_const_logic_1;
        else 
            kernel_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_5_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_5_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_5_V_blk_n <= kernel_5_V_empty_n;
        else 
            kernel_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_5_V_read <= ap_const_logic_1;
        else 
            kernel_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_6_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_6_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_6_V_blk_n <= kernel_6_V_empty_n;
        else 
            kernel_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_6_V_read <= ap_const_logic_1;
        else 
            kernel_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_7_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_7_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_7_V_blk_n <= kernel_7_V_empty_n;
        else 
            kernel_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_7_V_read <= ap_const_logic_1;
        else 
            kernel_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_8_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, kernel_8_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kernel_8_V_blk_n <= kernel_8_V_empty_n;
        else 
            kernel_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_8_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_phi_mux_do_init_phi_fu_418_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_phi_mux_do_init_phi_fu_418_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            kernel_8_V_read <= ap_const_logic_1;
        else 
            kernel_8_V_read <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_0_V_ce0 <= ap_const_logic_1;
        else 
            out_image_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_0_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_0_V_we0 <= ap_const_logic_1;
        else 
            out_image_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_1_V_ce0 <= ap_const_logic_1;
        else 
            out_image_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_1_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_1_V_we0 <= ap_const_logic_1;
        else 
            out_image_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_2_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_2_V_ce0 <= ap_const_logic_1;
        else 
            out_image_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_2_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_2_V_we0 <= ap_const_logic_1;
        else 
            out_image_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_3_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_3_V_ce0 <= ap_const_logic_1;
        else 
            out_image_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_3_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_3) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_3_V_we0 <= ap_const_logic_1;
        else 
            out_image_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_4_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_4_V_ce0 <= ap_const_logic_1;
        else 
            out_image_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_4_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_4) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_4_V_we0 <= ap_const_logic_1;
        else 
            out_image_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_5_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_5_V_ce0 <= ap_const_logic_1;
        else 
            out_image_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_5_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if (((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_5) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_5_V_we0 <= ap_const_logic_1;
        else 
            out_image_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_address0 <= tmp_90_cast_fu_1056_p1(7 - 1 downto 0);

    out_image_6_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_6_V_ce0 <= ap_const_logic_1;
        else 
            out_image_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_d0 <= p_Val2_18_8_i_fu_983_p2(55 downto 31);

    out_image_6_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12, arrayNo_cast_i_fu_1006_p4)
    begin
        if ((not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_0)) and not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_1)) and not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_2)) and not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_3)) and not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_4)) and not((arrayNo_cast_i_fu_1006_p4 = ap_const_lv30_5)) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_image_6_V_we0 <= ap_const_logic_1;
        else 
            out_image_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_8_i_fu_1093_p3 <= 
        ap_const_lv32_0 when (tmp_93_8_i_fu_1073_p2(0) = '1') else 
        y_5_8_i_fu_1067_p2;
    p_Val2_18_8_i_fu_983_p2 <= std_logic_vector(unsigned(tmp_89_8_i_fu_972_p3) + unsigned(tmp_90_8_cast_i_fu_979_p1));
    p_shl1_cast_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_1032_p3),8));
    p_shl_cast_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_1020_p3),8));
    p_x_1_8_i_fu_1085_p3 <= 
        x_5_8_i_fu_1079_p2 when (tmp_93_8_i_fu_1073_p2(0) = '1') else 
        x_i_reg_728;

    rewind_ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, tmp_i_67_fu_761_p2, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_1) or ((tmp_i_67_fu_761_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rewind_ap_ready <= ap_const_logic_1;
        else 
            rewind_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    rewind_enable_assign_proc : process(ap_start, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
            rewind_enable <= ap_const_logic_1;
        else 
            rewind_enable <= ap_const_logic_0;
        end if; 
    end process;

    tmp_18_fu_968_p1 <= y_i_reg_714(8 - 1 downto 0);
    tmp_19_fu_1016_p1 <= x_i_reg_728(2 - 1 downto 0);
    tmp_73_fu_1020_p3 <= (tmp_19_fu_1016_p1 & ap_const_lv5_0);
    tmp_74_fu_1032_p3 <= (tmp_19_fu_1016_p1 & ap_const_lv2_0);
    tmp_75_fu_1044_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1028_p1) - unsigned(p_shl1_cast_fu_1040_p1));
    tmp_76_fu_1050_p2 <= std_logic_vector(unsigned(tmp_18_fu_968_p1) + unsigned(tmp_75_fu_1044_p2));
    tmp_89_8_i_fu_972_p3 <= (tmp_72_reg_1410 & ap_const_lv31_0);
        tmp_90_8_cast_i_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_phi_reg_584_pp0_iter11_reg),56));

        tmp_90_cast_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_76_fu_1050_p2),64));

    tmp_93_8_i_fu_1073_p2 <= "1" when (y_5_8_i_fu_1067_p2 = ap_const_lv32_1C) else "0";
    tmp_fu_781_p4 <= p_Val2_14_i_reg_1290(34 downto 10);
    tmp_i_67_fu_761_p2 <= "1" when (ap_phi_mux_i_i_phi_fu_434_p6 = ap_const_lv10_30F) else "0";
    tmp_i_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_i_phi_fu_434_p6),64));
    x_5_8_i_fu_1079_p2 <= std_logic_vector(unsigned(x_i_reg_728) + unsigned(ap_const_lv32_1));
    y_5_8_i_fu_1067_p2 <= std_logic_vector(unsigned(y_i_reg_714) + unsigned(ap_const_lv32_1));
end behav;
