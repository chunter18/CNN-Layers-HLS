// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module zero_mean_1chan64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_image_V_address0,
        in_image_V_ce0,
        in_image_V_q0,
        out_image_V_address0,
        out_image_V_ce0,
        out_image_V_we0,
        out_image_V_d0,
        means_V_address0,
        means_V_ce0,
        means_V_q0,
        conv_kernel_L1_0_V,
        conv_kernel_L1_1_V,
        conv_kernel_L1_2_V,
        conv_kernel_L1_3_V,
        conv_kernel_L1_4_V,
        conv_kernel_L1_5_V,
        conv_kernel_L1_6_V,
        conv_kernel_L1_7_V,
        conv_kernel_L1_8_V,
        conv_bias_L1_V,
        a_V,
        b_V,
        conv_bias_L2_0_V,
        conv_bias_L2_1_V,
        conv_bias_L2_2_V,
        conv_bias_L2_3_V,
        conv_kernel_L1_0_V_out_din,
        conv_kernel_L1_0_V_out_full_n,
        conv_kernel_L1_0_V_out_write,
        conv_kernel_L1_1_V_out_din,
        conv_kernel_L1_1_V_out_full_n,
        conv_kernel_L1_1_V_out_write,
        conv_kernel_L1_2_V_out_din,
        conv_kernel_L1_2_V_out_full_n,
        conv_kernel_L1_2_V_out_write,
        conv_kernel_L1_3_V_out_din,
        conv_kernel_L1_3_V_out_full_n,
        conv_kernel_L1_3_V_out_write,
        conv_kernel_L1_4_V_out_din,
        conv_kernel_L1_4_V_out_full_n,
        conv_kernel_L1_4_V_out_write,
        conv_kernel_L1_5_V_out_din,
        conv_kernel_L1_5_V_out_full_n,
        conv_kernel_L1_5_V_out_write,
        conv_kernel_L1_6_V_out_din,
        conv_kernel_L1_6_V_out_full_n,
        conv_kernel_L1_6_V_out_write,
        conv_kernel_L1_7_V_out_din,
        conv_kernel_L1_7_V_out_full_n,
        conv_kernel_L1_7_V_out_write,
        conv_kernel_L1_8_V_out_din,
        conv_kernel_L1_8_V_out_full_n,
        conv_kernel_L1_8_V_out_write,
        conv_bias_L1_V_out_din,
        conv_bias_L1_V_out_full_n,
        conv_bias_L1_V_out_write,
        a_V_out_din,
        a_V_out_full_n,
        a_V_out_write,
        b_V_out_din,
        b_V_out_full_n,
        b_V_out_write,
        conv_bias_L2_0_V_out_din,
        conv_bias_L2_0_V_out_full_n,
        conv_bias_L2_0_V_out_write,
        conv_bias_L2_1_V_out_din,
        conv_bias_L2_1_V_out_full_n,
        conv_bias_L2_1_V_out_write,
        conv_bias_L2_2_V_out_din,
        conv_bias_L2_2_V_out_full_n,
        conv_bias_L2_2_V_out_write,
        conv_bias_L2_3_V_out_din,
        conv_bias_L2_3_V_out_full_n,
        conv_bias_L2_3_V_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] in_image_V_address0;
output   in_image_V_ce0;
input  [17:0] in_image_V_q0;
output  [9:0] out_image_V_address0;
output   out_image_V_ce0;
output   out_image_V_we0;
output  [17:0] out_image_V_d0;
output  [9:0] means_V_address0;
output   means_V_ce0;
input  [17:0] means_V_q0;
input  [17:0] conv_kernel_L1_0_V;
input  [17:0] conv_kernel_L1_1_V;
input  [17:0] conv_kernel_L1_2_V;
input  [17:0] conv_kernel_L1_3_V;
input  [17:0] conv_kernel_L1_4_V;
input  [17:0] conv_kernel_L1_5_V;
input  [17:0] conv_kernel_L1_6_V;
input  [17:0] conv_kernel_L1_7_V;
input  [17:0] conv_kernel_L1_8_V;
input  [47:0] conv_bias_L1_V;
input  [17:0] a_V;
input  [17:0] b_V;
input  [47:0] conv_bias_L2_0_V;
input  [47:0] conv_bias_L2_1_V;
input  [47:0] conv_bias_L2_2_V;
input  [47:0] conv_bias_L2_3_V;
output  [17:0] conv_kernel_L1_0_V_out_din;
input   conv_kernel_L1_0_V_out_full_n;
output   conv_kernel_L1_0_V_out_write;
output  [17:0] conv_kernel_L1_1_V_out_din;
input   conv_kernel_L1_1_V_out_full_n;
output   conv_kernel_L1_1_V_out_write;
output  [17:0] conv_kernel_L1_2_V_out_din;
input   conv_kernel_L1_2_V_out_full_n;
output   conv_kernel_L1_2_V_out_write;
output  [17:0] conv_kernel_L1_3_V_out_din;
input   conv_kernel_L1_3_V_out_full_n;
output   conv_kernel_L1_3_V_out_write;
output  [17:0] conv_kernel_L1_4_V_out_din;
input   conv_kernel_L1_4_V_out_full_n;
output   conv_kernel_L1_4_V_out_write;
output  [17:0] conv_kernel_L1_5_V_out_din;
input   conv_kernel_L1_5_V_out_full_n;
output   conv_kernel_L1_5_V_out_write;
output  [17:0] conv_kernel_L1_6_V_out_din;
input   conv_kernel_L1_6_V_out_full_n;
output   conv_kernel_L1_6_V_out_write;
output  [17:0] conv_kernel_L1_7_V_out_din;
input   conv_kernel_L1_7_V_out_full_n;
output   conv_kernel_L1_7_V_out_write;
output  [17:0] conv_kernel_L1_8_V_out_din;
input   conv_kernel_L1_8_V_out_full_n;
output   conv_kernel_L1_8_V_out_write;
output  [47:0] conv_bias_L1_V_out_din;
input   conv_bias_L1_V_out_full_n;
output   conv_bias_L1_V_out_write;
output  [17:0] a_V_out_din;
input   a_V_out_full_n;
output   a_V_out_write;
output  [17:0] b_V_out_din;
input   b_V_out_full_n;
output   b_V_out_write;
output  [47:0] conv_bias_L2_0_V_out_din;
input   conv_bias_L2_0_V_out_full_n;
output   conv_bias_L2_0_V_out_write;
output  [47:0] conv_bias_L2_1_V_out_din;
input   conv_bias_L2_1_V_out_full_n;
output   conv_bias_L2_1_V_out_write;
output  [47:0] conv_bias_L2_2_V_out_din;
input   conv_bias_L2_2_V_out_full_n;
output   conv_bias_L2_2_V_out_write;
output  [47:0] conv_bias_L2_3_V_out_din;
input   conv_bias_L2_3_V_out_full_n;
output   conv_bias_L2_3_V_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_image_V_ce0;
reg out_image_V_ce0;
reg out_image_V_we0;
reg means_V_ce0;
reg conv_kernel_L1_0_V_out_write;
reg conv_kernel_L1_1_V_out_write;
reg conv_kernel_L1_2_V_out_write;
reg conv_kernel_L1_3_V_out_write;
reg conv_kernel_L1_4_V_out_write;
reg conv_kernel_L1_5_V_out_write;
reg conv_kernel_L1_6_V_out_write;
reg conv_kernel_L1_7_V_out_write;
reg conv_kernel_L1_8_V_out_write;
reg conv_bias_L1_V_out_write;
reg a_V_out_write;
reg b_V_out_write;
reg conv_bias_L2_0_V_out_write;
reg conv_bias_L2_1_V_out_write;
reg conv_bias_L2_2_V_out_write;
reg conv_bias_L2_3_V_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    conv_kernel_L1_0_V_out_blk_n;
reg    conv_kernel_L1_1_V_out_blk_n;
reg    conv_kernel_L1_2_V_out_blk_n;
reg    conv_kernel_L1_3_V_out_blk_n;
reg    conv_kernel_L1_4_V_out_blk_n;
reg    conv_kernel_L1_5_V_out_blk_n;
reg    conv_kernel_L1_6_V_out_blk_n;
reg    conv_kernel_L1_7_V_out_blk_n;
reg    conv_kernel_L1_8_V_out_blk_n;
reg    conv_bias_L1_V_out_blk_n;
reg    a_V_out_blk_n;
reg    b_V_out_blk_n;
reg    conv_bias_L2_0_V_out_blk_n;
reg    conv_bias_L2_1_V_out_blk_n;
reg    conv_bias_L2_2_V_out_blk_n;
reg    conv_bias_L2_3_V_out_blk_n;
wire   [4:0] i_fu_423_p2;
reg   [4:0] i_reg_517;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp_2_fu_453_p2;
reg   [10:0] tmp_2_reg_522;
wire   [0:0] tmp_i_i_fu_417_p2;
wire   [4:0] j_fu_465_p2;
reg   [4:0] j_reg_530;
wire    ap_CS_fsm_state3;
wire  signed [63:0] tmp_3_cast_fu_480_p1;
reg  signed [63:0] tmp_3_cast_reg_535;
wire   [0:0] tmp_2_i_i_fu_459_p2;
reg   [17:0] tmp_i_i_38_reg_550;
wire    ap_CS_fsm_state4;
reg   [4:0] i_i_i_reg_395;
reg    ap_block_state1;
reg   [4:0] j_i_i_reg_406;
wire    ap_CS_fsm_state5;
wire   [9:0] tmp_fu_429_p3;
wire   [6:0] tmp_1_fu_441_p3;
wire   [10:0] p_shl_cast_fu_437_p1;
wire   [10:0] p_shl1_cast_fu_449_p1;
wire   [10:0] tmp_4_i_i_cast_fu_471_p1;
wire   [10:0] tmp_3_fu_475_p2;
wire   [18:0] tmp_6_i_i_fu_486_p3;
wire  signed [18:0] tmp_7_cast_i_i_fu_494_p1;
wire   [18:0] p_Val2_2_fu_498_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_i_i_fu_459_p2 == 1'd1))) begin
        i_i_i_reg_395 <= i_reg_517;
    end else if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_395 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_i_i_reg_406 <= j_reg_530;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd0))) begin
        j_i_i_reg_406 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_517 <= i_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_530 <= j_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd0))) begin
        tmp_2_reg_522[10 : 2] <= tmp_2_fu_453_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_i_i_fu_459_p2 == 1'd0))) begin
        tmp_3_cast_reg_535 <= tmp_3_cast_fu_480_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_i_i_38_reg_550 <= {{p_Val2_2_fu_498_p2[18:1]}};
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        a_V_out_blk_n = a_V_out_full_n;
    end else begin
        a_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        a_V_out_write = 1'b1;
    end else begin
        a_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        b_V_out_blk_n = b_V_out_full_n;
    end else begin
        b_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        b_V_out_write = 1'b1;
    end else begin
        b_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L1_V_out_blk_n = conv_bias_L1_V_out_full_n;
    end else begin
        conv_bias_L1_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L1_V_out_write = 1'b1;
    end else begin
        conv_bias_L1_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_0_V_out_blk_n = conv_bias_L2_0_V_out_full_n;
    end else begin
        conv_bias_L2_0_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_0_V_out_write = 1'b1;
    end else begin
        conv_bias_L2_0_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_1_V_out_blk_n = conv_bias_L2_1_V_out_full_n;
    end else begin
        conv_bias_L2_1_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_1_V_out_write = 1'b1;
    end else begin
        conv_bias_L2_1_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_2_V_out_blk_n = conv_bias_L2_2_V_out_full_n;
    end else begin
        conv_bias_L2_2_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_2_V_out_write = 1'b1;
    end else begin
        conv_bias_L2_2_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_3_V_out_blk_n = conv_bias_L2_3_V_out_full_n;
    end else begin
        conv_bias_L2_3_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_bias_L2_3_V_out_write = 1'b1;
    end else begin
        conv_bias_L2_3_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_0_V_out_blk_n = conv_kernel_L1_0_V_out_full_n;
    end else begin
        conv_kernel_L1_0_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_0_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_0_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_1_V_out_blk_n = conv_kernel_L1_1_V_out_full_n;
    end else begin
        conv_kernel_L1_1_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_1_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_1_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_2_V_out_blk_n = conv_kernel_L1_2_V_out_full_n;
    end else begin
        conv_kernel_L1_2_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_2_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_2_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_3_V_out_blk_n = conv_kernel_L1_3_V_out_full_n;
    end else begin
        conv_kernel_L1_3_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_3_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_3_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_4_V_out_blk_n = conv_kernel_L1_4_V_out_full_n;
    end else begin
        conv_kernel_L1_4_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_4_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_4_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_5_V_out_blk_n = conv_kernel_L1_5_V_out_full_n;
    end else begin
        conv_kernel_L1_5_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_5_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_5_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_6_V_out_blk_n = conv_kernel_L1_6_V_out_full_n;
    end else begin
        conv_kernel_L1_6_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_6_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_6_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_7_V_out_blk_n = conv_kernel_L1_7_V_out_full_n;
    end else begin
        conv_kernel_L1_7_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_7_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_7_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_8_V_out_blk_n = conv_kernel_L1_8_V_out_full_n;
    end else begin
        conv_kernel_L1_8_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_kernel_L1_8_V_out_write = 1'b1;
    end else begin
        conv_kernel_L1_8_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_image_V_ce0 = 1'b1;
    end else begin
        in_image_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        means_V_ce0 = 1'b1;
    end else begin
        means_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_image_V_ce0 = 1'b1;
    end else begin
        out_image_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_image_V_we0 = 1'b1;
    end else begin
        out_image_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_i_fu_417_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_i_i_fu_459_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_out_din = a_V;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((conv_kernel_L1_8_V_out_full_n == 1'b0) | (conv_kernel_L1_7_V_out_full_n == 1'b0) | (conv_kernel_L1_6_V_out_full_n == 1'b0) | (conv_kernel_L1_5_V_out_full_n == 1'b0) | (conv_kernel_L1_4_V_out_full_n == 1'b0) | (conv_kernel_L1_3_V_out_full_n == 1'b0) | (conv_kernel_L1_2_V_out_full_n == 1'b0) | (conv_kernel_L1_1_V_out_full_n == 1'b0) | (conv_kernel_L1_0_V_out_full_n == 1'b0) | (conv_bias_L2_3_V_out_full_n == 1'b0) | (conv_bias_L2_2_V_out_full_n == 1'b0) | (conv_bias_L2_1_V_out_full_n == 1'b0) | (conv_bias_L2_0_V_out_full_n == 1'b0) | (b_V_out_full_n == 1'b0) | (1'b0 == a_V_out_full_n) | (conv_bias_L1_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign b_V_out_din = b_V;

assign conv_bias_L1_V_out_din = conv_bias_L1_V;

assign conv_bias_L2_0_V_out_din = conv_bias_L2_0_V;

assign conv_bias_L2_1_V_out_din = conv_bias_L2_1_V;

assign conv_bias_L2_2_V_out_din = conv_bias_L2_2_V;

assign conv_bias_L2_3_V_out_din = conv_bias_L2_3_V;

assign conv_kernel_L1_0_V_out_din = conv_kernel_L1_0_V;

assign conv_kernel_L1_1_V_out_din = conv_kernel_L1_1_V;

assign conv_kernel_L1_2_V_out_din = conv_kernel_L1_2_V;

assign conv_kernel_L1_3_V_out_din = conv_kernel_L1_3_V;

assign conv_kernel_L1_4_V_out_din = conv_kernel_L1_4_V;

assign conv_kernel_L1_5_V_out_din = conv_kernel_L1_5_V;

assign conv_kernel_L1_6_V_out_din = conv_kernel_L1_6_V;

assign conv_kernel_L1_7_V_out_din = conv_kernel_L1_7_V;

assign conv_kernel_L1_8_V_out_din = conv_kernel_L1_8_V;

assign i_fu_423_p2 = (i_i_i_reg_395 + 5'd1);

assign in_image_V_address0 = tmp_3_cast_fu_480_p1;

assign j_fu_465_p2 = (j_i_i_reg_406 + 5'd1);

assign means_V_address0 = tmp_3_cast_fu_480_p1;

assign out_image_V_address0 = tmp_3_cast_reg_535;

assign out_image_V_d0 = tmp_i_i_38_reg_550;

assign p_Val2_2_fu_498_p2 = ($signed(tmp_6_i_i_fu_486_p3) - $signed(tmp_7_cast_i_i_fu_494_p1));

assign p_shl1_cast_fu_449_p1 = tmp_1_fu_441_p3;

assign p_shl_cast_fu_437_p1 = tmp_fu_429_p3;

assign tmp_1_fu_441_p3 = {{i_i_i_reg_395}, {2'd0}};

assign tmp_2_fu_453_p2 = (p_shl_cast_fu_437_p1 - p_shl1_cast_fu_449_p1);

assign tmp_2_i_i_fu_459_p2 = ((j_i_i_reg_406 == 5'd28) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_480_p1 = $signed(tmp_3_fu_475_p2);

assign tmp_3_fu_475_p2 = (tmp_4_i_i_cast_fu_471_p1 + tmp_2_reg_522);

assign tmp_4_i_i_cast_fu_471_p1 = j_i_i_reg_406;

assign tmp_6_i_i_fu_486_p3 = {{in_image_V_q0}, {1'd0}};

assign tmp_7_cast_i_i_fu_494_p1 = $signed(means_V_q0);

assign tmp_fu_429_p3 = {{i_i_i_reg_395}, {5'd0}};

assign tmp_i_i_fu_417_p2 = ((i_i_i_reg_395 == 5'd28) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_2_reg_522[1:0] <= 2'b00;
end

endmodule //zero_mean_1chan64
