// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "batch_norm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic batch_norm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic batch_norm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> batch_norm::ap_ST_fsm_state1 = "1";
const sc_lv<7> batch_norm::ap_ST_fsm_state2 = "10";
const sc_lv<7> batch_norm::ap_ST_fsm_state3 = "100";
const sc_lv<7> batch_norm::ap_ST_fsm_state4 = "1000";
const sc_lv<7> batch_norm::ap_ST_fsm_state5 = "10000";
const sc_lv<7> batch_norm::ap_ST_fsm_state6 = "100000";
const sc_lv<7> batch_norm::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> batch_norm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> batch_norm::ap_const_lv32_1 = "1";
const sc_lv<1> batch_norm::ap_const_lv1_0 = "0";
const sc_lv<32> batch_norm::ap_const_lv32_2 = "10";
const sc_lv<32> batch_norm::ap_const_lv32_3 = "11";
const sc_lv<32> batch_norm::ap_const_lv32_4 = "100";
const sc_lv<32> batch_norm::ap_const_lv32_5 = "101";
const sc_lv<5> batch_norm::ap_const_lv5_0 = "00000";
const sc_lv<1> batch_norm::ap_const_lv1_1 = "1";
const sc_lv<32> batch_norm::ap_const_lv32_6 = "110";
const sc_lv<16> batch_norm::ap_const_lv16_0 = "0000000000000000";
const sc_lv<5> batch_norm::ap_const_lv5_1C = "11100";
const sc_lv<5> batch_norm::ap_const_lv5_1 = "1";
const sc_lv<2> batch_norm::ap_const_lv2_0 = "00";
const sc_lv<11> batch_norm::ap_const_lv11_0 = "00000000000";
const bool batch_norm::ap_const_boolean_1 = true;

batch_norm::batch_norm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    CNN_mux_732_25_2_1_U117 = new CNN_mux_732_25_2_1<1,2,25,25,25,25,25,25,25,32,25>("CNN_mux_732_25_2_1_U117");
    CNN_mux_732_25_2_1_U117->clk(ap_clk);
    CNN_mux_732_25_2_1_U117->reset(ap_rst);
    CNN_mux_732_25_2_1_U117->din0(in_image_0_V_q0);
    CNN_mux_732_25_2_1_U117->din1(in_image_1_V_q0);
    CNN_mux_732_25_2_1_U117->din2(in_image_2_V_q0);
    CNN_mux_732_25_2_1_U117->din3(in_image_3_V_q0);
    CNN_mux_732_25_2_1_U117->din4(in_image_4_V_q0);
    CNN_mux_732_25_2_1_U117->din5(in_image_5_V_q0);
    CNN_mux_732_25_2_1_U117->din6(in_image_6_V_q0);
    CNN_mux_732_25_2_1_U117->din7(arrayNo_cast_i_reg_429);
    CNN_mux_732_25_2_1_U117->ce(ap_var_for_const0);
    CNN_mux_732_25_2_1_U117->dout(grp_fu_365_p9);
    CNN_mac_muladd_25dEe_U118 = new CNN_mac_muladd_25dEe<1,2,25,18,34,37>("CNN_mac_muladd_25dEe_U118");
    CNN_mac_muladd_25dEe_U118->clk(ap_clk);
    CNN_mac_muladd_25dEe_U118->reset(ap_rst);
    CNN_mac_muladd_25dEe_U118->din0(grp_fu_365_p9);
    CNN_mac_muladd_25dEe_U118->din1(grp_fu_400_p1);
    CNN_mac_muladd_25dEe_U118->din2(grp_fu_400_p2);
    CNN_mac_muladd_25dEe_U118->ce(ap_var_for_const0);
    CNN_mac_muladd_25dEe_U118->dout(grp_fu_400_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( A_V_empty_n );

    SC_METHOD(thread_A_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( A_V_empty_n );
    sensitive << ( B_V_empty_n );

    SC_METHOD(thread_B_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( B_V_empty_n );

    SC_METHOD(thread_B_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( A_V_empty_n );
    sensitive << ( B_V_empty_n );

    SC_METHOD(thread_OP2_V_i_fu_218_p1);
    sensitive << ( A_V_dout );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( A_V_empty_n );
    sensitive << ( B_V_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_234_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_234_p2 );

    SC_METHOD(thread_arrayNo_cast_i_fu_286_p1);
    sensitive << ( arrayNo_i_fu_276_p4 );

    SC_METHOD(thread_arrayNo_i_fu_276_p4);
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_grp_fu_400_p1);
    sensitive << ( OP2_V_i_reg_406 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_400_p2);
    sensitive << ( tmp_56_cast_i_reg_411 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_in_image_0_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_0_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_1_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_1_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_2_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_2_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_3_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_3_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_4_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_4_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_5_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_5_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_image_6_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_99_cast_fu_349_p1 );

    SC_METHOD(thread_in_image_6_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_fu_240_p2);
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_k_fu_330_p2);
    sensitive << ( k_i_reg_207 );

    SC_METHOD(thread_out_image_V_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_100_cast_fu_388_p1 );

    SC_METHOD(thread_out_image_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_image_V_d0);
    sensitive << ( p_Val2_i_74_reg_527 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_image_V_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_shl1_cast_fu_314_p1);
    sensitive << ( tmp_80_fu_306_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_254_p1);
    sensitive << ( tmp_s_fu_246_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_266_p1);
    sensitive << ( tmp_77_fu_258_p3 );

    SC_METHOD(thread_p_shl_cast_fu_302_p1);
    sensitive << ( tmp_79_fu_294_p3 );

    SC_METHOD(thread_tmp_100_cast_fu_388_p1);
    sensitive << ( tmp_83_reg_482 );

    SC_METHOD(thread_tmp_20_fu_290_p1);
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_tmp_53_i_fu_324_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_i_reg_207 );

    SC_METHOD(thread_tmp_54_i_cast1_fu_336_p1);
    sensitive << ( k_i_reg_207 );

    SC_METHOD(thread_tmp_54_i_cast_fu_340_p1);
    sensitive << ( k_i_reg_207 );

    SC_METHOD(thread_tmp_56_cast_i_fu_230_p1);
    sensitive << ( tmp_56_i_fu_222_p3 );

    SC_METHOD(thread_tmp_56_i_fu_222_p3);
    sensitive << ( B_V_dout );

    SC_METHOD(thread_tmp_77_fu_258_p3);
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_tmp_78_fu_270_p2);
    sensitive << ( p_shl2_cast_fu_254_p1 );
    sensitive << ( p_shl3_cast_fu_266_p1 );

    SC_METHOD(thread_tmp_79_fu_294_p3);
    sensitive << ( tmp_20_fu_290_p1 );

    SC_METHOD(thread_tmp_80_fu_306_p3);
    sensitive << ( tmp_20_fu_290_p1 );

    SC_METHOD(thread_tmp_81_fu_318_p2);
    sensitive << ( p_shl_cast_fu_302_p1 );
    sensitive << ( p_shl1_cast_fu_314_p1 );

    SC_METHOD(thread_tmp_82_fu_344_p2);
    sensitive << ( tmp_81_reg_434 );
    sensitive << ( tmp_54_i_cast_fu_340_p1 );

    SC_METHOD(thread_tmp_83_fu_360_p2);
    sensitive << ( tmp_78_reg_424 );
    sensitive << ( tmp_54_i_cast1_fu_336_p1 );

    SC_METHOD(thread_tmp_99_cast_fu_349_p1);
    sensitive << ( tmp_82_fu_344_p2 );

    SC_METHOD(thread_tmp_i_fu_234_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_tmp_s_fu_246_p3);
    sensitive << ( j_i_reg_196 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( A_V_empty_n );
    sensitive << ( B_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_234_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_53_i_fu_324_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "batch_norm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_image_0_V_address0, "(port)in_image_0_V_address0");
    sc_trace(mVcdFile, in_image_0_V_ce0, "(port)in_image_0_V_ce0");
    sc_trace(mVcdFile, in_image_0_V_q0, "(port)in_image_0_V_q0");
    sc_trace(mVcdFile, in_image_1_V_address0, "(port)in_image_1_V_address0");
    sc_trace(mVcdFile, in_image_1_V_ce0, "(port)in_image_1_V_ce0");
    sc_trace(mVcdFile, in_image_1_V_q0, "(port)in_image_1_V_q0");
    sc_trace(mVcdFile, in_image_2_V_address0, "(port)in_image_2_V_address0");
    sc_trace(mVcdFile, in_image_2_V_ce0, "(port)in_image_2_V_ce0");
    sc_trace(mVcdFile, in_image_2_V_q0, "(port)in_image_2_V_q0");
    sc_trace(mVcdFile, in_image_3_V_address0, "(port)in_image_3_V_address0");
    sc_trace(mVcdFile, in_image_3_V_ce0, "(port)in_image_3_V_ce0");
    sc_trace(mVcdFile, in_image_3_V_q0, "(port)in_image_3_V_q0");
    sc_trace(mVcdFile, in_image_4_V_address0, "(port)in_image_4_V_address0");
    sc_trace(mVcdFile, in_image_4_V_ce0, "(port)in_image_4_V_ce0");
    sc_trace(mVcdFile, in_image_4_V_q0, "(port)in_image_4_V_q0");
    sc_trace(mVcdFile, in_image_5_V_address0, "(port)in_image_5_V_address0");
    sc_trace(mVcdFile, in_image_5_V_ce0, "(port)in_image_5_V_ce0");
    sc_trace(mVcdFile, in_image_5_V_q0, "(port)in_image_5_V_q0");
    sc_trace(mVcdFile, in_image_6_V_address0, "(port)in_image_6_V_address0");
    sc_trace(mVcdFile, in_image_6_V_ce0, "(port)in_image_6_V_ce0");
    sc_trace(mVcdFile, in_image_6_V_q0, "(port)in_image_6_V_q0");
    sc_trace(mVcdFile, A_V_dout, "(port)A_V_dout");
    sc_trace(mVcdFile, A_V_empty_n, "(port)A_V_empty_n");
    sc_trace(mVcdFile, A_V_read, "(port)A_V_read");
    sc_trace(mVcdFile, B_V_dout, "(port)B_V_dout");
    sc_trace(mVcdFile, B_V_empty_n, "(port)B_V_empty_n");
    sc_trace(mVcdFile, B_V_read, "(port)B_V_read");
    sc_trace(mVcdFile, out_image_V_address0, "(port)out_image_V_address0");
    sc_trace(mVcdFile, out_image_V_ce0, "(port)out_image_V_ce0");
    sc_trace(mVcdFile, out_image_V_we0, "(port)out_image_V_we0");
    sc_trace(mVcdFile, out_image_V_d0, "(port)out_image_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, A_V_blk_n, "A_V_blk_n");
    sc_trace(mVcdFile, B_V_blk_n, "B_V_blk_n");
    sc_trace(mVcdFile, OP2_V_i_fu_218_p1, "OP2_V_i_fu_218_p1");
    sc_trace(mVcdFile, OP2_V_i_reg_406, "OP2_V_i_reg_406");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_56_cast_i_fu_230_p1, "tmp_56_cast_i_fu_230_p1");
    sc_trace(mVcdFile, tmp_56_cast_i_reg_411, "tmp_56_cast_i_reg_411");
    sc_trace(mVcdFile, j_fu_240_p2, "j_fu_240_p2");
    sc_trace(mVcdFile, j_reg_419, "j_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_78_fu_270_p2, "tmp_78_fu_270_p2");
    sc_trace(mVcdFile, tmp_78_reg_424, "tmp_78_reg_424");
    sc_trace(mVcdFile, tmp_i_fu_234_p2, "tmp_i_fu_234_p2");
    sc_trace(mVcdFile, arrayNo_cast_i_fu_286_p1, "arrayNo_cast_i_fu_286_p1");
    sc_trace(mVcdFile, arrayNo_cast_i_reg_429, "arrayNo_cast_i_reg_429");
    sc_trace(mVcdFile, tmp_81_fu_318_p2, "tmp_81_fu_318_p2");
    sc_trace(mVcdFile, tmp_81_reg_434, "tmp_81_reg_434");
    sc_trace(mVcdFile, k_fu_330_p2, "k_fu_330_p2");
    sc_trace(mVcdFile, k_reg_442, "k_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_53_i_fu_324_p2, "tmp_53_i_fu_324_p2");
    sc_trace(mVcdFile, tmp_83_fu_360_p2, "tmp_83_fu_360_p2");
    sc_trace(mVcdFile, tmp_83_reg_482, "tmp_83_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_400_p3, "grp_fu_400_p3");
    sc_trace(mVcdFile, p_Val2_i_74_reg_527, "p_Val2_i_74_reg_527");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j_i_reg_196, "j_i_reg_196");
    sc_trace(mVcdFile, k_i_reg_207, "k_i_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_99_cast_fu_349_p1, "tmp_99_cast_fu_349_p1");
    sc_trace(mVcdFile, tmp_100_cast_fu_388_p1, "tmp_100_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp_56_i_fu_222_p3, "tmp_56_i_fu_222_p3");
    sc_trace(mVcdFile, tmp_s_fu_246_p3, "tmp_s_fu_246_p3");
    sc_trace(mVcdFile, tmp_77_fu_258_p3, "tmp_77_fu_258_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_254_p1, "p_shl2_cast_fu_254_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_266_p1, "p_shl3_cast_fu_266_p1");
    sc_trace(mVcdFile, arrayNo_i_fu_276_p4, "arrayNo_i_fu_276_p4");
    sc_trace(mVcdFile, tmp_20_fu_290_p1, "tmp_20_fu_290_p1");
    sc_trace(mVcdFile, tmp_79_fu_294_p3, "tmp_79_fu_294_p3");
    sc_trace(mVcdFile, tmp_80_fu_306_p3, "tmp_80_fu_306_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_302_p1, "p_shl_cast_fu_302_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_314_p1, "p_shl1_cast_fu_314_p1");
    sc_trace(mVcdFile, tmp_54_i_cast_fu_340_p1, "tmp_54_i_cast_fu_340_p1");
    sc_trace(mVcdFile, tmp_82_fu_344_p2, "tmp_82_fu_344_p2");
    sc_trace(mVcdFile, tmp_54_i_cast1_fu_336_p1, "tmp_54_i_cast1_fu_336_p1");
    sc_trace(mVcdFile, grp_fu_365_p9, "grp_fu_365_p9");
    sc_trace(mVcdFile, grp_fu_400_p1, "grp_fu_400_p1");
    sc_trace(mVcdFile, grp_fu_400_p2, "grp_fu_400_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

batch_norm::~batch_norm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete CNN_mux_732_25_2_1_U117;
    delete CNN_mac_muladd_25dEe_U118;
}

void batch_norm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void batch_norm::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_53_i_fu_324_p2.read(), ap_const_lv1_1))) {
        j_i_reg_196 = j_reg_419.read();
    } else if ((!(esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        j_i_reg_196 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        k_i_reg_207 = k_reg_442.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_0))) {
        k_i_reg_207 = ap_const_lv5_0;
    }
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        OP2_V_i_reg_406 = OP2_V_i_fu_218_p1.read();
        tmp_56_cast_i_reg_411 = tmp_56_cast_i_fu_230_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_0))) {
        arrayNo_cast_i_reg_429 = arrayNo_cast_i_fu_286_p1.read();
        tmp_78_reg_424 = tmp_78_fu_270_p2.read();
        tmp_81_reg_434 = tmp_81_fu_318_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_419 = j_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_reg_442 = k_fu_330_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_Val2_i_74_reg_527 = grp_fu_400_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_53_i_fu_324_p2.read(), ap_const_lv1_0))) {
        tmp_83_reg_482 = tmp_83_fu_360_p2.read();
    }
}

void batch_norm::thread_A_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        A_V_blk_n = A_V_empty_n.read();
    } else {
        A_V_blk_n = ap_const_logic_1;
    }
}

void batch_norm::thread_A_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        A_V_read = ap_const_logic_1;
    } else {
        A_V_read = ap_const_logic_0;
    }
}

void batch_norm::thread_B_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        B_V_blk_n = B_V_empty_n.read();
    } else {
        B_V_blk_n = ap_const_logic_1;
    }
}

void batch_norm::thread_B_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        B_V_read = ap_const_logic_1;
    } else {
        B_V_read = ap_const_logic_0;
    }
}

void batch_norm::thread_OP2_V_i_fu_218_p1() {
    OP2_V_i_fu_218_p1 = esl_sext<37,18>(A_V_dout.read());
}

void batch_norm::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void batch_norm::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void batch_norm::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void batch_norm::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void batch_norm::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void batch_norm::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void batch_norm::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void batch_norm::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void batch_norm::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void batch_norm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void batch_norm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void batch_norm::thread_arrayNo_cast_i_fu_286_p1() {
    arrayNo_cast_i_fu_286_p1 = esl_zext<32,3>(arrayNo_i_fu_276_p4.read());
}

void batch_norm::thread_arrayNo_i_fu_276_p4() {
    arrayNo_i_fu_276_p4 = j_i_reg_196.read().range(4, 2);
}

void batch_norm::thread_grp_fu_400_p1() {
    grp_fu_400_p1 =  (sc_lv<18>) (OP2_V_i_reg_406.read());
}

void batch_norm::thread_grp_fu_400_p2() {
    grp_fu_400_p2 =  (sc_lv<34>) (tmp_56_cast_i_reg_411.read());
}

void batch_norm::thread_in_image_0_V_address0() {
    in_image_0_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_0_V_ce0 = ap_const_logic_1;
    } else {
        in_image_0_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_1_V_address0() {
    in_image_1_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_1_V_ce0 = ap_const_logic_1;
    } else {
        in_image_1_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_2_V_address0() {
    in_image_2_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_2_V_ce0 = ap_const_logic_1;
    } else {
        in_image_2_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_3_V_address0() {
    in_image_3_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_3_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_3_V_ce0 = ap_const_logic_1;
    } else {
        in_image_3_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_4_V_address0() {
    in_image_4_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_4_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_4_V_ce0 = ap_const_logic_1;
    } else {
        in_image_4_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_5_V_address0() {
    in_image_5_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_5_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_5_V_ce0 = ap_const_logic_1;
    } else {
        in_image_5_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_in_image_6_V_address0() {
    in_image_6_V_address0 =  (sc_lv<7>) (tmp_99_cast_fu_349_p1.read());
}

void batch_norm::thread_in_image_6_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_image_6_V_ce0 = ap_const_logic_1;
    } else {
        in_image_6_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_j_fu_240_p2() {
    j_fu_240_p2 = (!j_i_reg_196.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_i_reg_196.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void batch_norm::thread_k_fu_330_p2() {
    k_fu_330_p2 = (!k_i_reg_207.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_i_reg_207.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void batch_norm::thread_out_image_V_address0() {
    out_image_V_address0 =  (sc_lv<10>) (tmp_100_cast_fu_388_p1.read());
}

void batch_norm::thread_out_image_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_image_V_ce0 = ap_const_logic_1;
    } else {
        out_image_V_ce0 = ap_const_logic_0;
    }
}

void batch_norm::thread_out_image_V_d0() {
    out_image_V_d0 = esl_concat<37,11>(p_Val2_i_74_reg_527.read(), ap_const_lv11_0);
}

void batch_norm::thread_out_image_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_image_V_we0 = ap_const_logic_1;
    } else {
        out_image_V_we0 = ap_const_logic_0;
    }
}

void batch_norm::thread_p_shl1_cast_fu_314_p1() {
    p_shl1_cast_fu_314_p1 = esl_zext<8,4>(tmp_80_fu_306_p3.read());
}

void batch_norm::thread_p_shl2_cast_fu_254_p1() {
    p_shl2_cast_fu_254_p1 = esl_zext<11,10>(tmp_s_fu_246_p3.read());
}

void batch_norm::thread_p_shl3_cast_fu_266_p1() {
    p_shl3_cast_fu_266_p1 = esl_zext<11,7>(tmp_77_fu_258_p3.read());
}

void batch_norm::thread_p_shl_cast_fu_302_p1() {
    p_shl_cast_fu_302_p1 = esl_zext<8,7>(tmp_79_fu_294_p3.read());
}

void batch_norm::thread_tmp_100_cast_fu_388_p1() {
    tmp_100_cast_fu_388_p1 = esl_sext<64,11>(tmp_83_reg_482.read());
}

void batch_norm::thread_tmp_20_fu_290_p1() {
    tmp_20_fu_290_p1 = j_i_reg_196.read().range(2-1, 0);
}

void batch_norm::thread_tmp_53_i_fu_324_p2() {
    tmp_53_i_fu_324_p2 = (!k_i_reg_207.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(k_i_reg_207.read() == ap_const_lv5_1C);
}

void batch_norm::thread_tmp_54_i_cast1_fu_336_p1() {
    tmp_54_i_cast1_fu_336_p1 = esl_zext<11,5>(k_i_reg_207.read());
}

void batch_norm::thread_tmp_54_i_cast_fu_340_p1() {
    tmp_54_i_cast_fu_340_p1 = esl_zext<8,5>(k_i_reg_207.read());
}

void batch_norm::thread_tmp_56_cast_i_fu_230_p1() {
    tmp_56_cast_i_fu_230_p1 = esl_sext<37,34>(tmp_56_i_fu_222_p3.read());
}

void batch_norm::thread_tmp_56_i_fu_222_p3() {
    tmp_56_i_fu_222_p3 = esl_concat<18,16>(B_V_dout.read(), ap_const_lv16_0);
}

void batch_norm::thread_tmp_77_fu_258_p3() {
    tmp_77_fu_258_p3 = esl_concat<5,2>(j_i_reg_196.read(), ap_const_lv2_0);
}

void batch_norm::thread_tmp_78_fu_270_p2() {
    tmp_78_fu_270_p2 = (!p_shl2_cast_fu_254_p1.read().is_01() || !p_shl3_cast_fu_266_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl2_cast_fu_254_p1.read()) - sc_biguint<11>(p_shl3_cast_fu_266_p1.read()));
}

void batch_norm::thread_tmp_79_fu_294_p3() {
    tmp_79_fu_294_p3 = esl_concat<2,5>(tmp_20_fu_290_p1.read(), ap_const_lv5_0);
}

void batch_norm::thread_tmp_80_fu_306_p3() {
    tmp_80_fu_306_p3 = esl_concat<2,2>(tmp_20_fu_290_p1.read(), ap_const_lv2_0);
}

void batch_norm::thread_tmp_81_fu_318_p2() {
    tmp_81_fu_318_p2 = (!p_shl_cast_fu_302_p1.read().is_01() || !p_shl1_cast_fu_314_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl_cast_fu_302_p1.read()) - sc_biguint<8>(p_shl1_cast_fu_314_p1.read()));
}

void batch_norm::thread_tmp_82_fu_344_p2() {
    tmp_82_fu_344_p2 = (!tmp_54_i_cast_fu_340_p1.read().is_01() || !tmp_81_reg_434.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_54_i_cast_fu_340_p1.read()) + sc_biguint<8>(tmp_81_reg_434.read()));
}

void batch_norm::thread_tmp_83_fu_360_p2() {
    tmp_83_fu_360_p2 = (!tmp_54_i_cast1_fu_336_p1.read().is_01() || !tmp_78_reg_424.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_54_i_cast1_fu_336_p1.read()) + sc_biguint<11>(tmp_78_reg_424.read()));
}

void batch_norm::thread_tmp_99_cast_fu_349_p1() {
    tmp_99_cast_fu_349_p1 = esl_sext<64,8>(tmp_82_fu_344_p2.read());
}

void batch_norm::thread_tmp_i_fu_234_p2() {
    tmp_i_fu_234_p2 = (!j_i_reg_196.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_196.read() == ap_const_lv5_1C);
}

void batch_norm::thread_tmp_s_fu_246_p3() {
    tmp_s_fu_246_p3 = esl_concat<5,5>(j_i_reg_196.read(), ap_const_lv5_0);
}

void batch_norm::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_0, B_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, A_V_empty_n.read()) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_234_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_53_i_fu_324_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

