// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "CNN.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CNN::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<10> CNN::ap_const_lv10_0 = "0000000000";
const sc_logic CNN::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> CNN::ap_const_lv18_0 = "000000000000000000";
const sc_lv<4> CNN::ap_const_lv4_0 = "0000";
const sc_lv<6> CNN::ap_const_lv6_0 = "000000";
const sc_lv<2> CNN::ap_const_lv2_0 = "00";
const sc_lv<48> CNN::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_lv<25> CNN::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<2> CNN::ap_const_lv2_1 = "1";
const bool CNN::ap_const_boolean_1 = true;
const sc_lv<10> CNN::ap_const_lv10_1 = "1";
const sc_lv<18> CNN::ap_const_lv18_1 = "1";
const sc_lv<8> CNN::ap_const_lv8_0 = "00000000";
const sc_lv<8> CNN::ap_const_lv8_1 = "1";
const sc_lv<25> CNN::ap_const_lv25_1 = "1";

CNN::CNN(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mean_removed_V_U = new CNN_mean_removed_V("mean_removed_V_U");
    mean_removed_V_U->clk(ap_clk);
    mean_removed_V_U->reset(ap_rst);
    mean_removed_V_U->i_address0(zero_mean_1chan50_U0_out_image_V_address0);
    mean_removed_V_U->i_ce0(zero_mean_1chan50_U0_out_image_V_ce0);
    mean_removed_V_U->i_we0(zero_mean_1chan50_U0_out_image_V_we0);
    mean_removed_V_U->i_d0(zero_mean_1chan50_U0_out_image_V_d0);
    mean_removed_V_U->i_q0(mean_removed_V_i_q0);
    mean_removed_V_U->t_address0(efficient_pad_n_1cha_U0_in_image_V_address0);
    mean_removed_V_U->t_ce0(efficient_pad_n_1cha_U0_in_image_V_ce0);
    mean_removed_V_U->t_we0(ap_var_for_const0);
    mean_removed_V_U->t_d0(ap_var_for_const1);
    mean_removed_V_U->t_q0(mean_removed_V_t_q0);
    mean_removed_V_U->i_ce(ap_var_for_const2);
    mean_removed_V_U->t_ce(ap_var_for_const2);
    mean_removed_V_U->i_full_n(mean_removed_V_i_full_n);
    mean_removed_V_U->i_write(zero_mean_1chan50_U0_ap_done);
    mean_removed_V_U->t_empty_n(mean_removed_V_t_empty_n);
    mean_removed_V_U->t_read(efficient_pad_n_1cha_U0_ap_ready);
    padded_V_U = new CNN_padded_V("padded_V_U");
    padded_V_U->clk(ap_clk);
    padded_V_U->reset(ap_rst);
    padded_V_U->i_address0(efficient_pad_n_1cha_U0_out_image_V_address0);
    padded_V_U->i_ce0(efficient_pad_n_1cha_U0_out_image_V_ce0);
    padded_V_U->i_we0(efficient_pad_n_1cha_U0_out_image_V_we0);
    padded_V_U->i_d0(efficient_pad_n_1cha_U0_out_image_V_d0);
    padded_V_U->i_q0(padded_V_i_q0);
    padded_V_U->i_address1(efficient_pad_n_1cha_U0_out_image_V_address1);
    padded_V_U->i_ce1(efficient_pad_n_1cha_U0_out_image_V_ce1);
    padded_V_U->i_we1(efficient_pad_n_1cha_U0_out_image_V_we1);
    padded_V_U->i_d1(efficient_pad_n_1cha_U0_out_image_V_d1);
    padded_V_U->t_address0(resample_U0_square_image_V_address0);
    padded_V_U->t_ce0(resample_U0_square_image_V_ce0);
    padded_V_U->t_we0(ap_var_for_const0);
    padded_V_U->t_d0(ap_var_for_const1);
    padded_V_U->t_q0(padded_V_t_q0);
    padded_V_U->t_address1(ap_var_for_const3);
    padded_V_U->t_ce1(ap_var_for_const0);
    padded_V_U->t_we1(ap_var_for_const0);
    padded_V_U->t_d1(ap_var_for_const1);
    padded_V_U->i_ce(ap_var_for_const2);
    padded_V_U->t_ce(ap_var_for_const2);
    padded_V_U->i_full_n(padded_V_i_full_n);
    padded_V_U->i_write(efficient_pad_n_1cha_U0_ap_done);
    padded_V_U->t_empty_n(padded_V_t_empty_n);
    padded_V_U->t_read(resample_U0_ap_ready);
    resampled_V_U = new CNN_resampled_V("resampled_V_U");
    resampled_V_U->clk(ap_clk);
    resampled_V_U->reset(ap_rst);
    resampled_V_U->i_address0(resample_U0_resampled_V_address0);
    resampled_V_U->i_ce0(resample_U0_resampled_V_ce0);
    resampled_V_U->i_we0(resample_U0_resampled_V_we0);
    resampled_V_U->i_d0(resample_U0_resampled_V_d0);
    resampled_V_U->i_q0(resampled_V_i_q0);
    resampled_V_U->t_address0(conv2d_3x3_1chan_rev_U0_in_image_V_address0);
    resampled_V_U->t_ce0(conv2d_3x3_1chan_rev_U0_in_image_V_ce0);
    resampled_V_U->t_we0(ap_var_for_const0);
    resampled_V_U->t_d0(ap_var_for_const1);
    resampled_V_U->t_q0(resampled_V_t_q0);
    resampled_V_U->i_ce(ap_var_for_const2);
    resampled_V_U->t_ce(ap_var_for_const2);
    resampled_V_U->i_full_n(resampled_V_i_full_n);
    resampled_V_U->i_write(resample_U0_ap_done);
    resampled_V_U->t_empty_n(resampled_V_t_empty_n);
    resampled_V_U->t_read(conv2d_3x3_1chan_rev_U0_ap_ready);
    conv_V_U = new CNN_conv_V("conv_V_U");
    conv_V_U->clk(ap_clk);
    conv_V_U->reset(ap_rst);
    conv_V_U->i_address0(conv2d_3x3_1chan_rev_U0_out_image_V_address0);
    conv_V_U->i_ce0(conv2d_3x3_1chan_rev_U0_out_image_V_ce0);
    conv_V_U->i_we0(conv2d_3x3_1chan_rev_U0_out_image_V_we0);
    conv_V_U->i_d0(conv2d_3x3_1chan_rev_U0_out_image_V_d0);
    conv_V_U->i_q0(conv_V_i_q0);
    conv_V_U->t_address0(batch_norm_U0_in_image_V_address0);
    conv_V_U->t_ce0(batch_norm_U0_in_image_V_ce0);
    conv_V_U->t_we0(ap_var_for_const0);
    conv_V_U->t_d0(ap_var_for_const4);
    conv_V_U->t_q0(conv_V_t_q0);
    conv_V_U->i_ce(ap_var_for_const2);
    conv_V_U->t_ce(ap_var_for_const2);
    conv_V_U->i_full_n(conv_V_i_full_n);
    conv_V_U->i_write(conv2d_3x3_1chan_rev_U0_ap_done);
    conv_V_U->t_empty_n(conv_V_t_empty_n);
    conv_V_U->t_read(batch_norm_U0_ap_ready);
    batchnorm_V_U = new CNN_batchnorm_V("batchnorm_V_U");
    batchnorm_V_U->clk(ap_clk);
    batchnorm_V_U->reset(ap_rst);
    batchnorm_V_U->i_address0(batch_norm_U0_out_image_V_address0);
    batchnorm_V_U->i_ce0(batch_norm_U0_out_image_V_ce0);
    batchnorm_V_U->i_we0(batch_norm_U0_out_image_V_we0);
    batchnorm_V_U->i_d0(batch_norm_U0_out_image_V_d0);
    batchnorm_V_U->i_q0(batchnorm_V_i_q0);
    batchnorm_V_U->t_address0(relu_U0_in_features_V_address0);
    batchnorm_V_U->t_ce0(relu_U0_in_features_V_ce0);
    batchnorm_V_U->t_we0(ap_var_for_const0);
    batchnorm_V_U->t_d0(ap_var_for_const5);
    batchnorm_V_U->t_q0(batchnorm_V_t_q0);
    batchnorm_V_U->i_ce(ap_var_for_const2);
    batchnorm_V_U->t_ce(ap_var_for_const2);
    batchnorm_V_U->i_full_n(batchnorm_V_i_full_n);
    batchnorm_V_U->i_write(batch_norm_U0_ap_done);
    batchnorm_V_U->t_empty_n(batchnorm_V_t_empty_n);
    batchnorm_V_U->t_read(relu_U0_ap_ready);
    ReLU_V_U = new CNN_ReLU_V("ReLU_V_U");
    ReLU_V_U->clk(ap_clk);
    ReLU_V_U->reset(ap_rst);
    ReLU_V_U->i_address0(relu_U0_activations_V_address0);
    ReLU_V_U->i_ce0(relu_U0_activations_V_ce0);
    ReLU_V_U->i_we0(relu_U0_activations_V_we0);
    ReLU_V_U->i_d0(relu_U0_activations_V_d0);
    ReLU_V_U->i_q0(ReLU_V_i_q0);
    ReLU_V_U->i_address1(ap_var_for_const3);
    ReLU_V_U->i_ce1(ap_var_for_const0);
    ReLU_V_U->i_q1(ReLU_V_i_q1);
    ReLU_V_U->t_address0(max_pool_1chan_U0_in_image_V_address0);
    ReLU_V_U->t_ce0(max_pool_1chan_U0_in_image_V_ce0);
    ReLU_V_U->t_we0(ap_var_for_const0);
    ReLU_V_U->t_d0(ap_var_for_const5);
    ReLU_V_U->t_q0(ReLU_V_t_q0);
    ReLU_V_U->t_address1(max_pool_1chan_U0_in_image_V_address1);
    ReLU_V_U->t_ce1(max_pool_1chan_U0_in_image_V_ce1);
    ReLU_V_U->t_q1(ReLU_V_t_q1);
    ReLU_V_U->i_ce(ap_var_for_const2);
    ReLU_V_U->t_ce(ap_var_for_const2);
    ReLU_V_U->i_full_n(ReLU_V_i_full_n);
    ReLU_V_U->i_write(relu_U0_ap_done);
    ReLU_V_U->t_empty_n(ReLU_V_t_empty_n);
    ReLU_V_U->t_read(max_pool_1chan_U0_ap_ready);
    maxpool_V_U = new CNN_maxpool_V("maxpool_V_U");
    maxpool_V_U->clk(ap_clk);
    maxpool_V_U->reset(ap_rst);
    maxpool_V_U->i_address0(max_pool_1chan_U0_out_image_V_address0);
    maxpool_V_U->i_ce0(max_pool_1chan_U0_out_image_V_ce0);
    maxpool_V_U->i_we0(max_pool_1chan_U0_out_image_V_we0);
    maxpool_V_U->i_d0(max_pool_1chan_U0_out_image_V_d0);
    maxpool_V_U->i_q0(maxpool_V_i_q0);
    maxpool_V_U->t_address0(pad_for_conv2_U0_in_image_V_address0);
    maxpool_V_U->t_ce0(pad_for_conv2_U0_in_image_V_ce0);
    maxpool_V_U->t_we0(ap_var_for_const0);
    maxpool_V_U->t_d0(ap_var_for_const4);
    maxpool_V_U->t_q0(maxpool_V_t_q0);
    maxpool_V_U->i_ce(ap_var_for_const2);
    maxpool_V_U->t_ce(ap_var_for_const2);
    maxpool_V_U->i_full_n(maxpool_V_i_full_n);
    maxpool_V_U->i_write(max_pool_1chan_U0_ap_done);
    maxpool_V_U->t_empty_n(maxpool_V_t_empty_n);
    maxpool_V_U->t_read(pad_for_conv2_U0_ap_ready);
    padded_L2_V_U = new CNN_padded_L2_V("padded_L2_V_U");
    padded_L2_V_U->clk(ap_clk);
    padded_L2_V_U->reset(ap_rst);
    padded_L2_V_U->i_address0(pad_for_conv2_U0_out_image_V_address0);
    padded_L2_V_U->i_ce0(pad_for_conv2_U0_out_image_V_ce0);
    padded_L2_V_U->i_we0(pad_for_conv2_U0_out_image_V_we0);
    padded_L2_V_U->i_d0(pad_for_conv2_U0_out_image_V_d0);
    padded_L2_V_U->i_q0(padded_L2_V_i_q0);
    padded_L2_V_U->i_address1(pad_for_conv2_U0_out_image_V_address1);
    padded_L2_V_U->i_ce1(pad_for_conv2_U0_out_image_V_ce1);
    padded_L2_V_U->i_we1(pad_for_conv2_U0_out_image_V_we1);
    padded_L2_V_U->i_d1(pad_for_conv2_U0_out_image_V_d1);
    padded_L2_V_U->t_address0(resample_for_conv2_U0_square_image_V_address0);
    padded_L2_V_U->t_ce0(resample_for_conv2_U0_square_image_V_ce0);
    padded_L2_V_U->t_we0(ap_var_for_const0);
    padded_L2_V_U->t_d0(ap_var_for_const4);
    padded_L2_V_U->t_q0(padded_L2_V_t_q0);
    padded_L2_V_U->t_address1(ap_var_for_const6);
    padded_L2_V_U->t_ce1(ap_var_for_const0);
    padded_L2_V_U->t_we1(ap_var_for_const0);
    padded_L2_V_U->t_d1(ap_var_for_const4);
    padded_L2_V_U->i_ce(ap_var_for_const2);
    padded_L2_V_U->t_ce(ap_var_for_const2);
    padded_L2_V_U->i_full_n(padded_L2_V_i_full_n);
    padded_L2_V_U->i_write(pad_for_conv2_U0_ap_done);
    padded_L2_V_U->t_empty_n(padded_L2_V_t_empty_n);
    padded_L2_V_U->t_read(resample_for_conv2_U0_ap_ready);
    resampled_L2_V_U = new CNN_resampled_L2_V("resampled_L2_V_U");
    resampled_L2_V_U->clk(ap_clk);
    resampled_L2_V_U->reset(ap_rst);
    resampled_L2_V_U->i_address0(resample_for_conv2_U0_resampled_V_address0);
    resampled_L2_V_U->i_ce0(resample_for_conv2_U0_resampled_V_ce0);
    resampled_L2_V_U->i_we0(resample_for_conv2_U0_resampled_V_we0);
    resampled_L2_V_U->i_d0(resample_for_conv2_U0_resampled_V_d0);
    resampled_L2_V_U->i_q0(resampled_L2_V_i_q0);
    resampled_L2_V_U->t_address0(conv2d_3x3_4chan_rev_U0_in_image_V_address0);
    resampled_L2_V_U->t_ce0(conv2d_3x3_4chan_rev_U0_in_image_V_ce0);
    resampled_L2_V_U->t_we0(ap_var_for_const0);
    resampled_L2_V_U->t_d0(ap_var_for_const4);
    resampled_L2_V_U->t_q0(resampled_L2_V_t_q0);
    resampled_L2_V_U->i_ce(ap_var_for_const2);
    resampled_L2_V_U->t_ce(ap_var_for_const2);
    resampled_L2_V_U->i_full_n(resampled_L2_V_i_full_n);
    resampled_L2_V_U->i_write(resample_for_conv2_U0_ap_done);
    resampled_L2_V_U->t_empty_n(resampled_L2_V_t_empty_n);
    resampled_L2_V_U->t_read(conv2d_3x3_4chan_rev_U0_ap_ready);
    zero_mean_1chan50_U0 = new zero_mean_1chan50("zero_mean_1chan50_U0");
    zero_mean_1chan50_U0->ap_clk(ap_clk);
    zero_mean_1chan50_U0->ap_rst(ap_rst);
    zero_mean_1chan50_U0->ap_start(zero_mean_1chan50_U0_ap_start);
    zero_mean_1chan50_U0->ap_done(zero_mean_1chan50_U0_ap_done);
    zero_mean_1chan50_U0->ap_continue(zero_mean_1chan50_U0_ap_continue);
    zero_mean_1chan50_U0->ap_idle(zero_mean_1chan50_U0_ap_idle);
    zero_mean_1chan50_U0->ap_ready(zero_mean_1chan50_U0_ap_ready);
    zero_mean_1chan50_U0->in_image_V_address0(zero_mean_1chan50_U0_in_image_V_address0);
    zero_mean_1chan50_U0->in_image_V_ce0(zero_mean_1chan50_U0_in_image_V_ce0);
    zero_mean_1chan50_U0->in_image_V_q0(in_image_V_q0);
    zero_mean_1chan50_U0->out_image_V_address0(zero_mean_1chan50_U0_out_image_V_address0);
    zero_mean_1chan50_U0->out_image_V_ce0(zero_mean_1chan50_U0_out_image_V_ce0);
    zero_mean_1chan50_U0->out_image_V_we0(zero_mean_1chan50_U0_out_image_V_we0);
    zero_mean_1chan50_U0->out_image_V_d0(zero_mean_1chan50_U0_out_image_V_d0);
    zero_mean_1chan50_U0->means_V_address0(zero_mean_1chan50_U0_means_V_address0);
    zero_mean_1chan50_U0->means_V_ce0(zero_mean_1chan50_U0_means_V_ce0);
    zero_mean_1chan50_U0->means_V_q0(means_V_q0);
    zero_mean_1chan50_U0->conv_bias_L1_V(conv_bias_L1_V);
    zero_mean_1chan50_U0->a_V(a_V);
    zero_mean_1chan50_U0->b_V(b_V);
    zero_mean_1chan50_U0->conv_bias_L1_V_out_din(zero_mean_1chan50_U0_conv_bias_L1_V_out_din);
    zero_mean_1chan50_U0->conv_bias_L1_V_out_full_n(conv_bias_L1_V_c_full_n);
    zero_mean_1chan50_U0->conv_bias_L1_V_out_write(zero_mean_1chan50_U0_conv_bias_L1_V_out_write);
    zero_mean_1chan50_U0->a_V_out_din(zero_mean_1chan50_U0_a_V_out_din);
    zero_mean_1chan50_U0->a_V_out_full_n(a_V_c_full_n);
    zero_mean_1chan50_U0->a_V_out_write(zero_mean_1chan50_U0_a_V_out_write);
    zero_mean_1chan50_U0->b_V_out_din(zero_mean_1chan50_U0_b_V_out_din);
    zero_mean_1chan50_U0->b_V_out_full_n(b_V_c_full_n);
    zero_mean_1chan50_U0->b_V_out_write(zero_mean_1chan50_U0_b_V_out_write);
    efficient_pad_n_1cha_U0 = new efficient_pad_n_1cha("efficient_pad_n_1cha_U0");
    efficient_pad_n_1cha_U0->ap_clk(ap_clk);
    efficient_pad_n_1cha_U0->ap_rst(ap_rst);
    efficient_pad_n_1cha_U0->ap_start(efficient_pad_n_1cha_U0_ap_start);
    efficient_pad_n_1cha_U0->ap_done(efficient_pad_n_1cha_U0_ap_done);
    efficient_pad_n_1cha_U0->ap_continue(efficient_pad_n_1cha_U0_ap_continue);
    efficient_pad_n_1cha_U0->ap_idle(efficient_pad_n_1cha_U0_ap_idle);
    efficient_pad_n_1cha_U0->ap_ready(efficient_pad_n_1cha_U0_ap_ready);
    efficient_pad_n_1cha_U0->in_image_V_address0(efficient_pad_n_1cha_U0_in_image_V_address0);
    efficient_pad_n_1cha_U0->in_image_V_ce0(efficient_pad_n_1cha_U0_in_image_V_ce0);
    efficient_pad_n_1cha_U0->in_image_V_q0(mean_removed_V_t_q0);
    efficient_pad_n_1cha_U0->out_image_V_address0(efficient_pad_n_1cha_U0_out_image_V_address0);
    efficient_pad_n_1cha_U0->out_image_V_ce0(efficient_pad_n_1cha_U0_out_image_V_ce0);
    efficient_pad_n_1cha_U0->out_image_V_we0(efficient_pad_n_1cha_U0_out_image_V_we0);
    efficient_pad_n_1cha_U0->out_image_V_d0(efficient_pad_n_1cha_U0_out_image_V_d0);
    efficient_pad_n_1cha_U0->out_image_V_address1(efficient_pad_n_1cha_U0_out_image_V_address1);
    efficient_pad_n_1cha_U0->out_image_V_ce1(efficient_pad_n_1cha_U0_out_image_V_ce1);
    efficient_pad_n_1cha_U0->out_image_V_we1(efficient_pad_n_1cha_U0_out_image_V_we1);
    efficient_pad_n_1cha_U0->out_image_V_d1(efficient_pad_n_1cha_U0_out_image_V_d1);
    resample_U0 = new resample("resample_U0");
    resample_U0->ap_clk(ap_clk);
    resample_U0->ap_rst(ap_rst);
    resample_U0->ap_start(resample_U0_ap_start);
    resample_U0->ap_done(resample_U0_ap_done);
    resample_U0->ap_continue(resample_U0_ap_continue);
    resample_U0->ap_idle(resample_U0_ap_idle);
    resample_U0->ap_ready(resample_U0_ap_ready);
    resample_U0->square_image_V_address0(resample_U0_square_image_V_address0);
    resample_U0->square_image_V_ce0(resample_U0_square_image_V_ce0);
    resample_U0->square_image_V_q0(padded_V_t_q0);
    resample_U0->resampled_V_address0(resample_U0_resampled_V_address0);
    resample_U0->resampled_V_ce0(resample_U0_resampled_V_ce0);
    resample_U0->resampled_V_we0(resample_U0_resampled_V_we0);
    resample_U0->resampled_V_d0(resample_U0_resampled_V_d0);
    conv2d_3x3_1chan_rev_U0 = new conv2d_3x3_1chan_rev("conv2d_3x3_1chan_rev_U0");
    conv2d_3x3_1chan_rev_U0->ap_clk(ap_clk);
    conv2d_3x3_1chan_rev_U0->ap_rst(ap_rst);
    conv2d_3x3_1chan_rev_U0->ap_start(conv2d_3x3_1chan_rev_U0_ap_start);
    conv2d_3x3_1chan_rev_U0->ap_done(conv2d_3x3_1chan_rev_U0_ap_done);
    conv2d_3x3_1chan_rev_U0->ap_continue(conv2d_3x3_1chan_rev_U0_ap_continue);
    conv2d_3x3_1chan_rev_U0->ap_idle(conv2d_3x3_1chan_rev_U0_ap_idle);
    conv2d_3x3_1chan_rev_U0->ap_ready(conv2d_3x3_1chan_rev_U0_ap_ready);
    conv2d_3x3_1chan_rev_U0->in_image_V_address0(conv2d_3x3_1chan_rev_U0_in_image_V_address0);
    conv2d_3x3_1chan_rev_U0->in_image_V_ce0(conv2d_3x3_1chan_rev_U0_in_image_V_ce0);
    conv2d_3x3_1chan_rev_U0->in_image_V_q0(resampled_V_t_q0);
    conv2d_3x3_1chan_rev_U0->kernel_V_address0(conv2d_3x3_1chan_rev_U0_kernel_V_address0);
    conv2d_3x3_1chan_rev_U0->kernel_V_ce0(conv2d_3x3_1chan_rev_U0_kernel_V_ce0);
    conv2d_3x3_1chan_rev_U0->kernel_V_q0(conv_kernel_L1_V_q0);
    conv2d_3x3_1chan_rev_U0->bias_V_dout(conv_bias_L1_V_c_dout);
    conv2d_3x3_1chan_rev_U0->bias_V_empty_n(conv_bias_L1_V_c_empty_n);
    conv2d_3x3_1chan_rev_U0->bias_V_read(conv2d_3x3_1chan_rev_U0_bias_V_read);
    conv2d_3x3_1chan_rev_U0->out_image_V_address0(conv2d_3x3_1chan_rev_U0_out_image_V_address0);
    conv2d_3x3_1chan_rev_U0->out_image_V_ce0(conv2d_3x3_1chan_rev_U0_out_image_V_ce0);
    conv2d_3x3_1chan_rev_U0->out_image_V_we0(conv2d_3x3_1chan_rev_U0_out_image_V_we0);
    conv2d_3x3_1chan_rev_U0->out_image_V_d0(conv2d_3x3_1chan_rev_U0_out_image_V_d0);
    batch_norm_U0 = new batch_norm("batch_norm_U0");
    batch_norm_U0->ap_clk(ap_clk);
    batch_norm_U0->ap_rst(ap_rst);
    batch_norm_U0->ap_start(batch_norm_U0_ap_start);
    batch_norm_U0->ap_done(batch_norm_U0_ap_done);
    batch_norm_U0->ap_continue(batch_norm_U0_ap_continue);
    batch_norm_U0->ap_idle(batch_norm_U0_ap_idle);
    batch_norm_U0->ap_ready(batch_norm_U0_ap_ready);
    batch_norm_U0->in_image_V_address0(batch_norm_U0_in_image_V_address0);
    batch_norm_U0->in_image_V_ce0(batch_norm_U0_in_image_V_ce0);
    batch_norm_U0->in_image_V_q0(conv_V_t_q0);
    batch_norm_U0->A_V_dout(a_V_c_dout);
    batch_norm_U0->A_V_empty_n(a_V_c_empty_n);
    batch_norm_U0->A_V_read(batch_norm_U0_A_V_read);
    batch_norm_U0->B_V_dout(b_V_c_dout);
    batch_norm_U0->B_V_empty_n(b_V_c_empty_n);
    batch_norm_U0->B_V_read(batch_norm_U0_B_V_read);
    batch_norm_U0->out_image_V_address0(batch_norm_U0_out_image_V_address0);
    batch_norm_U0->out_image_V_ce0(batch_norm_U0_out_image_V_ce0);
    batch_norm_U0->out_image_V_we0(batch_norm_U0_out_image_V_we0);
    batch_norm_U0->out_image_V_d0(batch_norm_U0_out_image_V_d0);
    relu_U0 = new relu("relu_U0");
    relu_U0->ap_clk(ap_clk);
    relu_U0->ap_rst(ap_rst);
    relu_U0->ap_start(relu_U0_ap_start);
    relu_U0->ap_done(relu_U0_ap_done);
    relu_U0->ap_continue(relu_U0_ap_continue);
    relu_U0->ap_idle(relu_U0_ap_idle);
    relu_U0->ap_ready(relu_U0_ap_ready);
    relu_U0->in_features_V_address0(relu_U0_in_features_V_address0);
    relu_U0->in_features_V_ce0(relu_U0_in_features_V_ce0);
    relu_U0->in_features_V_q0(batchnorm_V_t_q0);
    relu_U0->activations_V_address0(relu_U0_activations_V_address0);
    relu_U0->activations_V_ce0(relu_U0_activations_V_ce0);
    relu_U0->activations_V_we0(relu_U0_activations_V_we0);
    relu_U0->activations_V_d0(relu_U0_activations_V_d0);
    max_pool_1chan_U0 = new max_pool_1chan("max_pool_1chan_U0");
    max_pool_1chan_U0->ap_clk(ap_clk);
    max_pool_1chan_U0->ap_rst(ap_rst);
    max_pool_1chan_U0->ap_start(max_pool_1chan_U0_ap_start);
    max_pool_1chan_U0->ap_done(max_pool_1chan_U0_ap_done);
    max_pool_1chan_U0->ap_continue(max_pool_1chan_U0_ap_continue);
    max_pool_1chan_U0->ap_idle(max_pool_1chan_U0_ap_idle);
    max_pool_1chan_U0->ap_ready(max_pool_1chan_U0_ap_ready);
    max_pool_1chan_U0->in_image_V_address0(max_pool_1chan_U0_in_image_V_address0);
    max_pool_1chan_U0->in_image_V_ce0(max_pool_1chan_U0_in_image_V_ce0);
    max_pool_1chan_U0->in_image_V_q0(ReLU_V_t_q0);
    max_pool_1chan_U0->in_image_V_address1(max_pool_1chan_U0_in_image_V_address1);
    max_pool_1chan_U0->in_image_V_ce1(max_pool_1chan_U0_in_image_V_ce1);
    max_pool_1chan_U0->in_image_V_q1(ReLU_V_t_q1);
    max_pool_1chan_U0->out_image_V_address0(max_pool_1chan_U0_out_image_V_address0);
    max_pool_1chan_U0->out_image_V_ce0(max_pool_1chan_U0_out_image_V_ce0);
    max_pool_1chan_U0->out_image_V_we0(max_pool_1chan_U0_out_image_V_we0);
    max_pool_1chan_U0->out_image_V_d0(max_pool_1chan_U0_out_image_V_d0);
    pad_for_conv2_U0 = new pad_for_conv2("pad_for_conv2_U0");
    pad_for_conv2_U0->ap_clk(ap_clk);
    pad_for_conv2_U0->ap_rst(ap_rst);
    pad_for_conv2_U0->ap_start(pad_for_conv2_U0_ap_start);
    pad_for_conv2_U0->ap_done(pad_for_conv2_U0_ap_done);
    pad_for_conv2_U0->ap_continue(pad_for_conv2_U0_ap_continue);
    pad_for_conv2_U0->ap_idle(pad_for_conv2_U0_ap_idle);
    pad_for_conv2_U0->ap_ready(pad_for_conv2_U0_ap_ready);
    pad_for_conv2_U0->in_image_V_address0(pad_for_conv2_U0_in_image_V_address0);
    pad_for_conv2_U0->in_image_V_ce0(pad_for_conv2_U0_in_image_V_ce0);
    pad_for_conv2_U0->in_image_V_q0(maxpool_V_t_q0);
    pad_for_conv2_U0->out_image_V_address0(pad_for_conv2_U0_out_image_V_address0);
    pad_for_conv2_U0->out_image_V_ce0(pad_for_conv2_U0_out_image_V_ce0);
    pad_for_conv2_U0->out_image_V_we0(pad_for_conv2_U0_out_image_V_we0);
    pad_for_conv2_U0->out_image_V_d0(pad_for_conv2_U0_out_image_V_d0);
    pad_for_conv2_U0->out_image_V_address1(pad_for_conv2_U0_out_image_V_address1);
    pad_for_conv2_U0->out_image_V_ce1(pad_for_conv2_U0_out_image_V_ce1);
    pad_for_conv2_U0->out_image_V_we1(pad_for_conv2_U0_out_image_V_we1);
    pad_for_conv2_U0->out_image_V_d1(pad_for_conv2_U0_out_image_V_d1);
    resample_for_conv2_U0 = new resample_for_conv2("resample_for_conv2_U0");
    resample_for_conv2_U0->ap_clk(ap_clk);
    resample_for_conv2_U0->ap_rst(ap_rst);
    resample_for_conv2_U0->ap_start(resample_for_conv2_U0_ap_start);
    resample_for_conv2_U0->ap_done(resample_for_conv2_U0_ap_done);
    resample_for_conv2_U0->ap_continue(resample_for_conv2_U0_ap_continue);
    resample_for_conv2_U0->ap_idle(resample_for_conv2_U0_ap_idle);
    resample_for_conv2_U0->ap_ready(resample_for_conv2_U0_ap_ready);
    resample_for_conv2_U0->square_image_V_address0(resample_for_conv2_U0_square_image_V_address0);
    resample_for_conv2_U0->square_image_V_ce0(resample_for_conv2_U0_square_image_V_ce0);
    resample_for_conv2_U0->square_image_V_q0(padded_L2_V_t_q0);
    resample_for_conv2_U0->resampled_V_address0(resample_for_conv2_U0_resampled_V_address0);
    resample_for_conv2_U0->resampled_V_ce0(resample_for_conv2_U0_resampled_V_ce0);
    resample_for_conv2_U0->resampled_V_we0(resample_for_conv2_U0_resampled_V_we0);
    resample_for_conv2_U0->resampled_V_d0(resample_for_conv2_U0_resampled_V_d0);
    conv2d_3x3_4chan_rev_U0 = new conv2d_3x3_4chan_rev("conv2d_3x3_4chan_rev_U0");
    conv2d_3x3_4chan_rev_U0->ap_clk(ap_clk);
    conv2d_3x3_4chan_rev_U0->ap_rst(ap_rst);
    conv2d_3x3_4chan_rev_U0->ap_start(conv2d_3x3_4chan_rev_U0_ap_start);
    conv2d_3x3_4chan_rev_U0->ap_done(conv2d_3x3_4chan_rev_U0_ap_done);
    conv2d_3x3_4chan_rev_U0->ap_continue(conv2d_3x3_4chan_rev_U0_ap_continue);
    conv2d_3x3_4chan_rev_U0->ap_idle(conv2d_3x3_4chan_rev_U0_ap_idle);
    conv2d_3x3_4chan_rev_U0->ap_ready(conv2d_3x3_4chan_rev_U0_ap_ready);
    conv2d_3x3_4chan_rev_U0->in_image_V_address0(conv2d_3x3_4chan_rev_U0_in_image_V_address0);
    conv2d_3x3_4chan_rev_U0->in_image_V_ce0(conv2d_3x3_4chan_rev_U0_in_image_V_ce0);
    conv2d_3x3_4chan_rev_U0->in_image_V_q0(resampled_L2_V_t_q0);
    conv2d_3x3_4chan_rev_U0->kernel_V_address0(conv2d_3x3_4chan_rev_U0_kernel_V_address0);
    conv2d_3x3_4chan_rev_U0->kernel_V_ce0(conv2d_3x3_4chan_rev_U0_kernel_V_ce0);
    conv2d_3x3_4chan_rev_U0->kernel_V_q0(conv_kernel_L2_V_q0);
    conv2d_3x3_4chan_rev_U0->bias_V_address0(conv2d_3x3_4chan_rev_U0_bias_V_address0);
    conv2d_3x3_4chan_rev_U0->bias_V_ce0(conv2d_3x3_4chan_rev_U0_bias_V_ce0);
    conv2d_3x3_4chan_rev_U0->bias_V_q0(conv_bias_L2_V_q0);
    conv2d_3x3_4chan_rev_U0->out_image_V_address0(conv2d_3x3_4chan_rev_U0_out_image_V_address0);
    conv2d_3x3_4chan_rev_U0->out_image_V_ce0(conv2d_3x3_4chan_rev_U0_out_image_V_ce0);
    conv2d_3x3_4chan_rev_U0->out_image_V_we0(conv2d_3x3_4chan_rev_U0_out_image_V_we0);
    conv2d_3x3_4chan_rev_U0->out_image_V_d0(conv2d_3x3_4chan_rev_U0_out_image_V_d0);
    conv_bias_L1_V_c_U = new fifo_w48_d4_A("conv_bias_L1_V_c_U");
    conv_bias_L1_V_c_U->clk(ap_clk);
    conv_bias_L1_V_c_U->reset(ap_rst);
    conv_bias_L1_V_c_U->if_read_ce(ap_var_for_const2);
    conv_bias_L1_V_c_U->if_write_ce(ap_var_for_const2);
    conv_bias_L1_V_c_U->if_din(zero_mean_1chan50_U0_conv_bias_L1_V_out_din);
    conv_bias_L1_V_c_U->if_full_n(conv_bias_L1_V_c_full_n);
    conv_bias_L1_V_c_U->if_write(zero_mean_1chan50_U0_conv_bias_L1_V_out_write);
    conv_bias_L1_V_c_U->if_dout(conv_bias_L1_V_c_dout);
    conv_bias_L1_V_c_U->if_empty_n(conv_bias_L1_V_c_empty_n);
    conv_bias_L1_V_c_U->if_read(conv2d_3x3_1chan_rev_U0_bias_V_read);
    a_V_c_U = new fifo_w18_d5_A("a_V_c_U");
    a_V_c_U->clk(ap_clk);
    a_V_c_U->reset(ap_rst);
    a_V_c_U->if_read_ce(ap_var_for_const2);
    a_V_c_U->if_write_ce(ap_var_for_const2);
    a_V_c_U->if_din(zero_mean_1chan50_U0_a_V_out_din);
    a_V_c_U->if_full_n(a_V_c_full_n);
    a_V_c_U->if_write(zero_mean_1chan50_U0_a_V_out_write);
    a_V_c_U->if_dout(a_V_c_dout);
    a_V_c_U->if_empty_n(a_V_c_empty_n);
    a_V_c_U->if_read(batch_norm_U0_A_V_read);
    b_V_c_U = new fifo_w18_d5_A("b_V_c_U");
    b_V_c_U->clk(ap_clk);
    b_V_c_U->reset(ap_rst);
    b_V_c_U->if_read_ce(ap_var_for_const2);
    b_V_c_U->if_write_ce(ap_var_for_const2);
    b_V_c_U->if_din(zero_mean_1chan50_U0_b_V_out_din);
    b_V_c_U->if_full_n(b_V_c_full_n);
    b_V_c_U->if_write(zero_mean_1chan50_U0_b_V_out_write);
    b_V_c_U->if_dout(b_V_c_dout);
    b_V_c_U->if_empty_n(b_V_c_empty_n);
    b_V_c_U->if_read(batch_norm_U0_B_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ReLU_V_t_d1);

    SC_METHOD(thread_ReLU_V_t_we1);

    SC_METHOD(thread_ap_channel_done_ReLU_V);
    sensitive << ( relu_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_batchnorm_V);
    sensitive << ( batch_norm_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_conv_V);
    sensitive << ( conv2d_3x3_1chan_rev_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_maxpool_V);
    sensitive << ( max_pool_1chan_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_mean_removed_V);
    sensitive << ( zero_mean_1chan50_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_padded_L2_V);
    sensitive << ( pad_for_conv2_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_padded_V);
    sensitive << ( efficient_pad_n_1cha_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_resampled_L2_V);
    sensitive << ( resample_for_conv2_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_resampled_V);
    sensitive << ( resample_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( conv2d_3x3_4chan_rev_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( zero_mean_1chan50_U0_ap_idle );
    sensitive << ( efficient_pad_n_1cha_U0_ap_idle );
    sensitive << ( resample_U0_ap_idle );
    sensitive << ( conv2d_3x3_1chan_rev_U0_ap_idle );
    sensitive << ( batch_norm_U0_ap_idle );
    sensitive << ( relu_U0_ap_idle );
    sensitive << ( max_pool_1chan_U0_ap_idle );
    sensitive << ( pad_for_conv2_U0_ap_idle );
    sensitive << ( resample_for_conv2_U0_ap_idle );
    sensitive << ( conv2d_3x3_4chan_rev_U0_ap_idle );
    sensitive << ( mean_removed_V_t_empty_n );
    sensitive << ( padded_V_t_empty_n );
    sensitive << ( resampled_V_t_empty_n );
    sensitive << ( conv_V_t_empty_n );
    sensitive << ( batchnorm_V_t_empty_n );
    sensitive << ( ReLU_V_t_empty_n );
    sensitive << ( maxpool_V_t_empty_n );
    sensitive << ( padded_L2_V_t_empty_n );
    sensitive << ( resampled_L2_V_t_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready);
    sensitive << ( conv2d_3x3_1chan_rev_U0_ap_ready );
    sensitive << ( ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready );

    SC_METHOD(thread_ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready);
    sensitive << ( conv2d_3x3_4chan_rev_U0_ap_ready );
    sensitive << ( ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( conv2d_3x3_4chan_rev_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_zero_mean_1chan50_U0_ap_ready );
    sensitive << ( ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready );
    sensitive << ( ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready );

    SC_METHOD(thread_ap_sync_zero_mean_1chan50_U0_ap_ready);
    sensitive << ( zero_mean_1chan50_U0_ap_ready );
    sensitive << ( ap_sync_reg_zero_mean_1chan50_U0_ap_ready );

    SC_METHOD(thread_batch_norm_U0_ap_continue);
    sensitive << ( batchnorm_V_i_full_n );

    SC_METHOD(thread_batch_norm_U0_ap_start);
    sensitive << ( conv_V_t_empty_n );

    SC_METHOD(thread_batch_norm_U0_out_image_V_full_n);
    sensitive << ( batchnorm_V_i_full_n );

    SC_METHOD(thread_batch_norm_U0_start_full_n);

    SC_METHOD(thread_batch_norm_U0_start_write);

    SC_METHOD(thread_conv2d_3x3_1chan_rev_U0_ap_continue);
    sensitive << ( conv_V_i_full_n );

    SC_METHOD(thread_conv2d_3x3_1chan_rev_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( resampled_V_t_empty_n );
    sensitive << ( ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready );

    SC_METHOD(thread_conv2d_3x3_1chan_rev_U0_out_image_V_full_n);
    sensitive << ( conv_V_i_full_n );

    SC_METHOD(thread_conv2d_3x3_1chan_rev_U0_start_full_n);

    SC_METHOD(thread_conv2d_3x3_1chan_rev_U0_start_write);

    SC_METHOD(thread_conv2d_3x3_4chan_rev_U0_ap_continue);

    SC_METHOD(thread_conv2d_3x3_4chan_rev_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( resampled_L2_V_t_empty_n );
    sensitive << ( ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready );

    SC_METHOD(thread_conv2d_3x3_4chan_rev_U0_start_full_n);

    SC_METHOD(thread_conv2d_3x3_4chan_rev_U0_start_write);

    SC_METHOD(thread_conv_bias_L2_V_address0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_bias_V_address0 );

    SC_METHOD(thread_conv_bias_L2_V_address1);

    SC_METHOD(thread_conv_bias_L2_V_ce0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_bias_V_ce0 );

    SC_METHOD(thread_conv_bias_L2_V_ce1);

    SC_METHOD(thread_conv_bias_L2_V_d0);

    SC_METHOD(thread_conv_bias_L2_V_d1);

    SC_METHOD(thread_conv_bias_L2_V_we0);

    SC_METHOD(thread_conv_bias_L2_V_we1);

    SC_METHOD(thread_conv_kernel_L1_V_address0);
    sensitive << ( conv2d_3x3_1chan_rev_U0_kernel_V_address0 );

    SC_METHOD(thread_conv_kernel_L1_V_address1);

    SC_METHOD(thread_conv_kernel_L1_V_ce0);
    sensitive << ( conv2d_3x3_1chan_rev_U0_kernel_V_ce0 );

    SC_METHOD(thread_conv_kernel_L1_V_ce1);

    SC_METHOD(thread_conv_kernel_L1_V_d0);

    SC_METHOD(thread_conv_kernel_L1_V_d1);

    SC_METHOD(thread_conv_kernel_L1_V_we0);

    SC_METHOD(thread_conv_kernel_L1_V_we1);

    SC_METHOD(thread_conv_kernel_L2_V_address0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_kernel_V_address0 );

    SC_METHOD(thread_conv_kernel_L2_V_address1);

    SC_METHOD(thread_conv_kernel_L2_V_ce0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_kernel_V_ce0 );

    SC_METHOD(thread_conv_kernel_L2_V_ce1);

    SC_METHOD(thread_conv_kernel_L2_V_d0);

    SC_METHOD(thread_conv_kernel_L2_V_d1);

    SC_METHOD(thread_conv_kernel_L2_V_we0);

    SC_METHOD(thread_conv_kernel_L2_V_we1);

    SC_METHOD(thread_efficient_pad_n_1cha_U0_ap_continue);
    sensitive << ( padded_V_i_full_n );

    SC_METHOD(thread_efficient_pad_n_1cha_U0_ap_start);
    sensitive << ( mean_removed_V_t_empty_n );

    SC_METHOD(thread_efficient_pad_n_1cha_U0_out_image_V_full_n);
    sensitive << ( padded_V_i_full_n );

    SC_METHOD(thread_efficient_pad_n_1cha_U0_start_full_n);

    SC_METHOD(thread_efficient_pad_n_1cha_U0_start_write);

    SC_METHOD(thread_in_image_V_address0);
    sensitive << ( zero_mean_1chan50_U0_in_image_V_address0 );

    SC_METHOD(thread_in_image_V_address1);

    SC_METHOD(thread_in_image_V_ce0);
    sensitive << ( zero_mean_1chan50_U0_in_image_V_ce0 );

    SC_METHOD(thread_in_image_V_ce1);

    SC_METHOD(thread_in_image_V_d0);

    SC_METHOD(thread_in_image_V_d1);

    SC_METHOD(thread_in_image_V_we0);

    SC_METHOD(thread_in_image_V_we1);

    SC_METHOD(thread_max_pool_1chan_U0_ap_continue);
    sensitive << ( maxpool_V_i_full_n );

    SC_METHOD(thread_max_pool_1chan_U0_ap_start);
    sensitive << ( ReLU_V_t_empty_n );

    SC_METHOD(thread_max_pool_1chan_U0_out_image_V_full_n);
    sensitive << ( maxpool_V_i_full_n );

    SC_METHOD(thread_max_pool_1chan_U0_start_full_n);

    SC_METHOD(thread_max_pool_1chan_U0_start_write);

    SC_METHOD(thread_means_V_address0);
    sensitive << ( zero_mean_1chan50_U0_means_V_address0 );

    SC_METHOD(thread_means_V_address1);

    SC_METHOD(thread_means_V_ce0);
    sensitive << ( zero_mean_1chan50_U0_means_V_ce0 );

    SC_METHOD(thread_means_V_ce1);

    SC_METHOD(thread_means_V_d0);

    SC_METHOD(thread_means_V_d1);

    SC_METHOD(thread_means_V_we0);

    SC_METHOD(thread_means_V_we1);

    SC_METHOD(thread_pad_for_conv2_U0_ap_continue);
    sensitive << ( padded_L2_V_i_full_n );

    SC_METHOD(thread_pad_for_conv2_U0_ap_start);
    sensitive << ( maxpool_V_t_empty_n );

    SC_METHOD(thread_pad_for_conv2_U0_out_image_V_full_n);
    sensitive << ( padded_L2_V_i_full_n );

    SC_METHOD(thread_pad_for_conv2_U0_start_full_n);

    SC_METHOD(thread_pad_for_conv2_U0_start_write);

    SC_METHOD(thread_relu_U0_activations_V_full_n);
    sensitive << ( ReLU_V_i_full_n );

    SC_METHOD(thread_relu_U0_ap_continue);
    sensitive << ( ReLU_V_i_full_n );

    SC_METHOD(thread_relu_U0_ap_start);
    sensitive << ( batchnorm_V_t_empty_n );

    SC_METHOD(thread_relu_U0_start_full_n);

    SC_METHOD(thread_relu_U0_start_write);

    SC_METHOD(thread_resample_U0_ap_continue);
    sensitive << ( resampled_V_i_full_n );

    SC_METHOD(thread_resample_U0_ap_start);
    sensitive << ( padded_V_t_empty_n );

    SC_METHOD(thread_resample_U0_resampled_V_full_n);
    sensitive << ( resampled_V_i_full_n );

    SC_METHOD(thread_resample_U0_start_full_n);

    SC_METHOD(thread_resample_U0_start_write);

    SC_METHOD(thread_resample_for_conv2_U0_ap_continue);
    sensitive << ( resampled_L2_V_i_full_n );

    SC_METHOD(thread_resample_for_conv2_U0_ap_start);
    sensitive << ( padded_L2_V_t_empty_n );

    SC_METHOD(thread_resample_for_conv2_U0_resampled_V_full_n);
    sensitive << ( resampled_L2_V_i_full_n );

    SC_METHOD(thread_resample_for_conv2_U0_start_full_n);

    SC_METHOD(thread_resample_for_conv2_U0_start_write);

    SC_METHOD(thread_result_V_address0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_out_image_V_address0 );

    SC_METHOD(thread_result_V_address1);

    SC_METHOD(thread_result_V_ce0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_out_image_V_ce0 );

    SC_METHOD(thread_result_V_ce1);

    SC_METHOD(thread_result_V_d0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_out_image_V_d0 );

    SC_METHOD(thread_result_V_d1);

    SC_METHOD(thread_result_V_we0);
    sensitive << ( conv2d_3x3_4chan_rev_U0_out_image_V_we0 );

    SC_METHOD(thread_result_V_we1);

    SC_METHOD(thread_zero_mean_1chan50_U0_ap_continue);
    sensitive << ( mean_removed_V_i_full_n );

    SC_METHOD(thread_zero_mean_1chan50_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_zero_mean_1chan50_U0_ap_ready );

    SC_METHOD(thread_zero_mean_1chan50_U0_out_image_V_full_n);
    sensitive << ( mean_removed_V_i_full_n );

    SC_METHOD(thread_zero_mean_1chan50_U0_start_full_n);

    SC_METHOD(thread_zero_mean_1chan50_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const6);

    ap_sync_reg_zero_mean_1chan50_U0_ap_ready = SC_LOGIC_0;
    zero_mean_1chan50_U0_ap_ready_count = "00";
    ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready = SC_LOGIC_0;
    conv2d_3x3_1chan_rev_U0_ap_ready_count = "00";
    ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready = SC_LOGIC_0;
    conv2d_3x3_4chan_rev_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CNN_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, in_image_V_address0, "(port)in_image_V_address0");
    sc_trace(mVcdFile, in_image_V_ce0, "(port)in_image_V_ce0");
    sc_trace(mVcdFile, in_image_V_d0, "(port)in_image_V_d0");
    sc_trace(mVcdFile, in_image_V_q0, "(port)in_image_V_q0");
    sc_trace(mVcdFile, in_image_V_we0, "(port)in_image_V_we0");
    sc_trace(mVcdFile, in_image_V_address1, "(port)in_image_V_address1");
    sc_trace(mVcdFile, in_image_V_ce1, "(port)in_image_V_ce1");
    sc_trace(mVcdFile, in_image_V_d1, "(port)in_image_V_d1");
    sc_trace(mVcdFile, in_image_V_q1, "(port)in_image_V_q1");
    sc_trace(mVcdFile, in_image_V_we1, "(port)in_image_V_we1");
    sc_trace(mVcdFile, means_V_address0, "(port)means_V_address0");
    sc_trace(mVcdFile, means_V_ce0, "(port)means_V_ce0");
    sc_trace(mVcdFile, means_V_d0, "(port)means_V_d0");
    sc_trace(mVcdFile, means_V_q0, "(port)means_V_q0");
    sc_trace(mVcdFile, means_V_we0, "(port)means_V_we0");
    sc_trace(mVcdFile, means_V_address1, "(port)means_V_address1");
    sc_trace(mVcdFile, means_V_ce1, "(port)means_V_ce1");
    sc_trace(mVcdFile, means_V_d1, "(port)means_V_d1");
    sc_trace(mVcdFile, means_V_q1, "(port)means_V_q1");
    sc_trace(mVcdFile, means_V_we1, "(port)means_V_we1");
    sc_trace(mVcdFile, conv_kernel_L1_V_address0, "(port)conv_kernel_L1_V_address0");
    sc_trace(mVcdFile, conv_kernel_L1_V_ce0, "(port)conv_kernel_L1_V_ce0");
    sc_trace(mVcdFile, conv_kernel_L1_V_d0, "(port)conv_kernel_L1_V_d0");
    sc_trace(mVcdFile, conv_kernel_L1_V_q0, "(port)conv_kernel_L1_V_q0");
    sc_trace(mVcdFile, conv_kernel_L1_V_we0, "(port)conv_kernel_L1_V_we0");
    sc_trace(mVcdFile, conv_kernel_L1_V_address1, "(port)conv_kernel_L1_V_address1");
    sc_trace(mVcdFile, conv_kernel_L1_V_ce1, "(port)conv_kernel_L1_V_ce1");
    sc_trace(mVcdFile, conv_kernel_L1_V_d1, "(port)conv_kernel_L1_V_d1");
    sc_trace(mVcdFile, conv_kernel_L1_V_q1, "(port)conv_kernel_L1_V_q1");
    sc_trace(mVcdFile, conv_kernel_L1_V_we1, "(port)conv_kernel_L1_V_we1");
    sc_trace(mVcdFile, conv_bias_L1_V, "(port)conv_bias_L1_V");
    sc_trace(mVcdFile, a_V, "(port)a_V");
    sc_trace(mVcdFile, b_V, "(port)b_V");
    sc_trace(mVcdFile, conv_kernel_L2_V_address0, "(port)conv_kernel_L2_V_address0");
    sc_trace(mVcdFile, conv_kernel_L2_V_ce0, "(port)conv_kernel_L2_V_ce0");
    sc_trace(mVcdFile, conv_kernel_L2_V_d0, "(port)conv_kernel_L2_V_d0");
    sc_trace(mVcdFile, conv_kernel_L2_V_q0, "(port)conv_kernel_L2_V_q0");
    sc_trace(mVcdFile, conv_kernel_L2_V_we0, "(port)conv_kernel_L2_V_we0");
    sc_trace(mVcdFile, conv_kernel_L2_V_address1, "(port)conv_kernel_L2_V_address1");
    sc_trace(mVcdFile, conv_kernel_L2_V_ce1, "(port)conv_kernel_L2_V_ce1");
    sc_trace(mVcdFile, conv_kernel_L2_V_d1, "(port)conv_kernel_L2_V_d1");
    sc_trace(mVcdFile, conv_kernel_L2_V_q1, "(port)conv_kernel_L2_V_q1");
    sc_trace(mVcdFile, conv_kernel_L2_V_we1, "(port)conv_kernel_L2_V_we1");
    sc_trace(mVcdFile, conv_bias_L2_V_address0, "(port)conv_bias_L2_V_address0");
    sc_trace(mVcdFile, conv_bias_L2_V_ce0, "(port)conv_bias_L2_V_ce0");
    sc_trace(mVcdFile, conv_bias_L2_V_d0, "(port)conv_bias_L2_V_d0");
    sc_trace(mVcdFile, conv_bias_L2_V_q0, "(port)conv_bias_L2_V_q0");
    sc_trace(mVcdFile, conv_bias_L2_V_we0, "(port)conv_bias_L2_V_we0");
    sc_trace(mVcdFile, conv_bias_L2_V_address1, "(port)conv_bias_L2_V_address1");
    sc_trace(mVcdFile, conv_bias_L2_V_ce1, "(port)conv_bias_L2_V_ce1");
    sc_trace(mVcdFile, conv_bias_L2_V_d1, "(port)conv_bias_L2_V_d1");
    sc_trace(mVcdFile, conv_bias_L2_V_q1, "(port)conv_bias_L2_V_q1");
    sc_trace(mVcdFile, conv_bias_L2_V_we1, "(port)conv_bias_L2_V_we1");
    sc_trace(mVcdFile, result_V_address0, "(port)result_V_address0");
    sc_trace(mVcdFile, result_V_ce0, "(port)result_V_ce0");
    sc_trace(mVcdFile, result_V_d0, "(port)result_V_d0");
    sc_trace(mVcdFile, result_V_q0, "(port)result_V_q0");
    sc_trace(mVcdFile, result_V_we0, "(port)result_V_we0");
    sc_trace(mVcdFile, result_V_address1, "(port)result_V_address1");
    sc_trace(mVcdFile, result_V_ce1, "(port)result_V_ce1");
    sc_trace(mVcdFile, result_V_d1, "(port)result_V_d1");
    sc_trace(mVcdFile, result_V_q1, "(port)result_V_q1");
    sc_trace(mVcdFile, result_V_we1, "(port)result_V_we1");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, mean_removed_V_i_q0, "mean_removed_V_i_q0");
    sc_trace(mVcdFile, mean_removed_V_t_q0, "mean_removed_V_t_q0");
    sc_trace(mVcdFile, padded_V_i_q0, "padded_V_i_q0");
    sc_trace(mVcdFile, padded_V_t_q0, "padded_V_t_q0");
    sc_trace(mVcdFile, resampled_V_i_q0, "resampled_V_i_q0");
    sc_trace(mVcdFile, resampled_V_t_q0, "resampled_V_t_q0");
    sc_trace(mVcdFile, conv_V_i_q0, "conv_V_i_q0");
    sc_trace(mVcdFile, conv_V_t_q0, "conv_V_t_q0");
    sc_trace(mVcdFile, batchnorm_V_i_q0, "batchnorm_V_i_q0");
    sc_trace(mVcdFile, batchnorm_V_t_q0, "batchnorm_V_t_q0");
    sc_trace(mVcdFile, ReLU_V_i_q0, "ReLU_V_i_q0");
    sc_trace(mVcdFile, ReLU_V_i_q1, "ReLU_V_i_q1");
    sc_trace(mVcdFile, ReLU_V_t_q0, "ReLU_V_t_q0");
    sc_trace(mVcdFile, ReLU_V_t_q1, "ReLU_V_t_q1");
    sc_trace(mVcdFile, maxpool_V_i_q0, "maxpool_V_i_q0");
    sc_trace(mVcdFile, maxpool_V_t_q0, "maxpool_V_t_q0");
    sc_trace(mVcdFile, padded_L2_V_i_q0, "padded_L2_V_i_q0");
    sc_trace(mVcdFile, padded_L2_V_t_q0, "padded_L2_V_t_q0");
    sc_trace(mVcdFile, resampled_L2_V_i_q0, "resampled_L2_V_i_q0");
    sc_trace(mVcdFile, resampled_L2_V_t_q0, "resampled_L2_V_t_q0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_start, "zero_mean_1chan50_U0_ap_start");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_done, "zero_mean_1chan50_U0_ap_done");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_continue, "zero_mean_1chan50_U0_ap_continue");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_idle, "zero_mean_1chan50_U0_ap_idle");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_ready, "zero_mean_1chan50_U0_ap_ready");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_in_image_V_address0, "zero_mean_1chan50_U0_in_image_V_address0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_in_image_V_ce0, "zero_mean_1chan50_U0_in_image_V_ce0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_out_image_V_address0, "zero_mean_1chan50_U0_out_image_V_address0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_out_image_V_ce0, "zero_mean_1chan50_U0_out_image_V_ce0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_out_image_V_we0, "zero_mean_1chan50_U0_out_image_V_we0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_out_image_V_d0, "zero_mean_1chan50_U0_out_image_V_d0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_means_V_address0, "zero_mean_1chan50_U0_means_V_address0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_means_V_ce0, "zero_mean_1chan50_U0_means_V_ce0");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_conv_bias_L1_V_out_din, "zero_mean_1chan50_U0_conv_bias_L1_V_out_din");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_conv_bias_L1_V_out_write, "zero_mean_1chan50_U0_conv_bias_L1_V_out_write");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_a_V_out_din, "zero_mean_1chan50_U0_a_V_out_din");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_a_V_out_write, "zero_mean_1chan50_U0_a_V_out_write");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_b_V_out_din, "zero_mean_1chan50_U0_b_V_out_din");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_b_V_out_write, "zero_mean_1chan50_U0_b_V_out_write");
    sc_trace(mVcdFile, ap_channel_done_mean_removed_V, "ap_channel_done_mean_removed_V");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_out_image_V_full_n, "zero_mean_1chan50_U0_out_image_V_full_n");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_ap_start, "efficient_pad_n_1cha_U0_ap_start");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_ap_done, "efficient_pad_n_1cha_U0_ap_done");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_ap_continue, "efficient_pad_n_1cha_U0_ap_continue");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_ap_idle, "efficient_pad_n_1cha_U0_ap_idle");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_ap_ready, "efficient_pad_n_1cha_U0_ap_ready");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_in_image_V_address0, "efficient_pad_n_1cha_U0_in_image_V_address0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_in_image_V_ce0, "efficient_pad_n_1cha_U0_in_image_V_ce0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_address0, "efficient_pad_n_1cha_U0_out_image_V_address0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_ce0, "efficient_pad_n_1cha_U0_out_image_V_ce0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_we0, "efficient_pad_n_1cha_U0_out_image_V_we0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_d0, "efficient_pad_n_1cha_U0_out_image_V_d0");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_address1, "efficient_pad_n_1cha_U0_out_image_V_address1");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_ce1, "efficient_pad_n_1cha_U0_out_image_V_ce1");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_we1, "efficient_pad_n_1cha_U0_out_image_V_we1");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_d1, "efficient_pad_n_1cha_U0_out_image_V_d1");
    sc_trace(mVcdFile, ap_channel_done_padded_V, "ap_channel_done_padded_V");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_out_image_V_full_n, "efficient_pad_n_1cha_U0_out_image_V_full_n");
    sc_trace(mVcdFile, resample_U0_ap_start, "resample_U0_ap_start");
    sc_trace(mVcdFile, resample_U0_ap_done, "resample_U0_ap_done");
    sc_trace(mVcdFile, resample_U0_ap_continue, "resample_U0_ap_continue");
    sc_trace(mVcdFile, resample_U0_ap_idle, "resample_U0_ap_idle");
    sc_trace(mVcdFile, resample_U0_ap_ready, "resample_U0_ap_ready");
    sc_trace(mVcdFile, resample_U0_square_image_V_address0, "resample_U0_square_image_V_address0");
    sc_trace(mVcdFile, resample_U0_square_image_V_ce0, "resample_U0_square_image_V_ce0");
    sc_trace(mVcdFile, resample_U0_resampled_V_address0, "resample_U0_resampled_V_address0");
    sc_trace(mVcdFile, resample_U0_resampled_V_ce0, "resample_U0_resampled_V_ce0");
    sc_trace(mVcdFile, resample_U0_resampled_V_we0, "resample_U0_resampled_V_we0");
    sc_trace(mVcdFile, resample_U0_resampled_V_d0, "resample_U0_resampled_V_d0");
    sc_trace(mVcdFile, ap_channel_done_resampled_V, "ap_channel_done_resampled_V");
    sc_trace(mVcdFile, resample_U0_resampled_V_full_n, "resample_U0_resampled_V_full_n");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_start, "conv2d_3x3_1chan_rev_U0_ap_start");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_done, "conv2d_3x3_1chan_rev_U0_ap_done");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_continue, "conv2d_3x3_1chan_rev_U0_ap_continue");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_idle, "conv2d_3x3_1chan_rev_U0_ap_idle");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_ready, "conv2d_3x3_1chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_in_image_V_address0, "conv2d_3x3_1chan_rev_U0_in_image_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_in_image_V_ce0, "conv2d_3x3_1chan_rev_U0_in_image_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_kernel_V_address0, "conv2d_3x3_1chan_rev_U0_kernel_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_kernel_V_ce0, "conv2d_3x3_1chan_rev_U0_kernel_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_bias_V_read, "conv2d_3x3_1chan_rev_U0_bias_V_read");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_out_image_V_address0, "conv2d_3x3_1chan_rev_U0_out_image_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_out_image_V_ce0, "conv2d_3x3_1chan_rev_U0_out_image_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_out_image_V_we0, "conv2d_3x3_1chan_rev_U0_out_image_V_we0");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_out_image_V_d0, "conv2d_3x3_1chan_rev_U0_out_image_V_d0");
    sc_trace(mVcdFile, ap_channel_done_conv_V, "ap_channel_done_conv_V");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_out_image_V_full_n, "conv2d_3x3_1chan_rev_U0_out_image_V_full_n");
    sc_trace(mVcdFile, batch_norm_U0_ap_start, "batch_norm_U0_ap_start");
    sc_trace(mVcdFile, batch_norm_U0_ap_done, "batch_norm_U0_ap_done");
    sc_trace(mVcdFile, batch_norm_U0_ap_continue, "batch_norm_U0_ap_continue");
    sc_trace(mVcdFile, batch_norm_U0_ap_idle, "batch_norm_U0_ap_idle");
    sc_trace(mVcdFile, batch_norm_U0_ap_ready, "batch_norm_U0_ap_ready");
    sc_trace(mVcdFile, batch_norm_U0_in_image_V_address0, "batch_norm_U0_in_image_V_address0");
    sc_trace(mVcdFile, batch_norm_U0_in_image_V_ce0, "batch_norm_U0_in_image_V_ce0");
    sc_trace(mVcdFile, batch_norm_U0_A_V_read, "batch_norm_U0_A_V_read");
    sc_trace(mVcdFile, batch_norm_U0_B_V_read, "batch_norm_U0_B_V_read");
    sc_trace(mVcdFile, batch_norm_U0_out_image_V_address0, "batch_norm_U0_out_image_V_address0");
    sc_trace(mVcdFile, batch_norm_U0_out_image_V_ce0, "batch_norm_U0_out_image_V_ce0");
    sc_trace(mVcdFile, batch_norm_U0_out_image_V_we0, "batch_norm_U0_out_image_V_we0");
    sc_trace(mVcdFile, batch_norm_U0_out_image_V_d0, "batch_norm_U0_out_image_V_d0");
    sc_trace(mVcdFile, ap_channel_done_batchnorm_V, "ap_channel_done_batchnorm_V");
    sc_trace(mVcdFile, batch_norm_U0_out_image_V_full_n, "batch_norm_U0_out_image_V_full_n");
    sc_trace(mVcdFile, relu_U0_ap_start, "relu_U0_ap_start");
    sc_trace(mVcdFile, relu_U0_ap_done, "relu_U0_ap_done");
    sc_trace(mVcdFile, relu_U0_ap_continue, "relu_U0_ap_continue");
    sc_trace(mVcdFile, relu_U0_ap_idle, "relu_U0_ap_idle");
    sc_trace(mVcdFile, relu_U0_ap_ready, "relu_U0_ap_ready");
    sc_trace(mVcdFile, relu_U0_in_features_V_address0, "relu_U0_in_features_V_address0");
    sc_trace(mVcdFile, relu_U0_in_features_V_ce0, "relu_U0_in_features_V_ce0");
    sc_trace(mVcdFile, relu_U0_activations_V_address0, "relu_U0_activations_V_address0");
    sc_trace(mVcdFile, relu_U0_activations_V_ce0, "relu_U0_activations_V_ce0");
    sc_trace(mVcdFile, relu_U0_activations_V_we0, "relu_U0_activations_V_we0");
    sc_trace(mVcdFile, relu_U0_activations_V_d0, "relu_U0_activations_V_d0");
    sc_trace(mVcdFile, ap_channel_done_ReLU_V, "ap_channel_done_ReLU_V");
    sc_trace(mVcdFile, relu_U0_activations_V_full_n, "relu_U0_activations_V_full_n");
    sc_trace(mVcdFile, max_pool_1chan_U0_ap_start, "max_pool_1chan_U0_ap_start");
    sc_trace(mVcdFile, max_pool_1chan_U0_ap_done, "max_pool_1chan_U0_ap_done");
    sc_trace(mVcdFile, max_pool_1chan_U0_ap_continue, "max_pool_1chan_U0_ap_continue");
    sc_trace(mVcdFile, max_pool_1chan_U0_ap_idle, "max_pool_1chan_U0_ap_idle");
    sc_trace(mVcdFile, max_pool_1chan_U0_ap_ready, "max_pool_1chan_U0_ap_ready");
    sc_trace(mVcdFile, max_pool_1chan_U0_in_image_V_address0, "max_pool_1chan_U0_in_image_V_address0");
    sc_trace(mVcdFile, max_pool_1chan_U0_in_image_V_ce0, "max_pool_1chan_U0_in_image_V_ce0");
    sc_trace(mVcdFile, max_pool_1chan_U0_in_image_V_address1, "max_pool_1chan_U0_in_image_V_address1");
    sc_trace(mVcdFile, max_pool_1chan_U0_in_image_V_ce1, "max_pool_1chan_U0_in_image_V_ce1");
    sc_trace(mVcdFile, max_pool_1chan_U0_out_image_V_address0, "max_pool_1chan_U0_out_image_V_address0");
    sc_trace(mVcdFile, max_pool_1chan_U0_out_image_V_ce0, "max_pool_1chan_U0_out_image_V_ce0");
    sc_trace(mVcdFile, max_pool_1chan_U0_out_image_V_we0, "max_pool_1chan_U0_out_image_V_we0");
    sc_trace(mVcdFile, max_pool_1chan_U0_out_image_V_d0, "max_pool_1chan_U0_out_image_V_d0");
    sc_trace(mVcdFile, ap_channel_done_maxpool_V, "ap_channel_done_maxpool_V");
    sc_trace(mVcdFile, max_pool_1chan_U0_out_image_V_full_n, "max_pool_1chan_U0_out_image_V_full_n");
    sc_trace(mVcdFile, pad_for_conv2_U0_ap_start, "pad_for_conv2_U0_ap_start");
    sc_trace(mVcdFile, pad_for_conv2_U0_ap_done, "pad_for_conv2_U0_ap_done");
    sc_trace(mVcdFile, pad_for_conv2_U0_ap_continue, "pad_for_conv2_U0_ap_continue");
    sc_trace(mVcdFile, pad_for_conv2_U0_ap_idle, "pad_for_conv2_U0_ap_idle");
    sc_trace(mVcdFile, pad_for_conv2_U0_ap_ready, "pad_for_conv2_U0_ap_ready");
    sc_trace(mVcdFile, pad_for_conv2_U0_in_image_V_address0, "pad_for_conv2_U0_in_image_V_address0");
    sc_trace(mVcdFile, pad_for_conv2_U0_in_image_V_ce0, "pad_for_conv2_U0_in_image_V_ce0");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_address0, "pad_for_conv2_U0_out_image_V_address0");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_ce0, "pad_for_conv2_U0_out_image_V_ce0");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_we0, "pad_for_conv2_U0_out_image_V_we0");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_d0, "pad_for_conv2_U0_out_image_V_d0");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_address1, "pad_for_conv2_U0_out_image_V_address1");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_ce1, "pad_for_conv2_U0_out_image_V_ce1");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_we1, "pad_for_conv2_U0_out_image_V_we1");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_d1, "pad_for_conv2_U0_out_image_V_d1");
    sc_trace(mVcdFile, ap_channel_done_padded_L2_V, "ap_channel_done_padded_L2_V");
    sc_trace(mVcdFile, pad_for_conv2_U0_out_image_V_full_n, "pad_for_conv2_U0_out_image_V_full_n");
    sc_trace(mVcdFile, resample_for_conv2_U0_ap_start, "resample_for_conv2_U0_ap_start");
    sc_trace(mVcdFile, resample_for_conv2_U0_ap_done, "resample_for_conv2_U0_ap_done");
    sc_trace(mVcdFile, resample_for_conv2_U0_ap_continue, "resample_for_conv2_U0_ap_continue");
    sc_trace(mVcdFile, resample_for_conv2_U0_ap_idle, "resample_for_conv2_U0_ap_idle");
    sc_trace(mVcdFile, resample_for_conv2_U0_ap_ready, "resample_for_conv2_U0_ap_ready");
    sc_trace(mVcdFile, resample_for_conv2_U0_square_image_V_address0, "resample_for_conv2_U0_square_image_V_address0");
    sc_trace(mVcdFile, resample_for_conv2_U0_square_image_V_ce0, "resample_for_conv2_U0_square_image_V_ce0");
    sc_trace(mVcdFile, resample_for_conv2_U0_resampled_V_address0, "resample_for_conv2_U0_resampled_V_address0");
    sc_trace(mVcdFile, resample_for_conv2_U0_resampled_V_ce0, "resample_for_conv2_U0_resampled_V_ce0");
    sc_trace(mVcdFile, resample_for_conv2_U0_resampled_V_we0, "resample_for_conv2_U0_resampled_V_we0");
    sc_trace(mVcdFile, resample_for_conv2_U0_resampled_V_d0, "resample_for_conv2_U0_resampled_V_d0");
    sc_trace(mVcdFile, ap_channel_done_resampled_L2_V, "ap_channel_done_resampled_L2_V");
    sc_trace(mVcdFile, resample_for_conv2_U0_resampled_V_full_n, "resample_for_conv2_U0_resampled_V_full_n");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_start, "conv2d_3x3_4chan_rev_U0_ap_start");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_done, "conv2d_3x3_4chan_rev_U0_ap_done");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_continue, "conv2d_3x3_4chan_rev_U0_ap_continue");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_idle, "conv2d_3x3_4chan_rev_U0_ap_idle");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_ready, "conv2d_3x3_4chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_in_image_V_address0, "conv2d_3x3_4chan_rev_U0_in_image_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_in_image_V_ce0, "conv2d_3x3_4chan_rev_U0_in_image_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_kernel_V_address0, "conv2d_3x3_4chan_rev_U0_kernel_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_kernel_V_ce0, "conv2d_3x3_4chan_rev_U0_kernel_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_bias_V_address0, "conv2d_3x3_4chan_rev_U0_bias_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_bias_V_ce0, "conv2d_3x3_4chan_rev_U0_bias_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_out_image_V_address0, "conv2d_3x3_4chan_rev_U0_out_image_V_address0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_out_image_V_ce0, "conv2d_3x3_4chan_rev_U0_out_image_V_ce0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_out_image_V_we0, "conv2d_3x3_4chan_rev_U0_out_image_V_we0");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_out_image_V_d0, "conv2d_3x3_4chan_rev_U0_out_image_V_d0");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, mean_removed_V_i_full_n, "mean_removed_V_i_full_n");
    sc_trace(mVcdFile, mean_removed_V_t_empty_n, "mean_removed_V_t_empty_n");
    sc_trace(mVcdFile, padded_V_i_full_n, "padded_V_i_full_n");
    sc_trace(mVcdFile, padded_V_t_empty_n, "padded_V_t_empty_n");
    sc_trace(mVcdFile, resampled_V_i_full_n, "resampled_V_i_full_n");
    sc_trace(mVcdFile, resampled_V_t_empty_n, "resampled_V_t_empty_n");
    sc_trace(mVcdFile, conv_V_i_full_n, "conv_V_i_full_n");
    sc_trace(mVcdFile, conv_V_t_empty_n, "conv_V_t_empty_n");
    sc_trace(mVcdFile, batchnorm_V_i_full_n, "batchnorm_V_i_full_n");
    sc_trace(mVcdFile, batchnorm_V_t_empty_n, "batchnorm_V_t_empty_n");
    sc_trace(mVcdFile, ReLU_V_i_full_n, "ReLU_V_i_full_n");
    sc_trace(mVcdFile, ReLU_V_t_empty_n, "ReLU_V_t_empty_n");
    sc_trace(mVcdFile, ReLU_V_t_d1, "ReLU_V_t_d1");
    sc_trace(mVcdFile, ReLU_V_t_we1, "ReLU_V_t_we1");
    sc_trace(mVcdFile, maxpool_V_i_full_n, "maxpool_V_i_full_n");
    sc_trace(mVcdFile, maxpool_V_t_empty_n, "maxpool_V_t_empty_n");
    sc_trace(mVcdFile, padded_L2_V_i_full_n, "padded_L2_V_i_full_n");
    sc_trace(mVcdFile, padded_L2_V_t_empty_n, "padded_L2_V_t_empty_n");
    sc_trace(mVcdFile, resampled_L2_V_i_full_n, "resampled_L2_V_i_full_n");
    sc_trace(mVcdFile, resampled_L2_V_t_empty_n, "resampled_L2_V_t_empty_n");
    sc_trace(mVcdFile, conv_bias_L1_V_c_full_n, "conv_bias_L1_V_c_full_n");
    sc_trace(mVcdFile, conv_bias_L1_V_c_dout, "conv_bias_L1_V_c_dout");
    sc_trace(mVcdFile, conv_bias_L1_V_c_empty_n, "conv_bias_L1_V_c_empty_n");
    sc_trace(mVcdFile, a_V_c_full_n, "a_V_c_full_n");
    sc_trace(mVcdFile, a_V_c_dout, "a_V_c_dout");
    sc_trace(mVcdFile, a_V_c_empty_n, "a_V_c_empty_n");
    sc_trace(mVcdFile, b_V_c_full_n, "b_V_c_full_n");
    sc_trace(mVcdFile, b_V_c_dout, "b_V_c_dout");
    sc_trace(mVcdFile, b_V_c_empty_n, "b_V_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_zero_mean_1chan50_U0_ap_ready, "ap_sync_reg_zero_mean_1chan50_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_zero_mean_1chan50_U0_ap_ready, "ap_sync_zero_mean_1chan50_U0_ap_ready");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_ap_ready_count, "zero_mean_1chan50_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready, "ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready, "ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_ap_ready_count, "conv2d_3x3_1chan_rev_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready, "ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready, "ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_ap_ready_count, "conv2d_3x3_4chan_rev_U0_ap_ready_count");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_start_full_n, "zero_mean_1chan50_U0_start_full_n");
    sc_trace(mVcdFile, zero_mean_1chan50_U0_start_write, "zero_mean_1chan50_U0_start_write");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_start_full_n, "efficient_pad_n_1cha_U0_start_full_n");
    sc_trace(mVcdFile, efficient_pad_n_1cha_U0_start_write, "efficient_pad_n_1cha_U0_start_write");
    sc_trace(mVcdFile, resample_U0_start_full_n, "resample_U0_start_full_n");
    sc_trace(mVcdFile, resample_U0_start_write, "resample_U0_start_write");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_start_full_n, "conv2d_3x3_1chan_rev_U0_start_full_n");
    sc_trace(mVcdFile, conv2d_3x3_1chan_rev_U0_start_write, "conv2d_3x3_1chan_rev_U0_start_write");
    sc_trace(mVcdFile, batch_norm_U0_start_full_n, "batch_norm_U0_start_full_n");
    sc_trace(mVcdFile, batch_norm_U0_start_write, "batch_norm_U0_start_write");
    sc_trace(mVcdFile, relu_U0_start_full_n, "relu_U0_start_full_n");
    sc_trace(mVcdFile, relu_U0_start_write, "relu_U0_start_write");
    sc_trace(mVcdFile, max_pool_1chan_U0_start_full_n, "max_pool_1chan_U0_start_full_n");
    sc_trace(mVcdFile, max_pool_1chan_U0_start_write, "max_pool_1chan_U0_start_write");
    sc_trace(mVcdFile, pad_for_conv2_U0_start_full_n, "pad_for_conv2_U0_start_full_n");
    sc_trace(mVcdFile, pad_for_conv2_U0_start_write, "pad_for_conv2_U0_start_write");
    sc_trace(mVcdFile, resample_for_conv2_U0_start_full_n, "resample_for_conv2_U0_start_full_n");
    sc_trace(mVcdFile, resample_for_conv2_U0_start_write, "resample_for_conv2_U0_start_write");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_start_full_n, "conv2d_3x3_4chan_rev_U0_start_full_n");
    sc_trace(mVcdFile, conv2d_3x3_4chan_rev_U0_start_write, "conv2d_3x3_4chan_rev_U0_start_write");
#endif

    }
    mHdltvinHandle.open("CNN.hdltvin.dat");
    mHdltvoutHandle.open("CNN.hdltvout.dat");
}

CNN::~CNN() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mean_removed_V_U;
    delete padded_V_U;
    delete resampled_V_U;
    delete conv_V_U;
    delete batchnorm_V_U;
    delete ReLU_V_U;
    delete maxpool_V_U;
    delete padded_L2_V_U;
    delete resampled_L2_V_U;
    delete zero_mean_1chan50_U0;
    delete efficient_pad_n_1cha_U0;
    delete resample_U0;
    delete conv2d_3x3_1chan_rev_U0;
    delete batch_norm_U0;
    delete relu_U0;
    delete max_pool_1chan_U0;
    delete pad_for_conv2_U0;
    delete resample_for_conv2_U0;
    delete conv2d_3x3_4chan_rev_U0;
    delete conv_bias_L1_V_c_U;
    delete a_V_c_U;
    delete b_V_c_U;
}

void CNN::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void CNN::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv10_0;
}

void CNN::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void CNN::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv18_0;
}

void CNN::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv48_0;
}

void CNN::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv25_0;
}

void CNN::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv8_0;
}

void CNN::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready = ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready = ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_zero_mean_1chan50_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_zero_mean_1chan50_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_zero_mean_1chan50_U0_ap_ready = ap_sync_zero_mean_1chan50_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, conv2d_3x3_1chan_rev_U0_ap_ready.read()))) {
        conv2d_3x3_1chan_rev_U0_ap_ready_count = (!conv2d_3x3_1chan_rev_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(conv2d_3x3_1chan_rev_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, conv2d_3x3_1chan_rev_U0_ap_ready.read()))) {
        conv2d_3x3_1chan_rev_U0_ap_ready_count = (!conv2d_3x3_1chan_rev_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(conv2d_3x3_1chan_rev_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, conv2d_3x3_4chan_rev_U0_ap_ready.read()))) {
        conv2d_3x3_4chan_rev_U0_ap_ready_count = (!conv2d_3x3_4chan_rev_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(conv2d_3x3_4chan_rev_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, conv2d_3x3_4chan_rev_U0_ap_ready.read()))) {
        conv2d_3x3_4chan_rev_U0_ap_ready_count = (!conv2d_3x3_4chan_rev_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(conv2d_3x3_4chan_rev_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, zero_mean_1chan50_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        zero_mean_1chan50_U0_ap_ready_count = (!zero_mean_1chan50_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(zero_mean_1chan50_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, zero_mean_1chan50_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        zero_mean_1chan50_U0_ap_ready_count = (!zero_mean_1chan50_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(zero_mean_1chan50_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void CNN::thread_ReLU_V_t_d1() {
    ReLU_V_t_d1 = ap_const_lv48_0;
}

void CNN::thread_ReLU_V_t_we1() {
    ReLU_V_t_we1 = ap_const_logic_0;
}

void CNN::thread_ap_channel_done_ReLU_V() {
    ap_channel_done_ReLU_V = relu_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_batchnorm_V() {
    ap_channel_done_batchnorm_V = batch_norm_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_conv_V() {
    ap_channel_done_conv_V = conv2d_3x3_1chan_rev_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_maxpool_V() {
    ap_channel_done_maxpool_V = max_pool_1chan_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_mean_removed_V() {
    ap_channel_done_mean_removed_V = zero_mean_1chan50_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_padded_L2_V() {
    ap_channel_done_padded_L2_V = pad_for_conv2_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_padded_V() {
    ap_channel_done_padded_V = efficient_pad_n_1cha_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_resampled_L2_V() {
    ap_channel_done_resampled_L2_V = resample_for_conv2_U0_ap_done.read();
}

void CNN::thread_ap_channel_done_resampled_V() {
    ap_channel_done_resampled_V = resample_U0_ap_done.read();
}

void CNN::thread_ap_done() {
    ap_done = conv2d_3x3_4chan_rev_U0_ap_done.read();
}

void CNN::thread_ap_idle() {
    ap_idle = (zero_mean_1chan50_U0_ap_idle.read() & efficient_pad_n_1cha_U0_ap_idle.read() & resample_U0_ap_idle.read() & conv2d_3x3_1chan_rev_U0_ap_idle.read() & batch_norm_U0_ap_idle.read() & relu_U0_ap_idle.read() & max_pool_1chan_U0_ap_idle.read() & pad_for_conv2_U0_ap_idle.read() & resample_for_conv2_U0_ap_idle.read() & conv2d_3x3_4chan_rev_U0_ap_idle.read() & (mean_removed_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (padded_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (resampled_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (conv_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (batchnorm_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (ReLU_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (maxpool_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (padded_L2_V_t_empty_n.read() ^ 
  ap_const_logic_1) & (resampled_L2_V_t_empty_n.read() ^ 
  ap_const_logic_1));
}

void CNN::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void CNN::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void CNN::thread_ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready() {
    ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready = (conv2d_3x3_1chan_rev_U0_ap_ready.read() | ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready.read());
}

void CNN::thread_ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready() {
    ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready = (conv2d_3x3_4chan_rev_U0_ap_ready.read() | ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready.read());
}

void CNN::thread_ap_sync_done() {
    ap_sync_done = conv2d_3x3_4chan_rev_U0_ap_done.read();
}

void CNN::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_zero_mean_1chan50_U0_ap_ready.read() & ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready.read() & ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready.read());
}

void CNN::thread_ap_sync_zero_mean_1chan50_U0_ap_ready() {
    ap_sync_zero_mean_1chan50_U0_ap_ready = (zero_mean_1chan50_U0_ap_ready.read() | ap_sync_reg_zero_mean_1chan50_U0_ap_ready.read());
}

void CNN::thread_batch_norm_U0_ap_continue() {
    batch_norm_U0_ap_continue = batchnorm_V_i_full_n.read();
}

void CNN::thread_batch_norm_U0_ap_start() {
    batch_norm_U0_ap_start = conv_V_t_empty_n.read();
}

void CNN::thread_batch_norm_U0_out_image_V_full_n() {
    batch_norm_U0_out_image_V_full_n = batchnorm_V_i_full_n.read();
}

void CNN::thread_batch_norm_U0_start_full_n() {
    batch_norm_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_batch_norm_U0_start_write() {
    batch_norm_U0_start_write = ap_const_logic_0;
}

void CNN::thread_conv2d_3x3_1chan_rev_U0_ap_continue() {
    conv2d_3x3_1chan_rev_U0_ap_continue = conv_V_i_full_n.read();
}

void CNN::thread_conv2d_3x3_1chan_rev_U0_ap_start() {
    conv2d_3x3_1chan_rev_U0_ap_start = (ap_start.read() & resampled_V_t_empty_n.read() & (ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void CNN::thread_conv2d_3x3_1chan_rev_U0_out_image_V_full_n() {
    conv2d_3x3_1chan_rev_U0_out_image_V_full_n = conv_V_i_full_n.read();
}

void CNN::thread_conv2d_3x3_1chan_rev_U0_start_full_n() {
    conv2d_3x3_1chan_rev_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_conv2d_3x3_1chan_rev_U0_start_write() {
    conv2d_3x3_1chan_rev_U0_start_write = ap_const_logic_0;
}

void CNN::thread_conv2d_3x3_4chan_rev_U0_ap_continue() {
    conv2d_3x3_4chan_rev_U0_ap_continue = ap_const_logic_1;
}

void CNN::thread_conv2d_3x3_4chan_rev_U0_ap_start() {
    conv2d_3x3_4chan_rev_U0_ap_start = (ap_start.read() & resampled_L2_V_t_empty_n.read() & (ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void CNN::thread_conv2d_3x3_4chan_rev_U0_start_full_n() {
    conv2d_3x3_4chan_rev_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_conv2d_3x3_4chan_rev_U0_start_write() {
    conv2d_3x3_4chan_rev_U0_start_write = ap_const_logic_0;
}

void CNN::thread_conv_bias_L2_V_address0() {
    conv_bias_L2_V_address0 = conv2d_3x3_4chan_rev_U0_bias_V_address0.read();
}

void CNN::thread_conv_bias_L2_V_address1() {
    conv_bias_L2_V_address1 = ap_const_lv2_0;
}

void CNN::thread_conv_bias_L2_V_ce0() {
    conv_bias_L2_V_ce0 = conv2d_3x3_4chan_rev_U0_bias_V_ce0.read();
}

void CNN::thread_conv_bias_L2_V_ce1() {
    conv_bias_L2_V_ce1 = ap_const_logic_0;
}

void CNN::thread_conv_bias_L2_V_d0() {
    conv_bias_L2_V_d0 = ap_const_lv48_0;
}

void CNN::thread_conv_bias_L2_V_d1() {
    conv_bias_L2_V_d1 = ap_const_lv48_0;
}

void CNN::thread_conv_bias_L2_V_we0() {
    conv_bias_L2_V_we0 = ap_const_logic_0;
}

void CNN::thread_conv_bias_L2_V_we1() {
    conv_bias_L2_V_we1 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L1_V_address0() {
    conv_kernel_L1_V_address0 = conv2d_3x3_1chan_rev_U0_kernel_V_address0.read();
}

void CNN::thread_conv_kernel_L1_V_address1() {
    conv_kernel_L1_V_address1 = ap_const_lv4_0;
}

void CNN::thread_conv_kernel_L1_V_ce0() {
    conv_kernel_L1_V_ce0 = conv2d_3x3_1chan_rev_U0_kernel_V_ce0.read();
}

void CNN::thread_conv_kernel_L1_V_ce1() {
    conv_kernel_L1_V_ce1 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L1_V_d0() {
    conv_kernel_L1_V_d0 = ap_const_lv18_0;
}

void CNN::thread_conv_kernel_L1_V_d1() {
    conv_kernel_L1_V_d1 = ap_const_lv18_0;
}

void CNN::thread_conv_kernel_L1_V_we0() {
    conv_kernel_L1_V_we0 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L1_V_we1() {
    conv_kernel_L1_V_we1 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L2_V_address0() {
    conv_kernel_L2_V_address0 = conv2d_3x3_4chan_rev_U0_kernel_V_address0.read();
}

void CNN::thread_conv_kernel_L2_V_address1() {
    conv_kernel_L2_V_address1 = ap_const_lv6_0;
}

void CNN::thread_conv_kernel_L2_V_ce0() {
    conv_kernel_L2_V_ce0 = conv2d_3x3_4chan_rev_U0_kernel_V_ce0.read();
}

void CNN::thread_conv_kernel_L2_V_ce1() {
    conv_kernel_L2_V_ce1 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L2_V_d0() {
    conv_kernel_L2_V_d0 = ap_const_lv18_0;
}

void CNN::thread_conv_kernel_L2_V_d1() {
    conv_kernel_L2_V_d1 = ap_const_lv18_0;
}

void CNN::thread_conv_kernel_L2_V_we0() {
    conv_kernel_L2_V_we0 = ap_const_logic_0;
}

void CNN::thread_conv_kernel_L2_V_we1() {
    conv_kernel_L2_V_we1 = ap_const_logic_0;
}

void CNN::thread_efficient_pad_n_1cha_U0_ap_continue() {
    efficient_pad_n_1cha_U0_ap_continue = padded_V_i_full_n.read();
}

void CNN::thread_efficient_pad_n_1cha_U0_ap_start() {
    efficient_pad_n_1cha_U0_ap_start = mean_removed_V_t_empty_n.read();
}

void CNN::thread_efficient_pad_n_1cha_U0_out_image_V_full_n() {
    efficient_pad_n_1cha_U0_out_image_V_full_n = padded_V_i_full_n.read();
}

void CNN::thread_efficient_pad_n_1cha_U0_start_full_n() {
    efficient_pad_n_1cha_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_efficient_pad_n_1cha_U0_start_write() {
    efficient_pad_n_1cha_U0_start_write = ap_const_logic_0;
}

void CNN::thread_in_image_V_address0() {
    in_image_V_address0 = zero_mean_1chan50_U0_in_image_V_address0.read();
}

void CNN::thread_in_image_V_address1() {
    in_image_V_address1 = ap_const_lv10_0;
}

void CNN::thread_in_image_V_ce0() {
    in_image_V_ce0 = zero_mean_1chan50_U0_in_image_V_ce0.read();
}

void CNN::thread_in_image_V_ce1() {
    in_image_V_ce1 = ap_const_logic_0;
}

void CNN::thread_in_image_V_d0() {
    in_image_V_d0 = ap_const_lv18_0;
}

void CNN::thread_in_image_V_d1() {
    in_image_V_d1 = ap_const_lv18_0;
}

void CNN::thread_in_image_V_we0() {
    in_image_V_we0 = ap_const_logic_0;
}

void CNN::thread_in_image_V_we1() {
    in_image_V_we1 = ap_const_logic_0;
}

void CNN::thread_max_pool_1chan_U0_ap_continue() {
    max_pool_1chan_U0_ap_continue = maxpool_V_i_full_n.read();
}

void CNN::thread_max_pool_1chan_U0_ap_start() {
    max_pool_1chan_U0_ap_start = ReLU_V_t_empty_n.read();
}

void CNN::thread_max_pool_1chan_U0_out_image_V_full_n() {
    max_pool_1chan_U0_out_image_V_full_n = maxpool_V_i_full_n.read();
}

void CNN::thread_max_pool_1chan_U0_start_full_n() {
    max_pool_1chan_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_max_pool_1chan_U0_start_write() {
    max_pool_1chan_U0_start_write = ap_const_logic_0;
}

void CNN::thread_means_V_address0() {
    means_V_address0 = zero_mean_1chan50_U0_means_V_address0.read();
}

void CNN::thread_means_V_address1() {
    means_V_address1 = ap_const_lv10_0;
}

void CNN::thread_means_V_ce0() {
    means_V_ce0 = zero_mean_1chan50_U0_means_V_ce0.read();
}

void CNN::thread_means_V_ce1() {
    means_V_ce1 = ap_const_logic_0;
}

void CNN::thread_means_V_d0() {
    means_V_d0 = ap_const_lv18_0;
}

void CNN::thread_means_V_d1() {
    means_V_d1 = ap_const_lv18_0;
}

void CNN::thread_means_V_we0() {
    means_V_we0 = ap_const_logic_0;
}

void CNN::thread_means_V_we1() {
    means_V_we1 = ap_const_logic_0;
}

void CNN::thread_pad_for_conv2_U0_ap_continue() {
    pad_for_conv2_U0_ap_continue = padded_L2_V_i_full_n.read();
}

void CNN::thread_pad_for_conv2_U0_ap_start() {
    pad_for_conv2_U0_ap_start = maxpool_V_t_empty_n.read();
}

void CNN::thread_pad_for_conv2_U0_out_image_V_full_n() {
    pad_for_conv2_U0_out_image_V_full_n = padded_L2_V_i_full_n.read();
}

void CNN::thread_pad_for_conv2_U0_start_full_n() {
    pad_for_conv2_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_pad_for_conv2_U0_start_write() {
    pad_for_conv2_U0_start_write = ap_const_logic_0;
}

void CNN::thread_relu_U0_activations_V_full_n() {
    relu_U0_activations_V_full_n = ReLU_V_i_full_n.read();
}

void CNN::thread_relu_U0_ap_continue() {
    relu_U0_ap_continue = ReLU_V_i_full_n.read();
}

void CNN::thread_relu_U0_ap_start() {
    relu_U0_ap_start = batchnorm_V_t_empty_n.read();
}

void CNN::thread_relu_U0_start_full_n() {
    relu_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_relu_U0_start_write() {
    relu_U0_start_write = ap_const_logic_0;
}

void CNN::thread_resample_U0_ap_continue() {
    resample_U0_ap_continue = resampled_V_i_full_n.read();
}

void CNN::thread_resample_U0_ap_start() {
    resample_U0_ap_start = padded_V_t_empty_n.read();
}

void CNN::thread_resample_U0_resampled_V_full_n() {
    resample_U0_resampled_V_full_n = resampled_V_i_full_n.read();
}

void CNN::thread_resample_U0_start_full_n() {
    resample_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_resample_U0_start_write() {
    resample_U0_start_write = ap_const_logic_0;
}

void CNN::thread_resample_for_conv2_U0_ap_continue() {
    resample_for_conv2_U0_ap_continue = resampled_L2_V_i_full_n.read();
}

void CNN::thread_resample_for_conv2_U0_ap_start() {
    resample_for_conv2_U0_ap_start = padded_L2_V_t_empty_n.read();
}

void CNN::thread_resample_for_conv2_U0_resampled_V_full_n() {
    resample_for_conv2_U0_resampled_V_full_n = resampled_L2_V_i_full_n.read();
}

void CNN::thread_resample_for_conv2_U0_start_full_n() {
    resample_for_conv2_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_resample_for_conv2_U0_start_write() {
    resample_for_conv2_U0_start_write = ap_const_logic_0;
}

void CNN::thread_result_V_address0() {
    result_V_address0 = conv2d_3x3_4chan_rev_U0_out_image_V_address0.read();
}

void CNN::thread_result_V_address1() {
    result_V_address1 = ap_const_lv10_0;
}

void CNN::thread_result_V_ce0() {
    result_V_ce0 = conv2d_3x3_4chan_rev_U0_out_image_V_ce0.read();
}

void CNN::thread_result_V_ce1() {
    result_V_ce1 = ap_const_logic_0;
}

void CNN::thread_result_V_d0() {
    result_V_d0 = conv2d_3x3_4chan_rev_U0_out_image_V_d0.read();
}

void CNN::thread_result_V_d1() {
    result_V_d1 = ap_const_lv48_0;
}

void CNN::thread_result_V_we0() {
    result_V_we0 = conv2d_3x3_4chan_rev_U0_out_image_V_we0.read();
}

void CNN::thread_result_V_we1() {
    result_V_we1 = ap_const_logic_0;
}

void CNN::thread_zero_mean_1chan50_U0_ap_continue() {
    zero_mean_1chan50_U0_ap_continue = mean_removed_V_i_full_n.read();
}

void CNN::thread_zero_mean_1chan50_U0_ap_start() {
    zero_mean_1chan50_U0_ap_start = (ap_start.read() & (ap_sync_reg_zero_mean_1chan50_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void CNN::thread_zero_mean_1chan50_U0_out_image_V_full_n() {
    zero_mean_1chan50_U0_out_image_V_full_n = mean_removed_V_i_full_n.read();
}

void CNN::thread_zero_mean_1chan50_U0_start_full_n() {
    zero_mean_1chan50_U0_start_full_n = ap_const_logic_1;
}

void CNN::thread_zero_mean_1chan50_U0_start_write() {
    zero_mean_1chan50_U0_start_write = ap_const_logic_0;
}

void CNN::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_image_V_address0\" :  \"" << in_image_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_ce0\" :  \"" << in_image_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_d0\" :  \"" << in_image_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_image_V_q0\" :  \"" << in_image_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_we0\" :  \"" << in_image_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_address1\" :  \"" << in_image_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_ce1\" :  \"" << in_image_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_d1\" :  \"" << in_image_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_image_V_q1\" :  \"" << in_image_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_image_V_we1\" :  \"" << in_image_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_address0\" :  \"" << means_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_ce0\" :  \"" << means_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_d0\" :  \"" << means_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"means_V_q0\" :  \"" << means_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_we0\" :  \"" << means_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_address1\" :  \"" << means_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_ce1\" :  \"" << means_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_d1\" :  \"" << means_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"means_V_q1\" :  \"" << means_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"means_V_we1\" :  \"" << means_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_address0\" :  \"" << conv_kernel_L1_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_ce0\" :  \"" << conv_kernel_L1_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_d0\" :  \"" << conv_kernel_L1_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_kernel_L1_V_q0\" :  \"" << conv_kernel_L1_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_we0\" :  \"" << conv_kernel_L1_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_address1\" :  \"" << conv_kernel_L1_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_ce1\" :  \"" << conv_kernel_L1_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_d1\" :  \"" << conv_kernel_L1_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_kernel_L1_V_q1\" :  \"" << conv_kernel_L1_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L1_V_we1\" :  \"" << conv_kernel_L1_V_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_bias_L1_V\" :  \"" << conv_bias_L1_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_V\" :  \"" << a_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_V\" :  \"" << b_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_address0\" :  \"" << conv_kernel_L2_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_ce0\" :  \"" << conv_kernel_L2_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_d0\" :  \"" << conv_kernel_L2_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_kernel_L2_V_q0\" :  \"" << conv_kernel_L2_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_we0\" :  \"" << conv_kernel_L2_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_address1\" :  \"" << conv_kernel_L2_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_ce1\" :  \"" << conv_kernel_L2_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_d1\" :  \"" << conv_kernel_L2_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_kernel_L2_V_q1\" :  \"" << conv_kernel_L2_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_kernel_L2_V_we1\" :  \"" << conv_kernel_L2_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_address0\" :  \"" << conv_bias_L2_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_ce0\" :  \"" << conv_bias_L2_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_d0\" :  \"" << conv_bias_L2_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_bias_L2_V_q0\" :  \"" << conv_bias_L2_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_we0\" :  \"" << conv_bias_L2_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_address1\" :  \"" << conv_bias_L2_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_ce1\" :  \"" << conv_bias_L2_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_d1\" :  \"" << conv_bias_L2_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_bias_L2_V_q1\" :  \"" << conv_bias_L2_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_bias_L2_V_we1\" :  \"" << conv_bias_L2_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_address0\" :  \"" << result_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_ce0\" :  \"" << result_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_d0\" :  \"" << result_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"result_V_q0\" :  \"" << result_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_we0\" :  \"" << result_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_address1\" :  \"" << result_V_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_ce1\" :  \"" << result_V_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_d1\" :  \"" << result_V_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"result_V_q1\" :  \"" << result_V_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_V_we1\" :  \"" << result_V_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

