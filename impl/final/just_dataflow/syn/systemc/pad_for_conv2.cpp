// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pad_for_conv2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pad_for_conv2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pad_for_conv2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state1 = "1";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state2 = "10";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state3 = "100";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state4 = "1000";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state5 = "10000";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state6 = "100000";
const sc_lv<7> pad_for_conv2::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> pad_for_conv2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pad_for_conv2::ap_const_lv32_1 = "1";
const sc_lv<1> pad_for_conv2::ap_const_lv1_0 = "0";
const sc_lv<32> pad_for_conv2::ap_const_lv32_3 = "11";
const sc_lv<32> pad_for_conv2::ap_const_lv32_4 = "100";
const sc_lv<32> pad_for_conv2::ap_const_lv32_5 = "101";
const sc_lv<5> pad_for_conv2::ap_const_lv5_0 = "00000";
const sc_lv<32> pad_for_conv2::ap_const_lv32_2 = "10";
const sc_lv<1> pad_for_conv2::ap_const_lv1_1 = "1";
const sc_lv<4> pad_for_conv2::ap_const_lv4_0 = "0000";
const sc_lv<32> pad_for_conv2::ap_const_lv32_6 = "110";
const sc_lv<25> pad_for_conv2::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<5> pad_for_conv2::ap_const_lv5_10 = "10000";
const sc_lv<5> pad_for_conv2::ap_const_lv5_1 = "1";
const sc_lv<9> pad_for_conv2::ap_const_lv9_F = "1111";
const sc_lv<55> pad_for_conv2::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<4> pad_for_conv2::ap_const_lv4_E = "1110";
const sc_lv<4> pad_for_conv2::ap_const_lv4_1 = "1";
const bool pad_for_conv2::ap_const_boolean_1 = true;

pad_for_conv2::pad_for_conv2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_24_fu_209_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_24_fu_209_p2 );

    SC_METHOD(thread_i_3_fu_156_p2);
    sensitive << ( i_reg_116 );

    SC_METHOD(thread_i_4_fu_215_p2);
    sensitive << ( i_1_reg_128 );

    SC_METHOD(thread_in_image_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_43_cast_fu_272_p1 );

    SC_METHOD(thread_in_image_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_4_fu_257_p2);
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_out_image_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_s_fu_162_p1 );
    sensitive << ( tmp_35_cast_fu_190_p1 );
    sensitive << ( tmp_40_fu_283_p1 );

    SC_METHOD(thread_out_image_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_32_fu_175_p1 );
    sensitive << ( tmp_35_fu_200_p3 );

    SC_METHOD(thread_out_image_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_image_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_image_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( in_image_V_load_reg_329 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_image_V_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_image_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_image_V_we1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_p_shl1_cast_fu_241_p1);
    sensitive << ( tmp_37_fu_233_p3 );

    SC_METHOD(thread_p_shl_cast_fu_229_p1);
    sensitive << ( tmp_36_fu_221_p3 );

    SC_METHOD(thread_tmp_24_fu_209_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_128 );

    SC_METHOD(thread_tmp_26_fu_251_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_tmp_27_cast_fu_263_p1);
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_tmp_31_fu_167_p3);
    sensitive << ( i_reg_116 );

    SC_METHOD(thread_tmp_32_fu_175_p1);
    sensitive << ( tmp_31_fu_167_p3 );

    SC_METHOD(thread_tmp_33_fu_180_p2);
    sensitive << ( i_reg_116 );

    SC_METHOD(thread_tmp_34_fu_195_p2);
    sensitive << ( tmp_31_reg_296 );

    SC_METHOD(thread_tmp_35_cast1_fu_186_p1);
    sensitive << ( tmp_33_fu_180_p2 );

    SC_METHOD(thread_tmp_35_cast_fu_190_p1);
    sensitive << ( tmp_35_cast1_fu_186_p1 );

    SC_METHOD(thread_tmp_35_fu_200_p3);
    sensitive << ( tmp_34_fu_195_p2 );

    SC_METHOD(thread_tmp_36_fu_221_p3);
    sensitive << ( i_1_reg_128 );

    SC_METHOD(thread_tmp_37_fu_233_p3);
    sensitive << ( i_1_reg_128 );

    SC_METHOD(thread_tmp_38_fu_245_p2);
    sensitive << ( p_shl_cast_fu_229_p1 );
    sensitive << ( p_shl1_cast_fu_241_p1 );

    SC_METHOD(thread_tmp_39_fu_277_p3);
    sensitive << ( i_4_reg_304 );
    sensitive << ( j_4_reg_318 );

    SC_METHOD(thread_tmp_40_fu_283_p1);
    sensitive << ( tmp_39_fu_277_p3 );

    SC_METHOD(thread_tmp_41_fu_267_p2);
    sensitive << ( tmp_38_reg_310 );
    sensitive << ( tmp_27_cast_fu_263_p1 );

    SC_METHOD(thread_tmp_43_cast_fu_272_p1);
    sensitive << ( tmp_41_fu_267_p2 );

    SC_METHOD(thread_tmp_fu_150_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_116 );

    SC_METHOD(thread_tmp_s_fu_162_p1);
    sensitive << ( i_reg_116 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_24_fu_209_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_26_fu_251_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pad_for_conv2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_image_V_address0, "(port)in_image_V_address0");
    sc_trace(mVcdFile, in_image_V_ce0, "(port)in_image_V_ce0");
    sc_trace(mVcdFile, in_image_V_q0, "(port)in_image_V_q0");
    sc_trace(mVcdFile, out_image_V_address0, "(port)out_image_V_address0");
    sc_trace(mVcdFile, out_image_V_ce0, "(port)out_image_V_ce0");
    sc_trace(mVcdFile, out_image_V_we0, "(port)out_image_V_we0");
    sc_trace(mVcdFile, out_image_V_d0, "(port)out_image_V_d0");
    sc_trace(mVcdFile, out_image_V_address1, "(port)out_image_V_address1");
    sc_trace(mVcdFile, out_image_V_ce1, "(port)out_image_V_ce1");
    sc_trace(mVcdFile, out_image_V_we1, "(port)out_image_V_we1");
    sc_trace(mVcdFile, out_image_V_d1, "(port)out_image_V_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_3_fu_156_p2, "i_3_fu_156_p2");
    sc_trace(mVcdFile, i_3_reg_291, "i_3_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_31_fu_167_p3, "tmp_31_fu_167_p3");
    sc_trace(mVcdFile, tmp_31_reg_296, "tmp_31_reg_296");
    sc_trace(mVcdFile, tmp_fu_150_p2, "tmp_fu_150_p2");
    sc_trace(mVcdFile, i_4_fu_215_p2, "i_4_fu_215_p2");
    sc_trace(mVcdFile, i_4_reg_304, "i_4_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_38_fu_245_p2, "tmp_38_fu_245_p2");
    sc_trace(mVcdFile, tmp_38_reg_310, "tmp_38_reg_310");
    sc_trace(mVcdFile, tmp_24_fu_209_p2, "tmp_24_fu_209_p2");
    sc_trace(mVcdFile, j_4_fu_257_p2, "j_4_fu_257_p2");
    sc_trace(mVcdFile, j_4_reg_318, "j_4_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_26_fu_251_p2, "tmp_26_fu_251_p2");
    sc_trace(mVcdFile, in_image_V_load_reg_329, "in_image_V_load_reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_reg_116, "i_reg_116");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_reg_128, "i_1_reg_128");
    sc_trace(mVcdFile, j_reg_139, "j_reg_139");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_s_fu_162_p1, "tmp_s_fu_162_p1");
    sc_trace(mVcdFile, tmp_32_fu_175_p1, "tmp_32_fu_175_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_190_p1, "tmp_35_cast_fu_190_p1");
    sc_trace(mVcdFile, tmp_35_fu_200_p3, "tmp_35_fu_200_p3");
    sc_trace(mVcdFile, tmp_43_cast_fu_272_p1, "tmp_43_cast_fu_272_p1");
    sc_trace(mVcdFile, tmp_40_fu_283_p1, "tmp_40_fu_283_p1");
    sc_trace(mVcdFile, tmp_33_fu_180_p2, "tmp_33_fu_180_p2");
    sc_trace(mVcdFile, tmp_35_cast1_fu_186_p1, "tmp_35_cast1_fu_186_p1");
    sc_trace(mVcdFile, tmp_34_fu_195_p2, "tmp_34_fu_195_p2");
    sc_trace(mVcdFile, tmp_36_fu_221_p3, "tmp_36_fu_221_p3");
    sc_trace(mVcdFile, tmp_37_fu_233_p3, "tmp_37_fu_233_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_229_p1, "p_shl_cast_fu_229_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_241_p1, "p_shl1_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_263_p1, "tmp_27_cast_fu_263_p1");
    sc_trace(mVcdFile, tmp_41_fu_267_p2, "tmp_41_fu_267_p2");
    sc_trace(mVcdFile, tmp_39_fu_277_p3, "tmp_39_fu_277_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pad_for_conv2::~pad_for_conv2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pad_for_conv2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(tmp_fu_150_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_128 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(tmp_26_fu_251_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_1_reg_128 = i_4_reg_304.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_116 = i_3_reg_291.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_116 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_139 = j_4_reg_318.read();
    } else if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_reg_139 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_291 = i_3_fu_156_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_4_reg_304 = i_4_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_image_V_load_reg_329 = in_image_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_4_reg_318 = j_4_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_150_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_31_reg_296 = tmp_31_fu_167_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_38_reg_310 = tmp_38_fu_245_p2.read();
    }
}

void pad_for_conv2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pad_for_conv2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pad_for_conv2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pad_for_conv2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pad_for_conv2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pad_for_conv2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pad_for_conv2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pad_for_conv2::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pad_for_conv2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void pad_for_conv2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_i_3_fu_156_p2() {
    i_3_fu_156_p2 = (!i_reg_116.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_116.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pad_for_conv2::thread_i_4_fu_215_p2() {
    i_4_fu_215_p2 = (!i_1_reg_128.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_128.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pad_for_conv2::thread_in_image_V_address0() {
    in_image_V_address0 =  (sc_lv<8>) (tmp_43_cast_fu_272_p1.read());
}

void pad_for_conv2::thread_in_image_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_image_V_ce0 = ap_const_logic_1;
    } else {
        in_image_V_ce0 = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_j_4_fu_257_p2() {
    j_4_fu_257_p2 = (!j_reg_139.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_139.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pad_for_conv2::thread_out_image_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_image_V_address0 =  (sc_lv<8>) (tmp_40_fu_283_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_image_V_address0 =  (sc_lv<8>) (tmp_35_cast_fu_190_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_image_V_address0 =  (sc_lv<8>) (tmp_s_fu_162_p1.read());
    } else {
        out_image_V_address0 = "XXXXXXXX";
    }
}

void pad_for_conv2::thread_out_image_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_image_V_address1 =  (sc_lv<8>) (tmp_35_fu_200_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_image_V_address1 =  (sc_lv<8>) (tmp_32_fu_175_p1.read());
    } else {
        out_image_V_address1 = "XXXXXXXX";
    }
}

void pad_for_conv2::thread_out_image_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        out_image_V_ce0 = ap_const_logic_1;
    } else {
        out_image_V_ce0 = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_out_image_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        out_image_V_ce1 = ap_const_logic_1;
    } else {
        out_image_V_ce1 = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_out_image_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_image_V_d0 = in_image_V_load_reg_329.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        out_image_V_d0 = ap_const_lv25_0;
    } else {
        out_image_V_d0 =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pad_for_conv2::thread_out_image_V_d1() {
    out_image_V_d1 = ap_const_lv25_0;
}

void pad_for_conv2::thread_out_image_V_we0() {
    if (((esl_seteq<1,1,1>(tmp_fu_150_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        out_image_V_we0 = ap_const_logic_1;
    } else {
        out_image_V_we0 = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_out_image_V_we1() {
    if (((esl_seteq<1,1,1>(tmp_fu_150_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        out_image_V_we1 = ap_const_logic_1;
    } else {
        out_image_V_we1 = ap_const_logic_0;
    }
}

void pad_for_conv2::thread_p_shl1_cast_fu_241_p1() {
    p_shl1_cast_fu_241_p1 = esl_zext<9,5>(tmp_37_fu_233_p3.read());
}

void pad_for_conv2::thread_p_shl_cast_fu_229_p1() {
    p_shl_cast_fu_229_p1 = esl_zext<9,8>(tmp_36_fu_221_p3.read());
}

void pad_for_conv2::thread_tmp_24_fu_209_p2() {
    tmp_24_fu_209_p2 = (!i_1_reg_128.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_128.read() == ap_const_lv4_E);
}

void pad_for_conv2::thread_tmp_26_fu_251_p2() {
    tmp_26_fu_251_p2 = (!j_reg_139.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_139.read() == ap_const_lv4_E);
}

void pad_for_conv2::thread_tmp_27_cast_fu_263_p1() {
    tmp_27_cast_fu_263_p1 = esl_zext<9,4>(j_reg_139.read());
}

void pad_for_conv2::thread_tmp_31_fu_167_p3() {
    tmp_31_fu_167_p3 = esl_concat<5,4>(i_reg_116.read(), ap_const_lv4_0);
}

void pad_for_conv2::thread_tmp_32_fu_175_p1() {
    tmp_32_fu_175_p1 = esl_zext<64,9>(tmp_31_fu_167_p3.read());
}

void pad_for_conv2::thread_tmp_33_fu_180_p2() {
    tmp_33_fu_180_p2 = (i_reg_116.read() ^ ap_const_lv5_10);
}

void pad_for_conv2::thread_tmp_34_fu_195_p2() {
    tmp_34_fu_195_p2 = (tmp_31_reg_296.read() | ap_const_lv9_F);
}

void pad_for_conv2::thread_tmp_35_cast1_fu_186_p1() {
    tmp_35_cast1_fu_186_p1 = esl_sext<8,5>(tmp_33_fu_180_p2.read());
}

void pad_for_conv2::thread_tmp_35_cast_fu_190_p1() {
    tmp_35_cast_fu_190_p1 = esl_zext<64,8>(tmp_35_cast1_fu_186_p1.read());
}

void pad_for_conv2::thread_tmp_35_fu_200_p3() {
    tmp_35_fu_200_p3 = esl_concat<55,9>(ap_const_lv55_0, tmp_34_fu_195_p2.read());
}

void pad_for_conv2::thread_tmp_36_fu_221_p3() {
    tmp_36_fu_221_p3 = esl_concat<4,4>(i_1_reg_128.read(), ap_const_lv4_0);
}

void pad_for_conv2::thread_tmp_37_fu_233_p3() {
    tmp_37_fu_233_p3 = esl_concat<4,1>(i_1_reg_128.read(), ap_const_lv1_0);
}

void pad_for_conv2::thread_tmp_38_fu_245_p2() {
    tmp_38_fu_245_p2 = (!p_shl_cast_fu_229_p1.read().is_01() || !p_shl1_cast_fu_241_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_229_p1.read()) - sc_biguint<9>(p_shl1_cast_fu_241_p1.read()));
}

void pad_for_conv2::thread_tmp_39_fu_277_p3() {
    tmp_39_fu_277_p3 = esl_concat<4,4>(i_4_reg_304.read(), j_4_reg_318.read());
}

void pad_for_conv2::thread_tmp_40_fu_283_p1() {
    tmp_40_fu_283_p1 = esl_zext<64,8>(tmp_39_fu_277_p3.read());
}

void pad_for_conv2::thread_tmp_41_fu_267_p2() {
    tmp_41_fu_267_p2 = (!tmp_38_reg_310.read().is_01() || !tmp_27_cast_fu_263_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_38_reg_310.read()) + sc_biguint<9>(tmp_27_cast_fu_263_p1.read()));
}

void pad_for_conv2::thread_tmp_43_cast_fu_272_p1() {
    tmp_43_cast_fu_272_p1 = esl_sext<64,9>(tmp_41_fu_267_p2.read());
}

void pad_for_conv2::thread_tmp_fu_150_p2() {
    tmp_fu_150_p2 = (!i_reg_116.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_116.read() == ap_const_lv5_10);
}

void pad_for_conv2::thread_tmp_s_fu_162_p1() {
    tmp_s_fu_162_p1 = esl_zext<64,5>(i_reg_116.read());
}

void pad_for_conv2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_150_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(tmp_24_fu_209_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_26_fu_251_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

