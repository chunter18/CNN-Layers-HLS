// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1chan_HH_
#define _max_pool_1chan_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_1chan : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > in_image_V_address0;
    sc_out< sc_logic > in_image_V_ce0;
    sc_in< sc_lv<48> > in_image_V_q0;
    sc_out< sc_lv<10> > in_image_V_address1;
    sc_out< sc_logic > in_image_V_ce1;
    sc_in< sc_lv<48> > in_image_V_q1;
    sc_out< sc_lv<8> > out_image_V_address0;
    sc_out< sc_logic > out_image_V_ce0;
    sc_out< sc_logic > out_image_V_we0;
    sc_out< sc_lv<25> > out_image_V_d0;


    // Module declarations
    max_pool_1chan(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1chan);

    ~max_pool_1chan();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<25> > grp_fu_143_p4;
    sc_signal< sc_lv<25> > reg_163;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<25> > reg_167;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > tmp_44_fu_211_p2;
    sc_signal< sc_lv<11> > tmp_44_reg_497;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_181_p2;
    sc_signal< sc_lv<11> > tmp_47_fu_247_p2;
    sc_signal< sc_lv<11> > tmp_47_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_29_fu_253_p2;
    sc_signal< sc_lv<11> > tmp_49_fu_273_p2;
    sc_signal< sc_lv<11> > tmp_49_reg_517;
    sc_signal< sc_lv<11> > tmp_51_fu_298_p2;
    sc_signal< sc_lv<11> > tmp_51_reg_527;
    sc_signal< sc_lv<5> > j_5_fu_303_p2;
    sc_signal< sc_lv<5> > j_5_reg_532;
    sc_signal< sc_lv<5> > i_5_fu_309_p2;
    sc_signal< sc_lv<1> > tmp_34_fu_327_p2;
    sc_signal< sc_lv<1> > tmp_34_reg_547;
    sc_signal< sc_lv<25> > max_V_8_fu_337_p3;
    sc_signal< sc_lv<25> > max_V_8_reg_557;
    sc_signal< sc_lv<1> > tmp_36_fu_352_p2;
    sc_signal< sc_lv<1> > tmp_36_reg_562;
    sc_signal< sc_lv<25> > max_V_9_fu_358_p3;
    sc_signal< sc_lv<25> > max_V_9_reg_567;
    sc_signal< sc_lv<1> > tmp_38_fu_372_p2;
    sc_signal< sc_lv<1> > tmp_38_reg_572;
    sc_signal< sc_lv<5> > i_reg_120;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<5> > j_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_55_cast_fu_268_p1;
    sc_signal< sc_lv<64> > tmp_57_cast_fu_293_p1;
    sc_signal< sc_lv<64> > tmp_56_cast_fu_315_p1;
    sc_signal< sc_lv<64> > tmp_58_cast_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_63_cast_fu_431_p1;
    sc_signal< sc_lv<32> > y_fu_58;
    sc_signal< sc_lv<32> > p_s_fu_462_p3;
    sc_signal< sc_lv<32> > x_fu_62;
    sc_signal< sc_lv<32> > p_x_1_fu_454_p3;
    sc_signal< sc_lv<10> > tmp_42_fu_187_p3;
    sc_signal< sc_lv<7> > tmp_43_fu_199_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_195_p1;
    sc_signal< sc_lv<11> > p_shl3_cast_fu_207_p1;
    sc_signal< sc_lv<5> > tmp_28_fu_217_p2;
    sc_signal< sc_lv<10> > tmp_45_fu_223_p3;
    sc_signal< sc_lv<7> > tmp_46_fu_235_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_231_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_243_p1;
    sc_signal< sc_lv<11> > tmp_30_cast_fu_259_p1;
    sc_signal< sc_lv<11> > tmp_48_fu_263_p2;
    sc_signal< sc_lv<5> > tmp_31_fu_278_p2;
    sc_signal< sc_lv<11> > tmp_32_cast_fu_284_p1;
    sc_signal< sc_lv<11> > tmp_50_fu_288_p2;
    sc_signal< sc_lv<48> > tmp_33_fu_319_p3;
    sc_signal< sc_lv<48> > tmp_35_fu_344_p3;
    sc_signal< sc_lv<48> > tmp_37_fu_364_p3;
    sc_signal< sc_lv<5> > tmp_2_fu_395_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_407_p1;
    sc_signal< sc_lv<9> > p_shl4_cast_fu_399_p3;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_411_p3;
    sc_signal< sc_lv<9> > tmp_1_fu_391_p1;
    sc_signal< sc_lv<9> > tmp_52_fu_419_p2;
    sc_signal< sc_lv<9> > tmp_53_fu_425_p2;
    sc_signal< sc_lv<32> > y_1_fu_436_p2;
    sc_signal< sc_lv<1> > tmp_40_fu_442_p2;
    sc_signal< sc_lv<32> > x_1_fu_448_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_143_p4();
    void thread_i_5_fu_309_p2();
    void thread_in_image_V_address0();
    void thread_in_image_V_address1();
    void thread_in_image_V_ce0();
    void thread_in_image_V_ce1();
    void thread_j_5_fu_303_p2();
    void thread_max_V_8_fu_337_p3();
    void thread_max_V_9_fu_358_p3();
    void thread_out_image_V_address0();
    void thread_out_image_V_ce0();
    void thread_out_image_V_d0();
    void thread_out_image_V_we0();
    void thread_p_s_fu_462_p3();
    void thread_p_shl1_cast_fu_243_p1();
    void thread_p_shl2_cast_fu_195_p1();
    void thread_p_shl3_cast_fu_207_p1();
    void thread_p_shl4_cast_fu_399_p3();
    void thread_p_shl5_cast_fu_411_p3();
    void thread_p_shl_cast_fu_231_p1();
    void thread_p_x_1_fu_454_p3();
    void thread_tmp_1_fu_391_p1();
    void thread_tmp_28_fu_217_p2();
    void thread_tmp_29_fu_253_p2();
    void thread_tmp_2_fu_395_p1();
    void thread_tmp_30_cast_fu_259_p1();
    void thread_tmp_31_fu_278_p2();
    void thread_tmp_32_cast_fu_284_p1();
    void thread_tmp_33_fu_319_p3();
    void thread_tmp_34_fu_327_p2();
    void thread_tmp_35_fu_344_p3();
    void thread_tmp_36_fu_352_p2();
    void thread_tmp_37_fu_364_p3();
    void thread_tmp_38_fu_372_p2();
    void thread_tmp_3_fu_407_p1();
    void thread_tmp_40_fu_442_p2();
    void thread_tmp_42_fu_187_p3();
    void thread_tmp_43_fu_199_p3();
    void thread_tmp_44_fu_211_p2();
    void thread_tmp_45_fu_223_p3();
    void thread_tmp_46_fu_235_p3();
    void thread_tmp_47_fu_247_p2();
    void thread_tmp_48_fu_263_p2();
    void thread_tmp_49_fu_273_p2();
    void thread_tmp_50_fu_288_p2();
    void thread_tmp_51_fu_298_p2();
    void thread_tmp_52_fu_419_p2();
    void thread_tmp_53_fu_425_p2();
    void thread_tmp_55_cast_fu_268_p1();
    void thread_tmp_56_cast_fu_315_p1();
    void thread_tmp_57_cast_fu_293_p1();
    void thread_tmp_58_cast_fu_333_p1();
    void thread_tmp_63_cast_fu_431_p1();
    void thread_tmp_fu_181_p2();
    void thread_x_1_fu_448_p2();
    void thread_y_1_fu_436_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
