// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _batch_norm_HH_
#define _batch_norm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CNN_mac_muladd_25dEe.h"

namespace ap_rtl {

struct batch_norm : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > in_image_V_address0;
    sc_out< sc_logic > in_image_V_ce0;
    sc_in< sc_lv<25> > in_image_V_q0;
    sc_in< sc_lv<18> > A_V_dout;
    sc_in< sc_logic > A_V_empty_n;
    sc_out< sc_logic > A_V_read;
    sc_in< sc_lv<18> > B_V_dout;
    sc_in< sc_logic > B_V_empty_n;
    sc_out< sc_logic > B_V_read;
    sc_out< sc_lv<10> > out_image_V_address0;
    sc_out< sc_logic > out_image_V_ce0;
    sc_out< sc_logic > out_image_V_we0;
    sc_out< sc_lv<48> > out_image_V_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    batch_norm(sc_module_name name);
    SC_HAS_PROCESS(batch_norm);

    ~batch_norm();

    sc_trace_file* mVcdFile;

    CNN_mac_muladd_25dEe<1,2,25,18,34,37>* CNN_mac_muladd_25dEe_U22;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > A_V_blk_n;
    sc_signal< sc_logic > B_V_blk_n;
    sc_signal< sc_lv<37> > OP2_V_i_fu_118_p1;
    sc_signal< sc_lv<37> > OP2_V_i_reg_219;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<37> > tmp_94_cast_i_fu_130_p1;
    sc_signal< sc_lv<37> > tmp_94_cast_i_reg_224;
    sc_signal< sc_lv<5> > j_fu_140_p2;
    sc_signal< sc_lv<5> > j_reg_232;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp_80_fu_170_p2;
    sc_signal< sc_lv<11> > tmp_80_reg_237;
    sc_signal< sc_lv<1> > tmp_i_fu_134_p2;
    sc_signal< sc_lv<5> > k_fu_182_p2;
    sc_signal< sc_lv<5> > k_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_99_cast_fu_197_p1;
    sc_signal< sc_lv<64> > tmp_99_cast_reg_250;
    sc_signal< sc_lv<1> > tmp_91_i_fu_176_p2;
    sc_signal< sc_lv<25> > in_image_V_load_reg_260;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<37> > grp_fu_213_p3;
    sc_signal< sc_lv<37> > p_Val2_i_54_reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > j_i_reg_96;
    sc_signal< sc_lv<5> > k_i_reg_107;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<34> > tmp_94_i_fu_122_p3;
    sc_signal< sc_lv<10> > tmp_fu_146_p3;
    sc_signal< sc_lv<7> > tmp_s_fu_158_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_154_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_166_p1;
    sc_signal< sc_lv<11> > tmp_92_i_cast_fu_188_p1;
    sc_signal< sc_lv<11> > tmp_81_fu_192_p2;
    sc_signal< sc_lv<18> > grp_fu_213_p1;
    sc_signal< sc_lv<34> > grp_fu_213_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_V_blk_n();
    void thread_A_V_read();
    void thread_B_V_blk_n();
    void thread_B_V_read();
    void thread_OP2_V_i_fu_118_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_213_p1();
    void thread_grp_fu_213_p2();
    void thread_in_image_V_address0();
    void thread_in_image_V_ce0();
    void thread_j_fu_140_p2();
    void thread_k_fu_182_p2();
    void thread_out_image_V_address0();
    void thread_out_image_V_ce0();
    void thread_out_image_V_d0();
    void thread_out_image_V_we0();
    void thread_p_shl1_cast_fu_166_p1();
    void thread_p_shl_cast_fu_154_p1();
    void thread_tmp_80_fu_170_p2();
    void thread_tmp_81_fu_192_p2();
    void thread_tmp_91_i_fu_176_p2();
    void thread_tmp_92_i_cast_fu_188_p1();
    void thread_tmp_94_cast_i_fu_130_p1();
    void thread_tmp_94_i_fu_122_p3();
    void thread_tmp_99_cast_fu_197_p1();
    void thread_tmp_fu_146_p3();
    void thread_tmp_i_fu_134_p2();
    void thread_tmp_s_fu_158_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
