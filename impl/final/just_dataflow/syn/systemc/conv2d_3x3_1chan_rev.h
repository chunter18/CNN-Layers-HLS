// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_3x3_1chan_rev_HH_
#define _conv2d_3x3_1chan_rev_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CNN_mul_mul_18s_1cud.h"

namespace ap_rtl {

struct conv2d_3x3_1chan_rev : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > in_image_V_address0;
    sc_out< sc_logic > in_image_V_ce0;
    sc_in< sc_lv<18> > in_image_V_q0;
    sc_out< sc_lv<4> > kernel_V_address0;
    sc_out< sc_logic > kernel_V_ce0;
    sc_in< sc_lv<18> > kernel_V_q0;
    sc_in< sc_lv<48> > bias_V_dout;
    sc_in< sc_logic > bias_V_empty_n;
    sc_out< sc_logic > bias_V_read;
    sc_out< sc_lv<10> > out_image_V_address0;
    sc_out< sc_logic > out_image_V_ce0;
    sc_out< sc_logic > out_image_V_we0;
    sc_out< sc_lv<25> > out_image_V_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    conv2d_3x3_1chan_rev(sc_module_name name);
    SC_HAS_PROCESS(conv2d_3x3_1chan_rev);

    ~conv2d_3x3_1chan_rev();

    sc_trace_file* mVcdFile;

    CNN_mul_mul_18s_1cud<1,2,18,18,36>* CNN_mul_mul_18s_1cud_U16;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > bias_V_blk_n;
    sc_signal< sc_lv<56> > tmp_86_cast_i_fu_180_p1;
    sc_signal< sc_lv<56> > tmp_86_cast_i_reg_450;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > i_fu_200_p2;
    sc_signal< sc_lv<10> > i_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > tmp_i_cast_fu_206_p1;
    sc_signal< sc_lv<13> > tmp_i_cast_reg_463;
    sc_signal< sc_lv<1> > tmp_i_fu_194_p2;
    sc_signal< sc_lv<4> > j_fu_216_p2;
    sc_signal< sc_lv<4> > j_reg_471;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_75_i_fu_222_p2;
    sc_signal< sc_lv<1> > tmp_75_i_reg_476;
    sc_signal< sc_lv<1> > tmp_74_i_fu_210_p2;
    sc_signal< sc_lv<13> > next_mul_fu_233_p2;
    sc_signal< sc_lv<13> > next_mul_reg_481;
    sc_signal< sc_lv<1> > tmp_81_i_fu_249_p2;
    sc_signal< sc_lv<1> > tmp_81_i_reg_496;
    sc_signal< sc_lv<18> > kernel_V_load_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<18> > in_image_V_load_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<36> > grp_fu_424_p2;
    sc_signal< sc_lv<36> > p_Val2_s_reg_520;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<25> > acc_V_fu_292_p4;
    sc_signal< sc_lv<25> > acc_V_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<25> > tmp_88_i_reg_530;
    sc_signal< sc_lv<10> > i_i_reg_147;
    sc_signal< sc_lv<4> > j_i_reg_158;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<13> > phi_mul_reg_169;
    sc_signal< sc_lv<64> > tmp_90_cast_fu_244_p1;
    sc_signal< sc_lv<64> > tmp_76_i_fu_228_p1;
    sc_signal< sc_lv<64> > tmp_95_cast_fu_371_p1;
    sc_signal< sc_lv<32> > y_i_fu_90;
    sc_signal< sc_lv<32> > p_i_fu_402_p3;
    sc_signal< sc_lv<32> > x_i_fu_94;
    sc_signal< sc_lv<32> > p_x_1_i_fu_394_p3;
    sc_signal< sc_lv<25> > p_Val2_16_fu_98;
    sc_signal< sc_lv<13> > tmp_s_fu_239_p2;
    sc_signal< sc_lv<25> > tmp_77_fu_264_p3;
    sc_signal< sc_lv<35> > tmp_78_i_fu_271_p3;
    sc_signal< sc_lv<37> > tmp_78_cast5_i_fu_279_p1;
    sc_signal< sc_lv<37> > tmp_79_i_fu_283_p1;
    sc_signal< sc_lv<37> > p_Val2_17_fu_286_p2;
    sc_signal< sc_lv<56> > tmp_85_i_fu_302_p3;
    sc_signal< sc_lv<56> > p_Val2_20_fu_310_p2;
    sc_signal< sc_lv<6> > tmp_7_fu_335_p1;
    sc_signal< sc_lv<9> > tmp_8_fu_347_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_339_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_351_p3;
    sc_signal< sc_lv<11> > tmp_fu_331_p1;
    sc_signal< sc_lv<11> > tmp_78_fu_359_p2;
    sc_signal< sc_lv<11> > tmp_79_fu_365_p2;
    sc_signal< sc_lv<32> > y_fu_376_p2;
    sc_signal< sc_lv<1> > tmp_89_i_fu_382_p2;
    sc_signal< sc_lv<32> > x_fu_388_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<13> ap_const_lv13_310;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1C;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_acc_V_fu_292_p4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_V_blk_n();
    void thread_bias_V_read();
    void thread_i_fu_200_p2();
    void thread_in_image_V_address0();
    void thread_in_image_V_ce0();
    void thread_j_fu_216_p2();
    void thread_kernel_V_address0();
    void thread_kernel_V_ce0();
    void thread_next_mul_fu_233_p2();
    void thread_out_image_V_address0();
    void thread_out_image_V_ce0();
    void thread_out_image_V_d0();
    void thread_out_image_V_we0();
    void thread_p_Val2_17_fu_286_p2();
    void thread_p_Val2_20_fu_310_p2();
    void thread_p_i_fu_402_p3();
    void thread_p_shl1_cast_fu_351_p3();
    void thread_p_shl_cast_fu_339_p3();
    void thread_p_x_1_i_fu_394_p3();
    void thread_tmp_74_i_fu_210_p2();
    void thread_tmp_75_i_fu_222_p2();
    void thread_tmp_76_i_fu_228_p1();
    void thread_tmp_77_fu_264_p3();
    void thread_tmp_78_cast5_i_fu_279_p1();
    void thread_tmp_78_fu_359_p2();
    void thread_tmp_78_i_fu_271_p3();
    void thread_tmp_79_fu_365_p2();
    void thread_tmp_79_i_fu_283_p1();
    void thread_tmp_7_fu_335_p1();
    void thread_tmp_81_i_fu_249_p2();
    void thread_tmp_85_i_fu_302_p3();
    void thread_tmp_86_cast_i_fu_180_p1();
    void thread_tmp_89_i_fu_382_p2();
    void thread_tmp_8_fu_347_p1();
    void thread_tmp_90_cast_fu_244_p1();
    void thread_tmp_95_cast_fu_371_p1();
    void thread_tmp_fu_331_p1();
    void thread_tmp_i_cast_fu_206_p1();
    void thread_tmp_i_fu_194_p2();
    void thread_tmp_s_fu_239_p2();
    void thread_x_fu_388_p2();
    void thread_y_fu_376_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
