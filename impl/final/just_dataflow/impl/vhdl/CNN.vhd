-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CNN is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_V_ce0 : OUT STD_LOGIC;
    in_image_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    in_image_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_V_we0 : OUT STD_LOGIC;
    in_image_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_V_ce1 : OUT STD_LOGIC;
    in_image_V_d1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    in_image_V_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    in_image_V_we1 : OUT STD_LOGIC;
    means_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    means_V_ce0 : OUT STD_LOGIC;
    means_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    means_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    means_V_we0 : OUT STD_LOGIC;
    means_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    means_V_ce1 : OUT STD_LOGIC;
    means_V_d1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    means_V_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    means_V_we1 : OUT STD_LOGIC;
    conv_kernel_L1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    conv_kernel_L1_V_ce0 : OUT STD_LOGIC;
    conv_kernel_L1_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L1_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L1_V_we0 : OUT STD_LOGIC;
    conv_kernel_L1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    conv_kernel_L1_V_ce1 : OUT STD_LOGIC;
    conv_kernel_L1_V_d1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L1_V_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L1_V_we1 : OUT STD_LOGIC;
    conv_bias_L1_V : IN STD_LOGIC_VECTOR (47 downto 0);
    a_V : IN STD_LOGIC_VECTOR (17 downto 0);
    b_V : IN STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L2_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv_kernel_L2_V_ce0 : OUT STD_LOGIC;
    conv_kernel_L2_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L2_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L2_V_we0 : OUT STD_LOGIC;
    conv_kernel_L2_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv_kernel_L2_V_ce1 : OUT STD_LOGIC;
    conv_kernel_L2_V_d1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L2_V_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    conv_kernel_L2_V_we1 : OUT STD_LOGIC;
    conv_bias_L2_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    conv_bias_L2_V_ce0 : OUT STD_LOGIC;
    conv_bias_L2_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    conv_bias_L2_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    conv_bias_L2_V_we0 : OUT STD_LOGIC;
    conv_bias_L2_V_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    conv_bias_L2_V_ce1 : OUT STD_LOGIC;
    conv_bias_L2_V_d1 : OUT STD_LOGIC_VECTOR (47 downto 0);
    conv_bias_L2_V_q1 : IN STD_LOGIC_VECTOR (47 downto 0);
    conv_bias_L2_V_we1 : OUT STD_LOGIC;
    result_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    result_V_ce0 : OUT STD_LOGIC;
    result_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    result_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    result_V_we0 : OUT STD_LOGIC;
    result_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    result_V_ce1 : OUT STD_LOGIC;
    result_V_d1 : OUT STD_LOGIC_VECTOR (47 downto 0);
    result_V_q1 : IN STD_LOGIC_VECTOR (47 downto 0);
    result_V_we1 : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of CNN is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "CNN,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg676-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.950000,HLS_SYN_LAT=164849,HLS_SYN_TPT=66570,HLS_SYN_MEM=25,HLS_SYN_DSP=5,HLS_SYN_FF=2061,HLS_SYN_LUT=3809,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv25_1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";

    signal mean_removed_V_i_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mean_removed_V_t_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal padded_V_i_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal padded_V_t_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal resampled_V_i_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal resampled_V_t_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal conv_V_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal conv_V_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal batchnorm_V_i_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal batchnorm_V_t_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ReLU_V_i_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ReLU_V_i_q1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ReLU_V_t_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ReLU_V_t_q1 : STD_LOGIC_VECTOR (47 downto 0);
    signal maxpool_V_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal maxpool_V_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal padded_L2_V_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal padded_L2_V_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal resampled_L2_V_i_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal resampled_L2_V_t_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal zero_mean_1chan50_U0_ap_start : STD_LOGIC;
    signal zero_mean_1chan50_U0_ap_done : STD_LOGIC;
    signal zero_mean_1chan50_U0_ap_continue : STD_LOGIC;
    signal zero_mean_1chan50_U0_ap_idle : STD_LOGIC;
    signal zero_mean_1chan50_U0_ap_ready : STD_LOGIC;
    signal zero_mean_1chan50_U0_in_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zero_mean_1chan50_U0_in_image_V_ce0 : STD_LOGIC;
    signal zero_mean_1chan50_U0_out_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zero_mean_1chan50_U0_out_image_V_ce0 : STD_LOGIC;
    signal zero_mean_1chan50_U0_out_image_V_we0 : STD_LOGIC;
    signal zero_mean_1chan50_U0_out_image_V_d0 : STD_LOGIC_VECTOR (17 downto 0);
    signal zero_mean_1chan50_U0_means_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zero_mean_1chan50_U0_means_V_ce0 : STD_LOGIC;
    signal zero_mean_1chan50_U0_conv_bias_L1_V_out_din : STD_LOGIC_VECTOR (47 downto 0);
    signal zero_mean_1chan50_U0_conv_bias_L1_V_out_write : STD_LOGIC;
    signal zero_mean_1chan50_U0_a_V_out_din : STD_LOGIC_VECTOR (17 downto 0);
    signal zero_mean_1chan50_U0_a_V_out_write : STD_LOGIC;
    signal zero_mean_1chan50_U0_b_V_out_din : STD_LOGIC_VECTOR (17 downto 0);
    signal zero_mean_1chan50_U0_b_V_out_write : STD_LOGIC;
    signal ap_channel_done_mean_removed_V : STD_LOGIC;
    signal zero_mean_1chan50_U0_out_image_V_full_n : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_ap_start : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_ap_done : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_ap_continue : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_ap_idle : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_ap_ready : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_in_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal efficient_pad_n_1cha_U0_in_image_V_ce0 : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal efficient_pad_n_1cha_U0_out_image_V_ce0 : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_we0 : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_d0 : STD_LOGIC_VECTOR (17 downto 0);
    signal efficient_pad_n_1cha_U0_out_image_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal efficient_pad_n_1cha_U0_out_image_V_ce1 : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_we1 : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_d1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_channel_done_padded_V : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_out_image_V_full_n : STD_LOGIC;
    signal resample_U0_ap_start : STD_LOGIC;
    signal resample_U0_ap_done : STD_LOGIC;
    signal resample_U0_ap_continue : STD_LOGIC;
    signal resample_U0_ap_idle : STD_LOGIC;
    signal resample_U0_ap_ready : STD_LOGIC;
    signal resample_U0_square_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal resample_U0_square_image_V_ce0 : STD_LOGIC;
    signal resample_U0_resampled_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal resample_U0_resampled_V_ce0 : STD_LOGIC;
    signal resample_U0_resampled_V_we0 : STD_LOGIC;
    signal resample_U0_resampled_V_d0 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_channel_done_resampled_V : STD_LOGIC;
    signal resample_U0_resampled_V_full_n : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_start : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_done : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_continue : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_idle : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_ready : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_in_image_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv2d_3x3_1chan_rev_U0_in_image_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_kernel_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv2d_3x3_1chan_rev_U0_kernel_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_bias_V_read : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_out_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2d_3x3_1chan_rev_U0_out_image_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_out_image_V_we0 : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_out_image_V_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_channel_done_conv_V : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_out_image_V_full_n : STD_LOGIC;
    signal batch_norm_U0_ap_start : STD_LOGIC;
    signal batch_norm_U0_ap_done : STD_LOGIC;
    signal batch_norm_U0_ap_continue : STD_LOGIC;
    signal batch_norm_U0_ap_idle : STD_LOGIC;
    signal batch_norm_U0_ap_ready : STD_LOGIC;
    signal batch_norm_U0_in_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal batch_norm_U0_in_image_V_ce0 : STD_LOGIC;
    signal batch_norm_U0_A_V_read : STD_LOGIC;
    signal batch_norm_U0_B_V_read : STD_LOGIC;
    signal batch_norm_U0_out_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal batch_norm_U0_out_image_V_ce0 : STD_LOGIC;
    signal batch_norm_U0_out_image_V_we0 : STD_LOGIC;
    signal batch_norm_U0_out_image_V_d0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_channel_done_batchnorm_V : STD_LOGIC;
    signal batch_norm_U0_out_image_V_full_n : STD_LOGIC;
    signal relu_U0_ap_start : STD_LOGIC;
    signal relu_U0_ap_done : STD_LOGIC;
    signal relu_U0_ap_continue : STD_LOGIC;
    signal relu_U0_ap_idle : STD_LOGIC;
    signal relu_U0_ap_ready : STD_LOGIC;
    signal relu_U0_in_features_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal relu_U0_in_features_V_ce0 : STD_LOGIC;
    signal relu_U0_activations_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal relu_U0_activations_V_ce0 : STD_LOGIC;
    signal relu_U0_activations_V_we0 : STD_LOGIC;
    signal relu_U0_activations_V_d0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_channel_done_ReLU_V : STD_LOGIC;
    signal relu_U0_activations_V_full_n : STD_LOGIC;
    signal max_pool_1chan_U0_ap_start : STD_LOGIC;
    signal max_pool_1chan_U0_ap_done : STD_LOGIC;
    signal max_pool_1chan_U0_ap_continue : STD_LOGIC;
    signal max_pool_1chan_U0_ap_idle : STD_LOGIC;
    signal max_pool_1chan_U0_ap_ready : STD_LOGIC;
    signal max_pool_1chan_U0_in_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pool_1chan_U0_in_image_V_ce0 : STD_LOGIC;
    signal max_pool_1chan_U0_in_image_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pool_1chan_U0_in_image_V_ce1 : STD_LOGIC;
    signal max_pool_1chan_U0_out_image_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1chan_U0_out_image_V_ce0 : STD_LOGIC;
    signal max_pool_1chan_U0_out_image_V_we0 : STD_LOGIC;
    signal max_pool_1chan_U0_out_image_V_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_channel_done_maxpool_V : STD_LOGIC;
    signal max_pool_1chan_U0_out_image_V_full_n : STD_LOGIC;
    signal pad_for_conv2_U0_ap_start : STD_LOGIC;
    signal pad_for_conv2_U0_ap_done : STD_LOGIC;
    signal pad_for_conv2_U0_ap_continue : STD_LOGIC;
    signal pad_for_conv2_U0_ap_idle : STD_LOGIC;
    signal pad_for_conv2_U0_ap_ready : STD_LOGIC;
    signal pad_for_conv2_U0_in_image_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pad_for_conv2_U0_in_image_V_ce0 : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pad_for_conv2_U0_out_image_V_ce0 : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_we0 : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal pad_for_conv2_U0_out_image_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pad_for_conv2_U0_out_image_V_ce1 : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_we1 : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_d1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_channel_done_padded_L2_V : STD_LOGIC;
    signal pad_for_conv2_U0_out_image_V_full_n : STD_LOGIC;
    signal resample_for_conv2_U0_ap_start : STD_LOGIC;
    signal resample_for_conv2_U0_ap_done : STD_LOGIC;
    signal resample_for_conv2_U0_ap_continue : STD_LOGIC;
    signal resample_for_conv2_U0_ap_idle : STD_LOGIC;
    signal resample_for_conv2_U0_ap_ready : STD_LOGIC;
    signal resample_for_conv2_U0_square_image_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal resample_for_conv2_U0_square_image_V_ce0 : STD_LOGIC;
    signal resample_for_conv2_U0_resampled_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal resample_for_conv2_U0_resampled_V_ce0 : STD_LOGIC;
    signal resample_for_conv2_U0_resampled_V_we0 : STD_LOGIC;
    signal resample_for_conv2_U0_resampled_V_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_channel_done_resampled_L2_V : STD_LOGIC;
    signal resample_for_conv2_U0_resampled_V_full_n : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_start : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_done : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_continue : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_idle : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_ready : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_in_image_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv2d_3x3_4chan_rev_U0_in_image_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_kernel_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv2d_3x3_4chan_rev_U0_kernel_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_bias_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv2d_3x3_4chan_rev_U0_bias_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_out_image_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2d_3x3_4chan_rev_U0_out_image_V_ce0 : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_out_image_V_we0 : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_out_image_V_d0 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal mean_removed_V_i_full_n : STD_LOGIC;
    signal mean_removed_V_t_empty_n : STD_LOGIC;
    signal padded_V_i_full_n : STD_LOGIC;
    signal padded_V_t_empty_n : STD_LOGIC;
    signal resampled_V_i_full_n : STD_LOGIC;
    signal resampled_V_t_empty_n : STD_LOGIC;
    signal conv_V_i_full_n : STD_LOGIC;
    signal conv_V_t_empty_n : STD_LOGIC;
    signal batchnorm_V_i_full_n : STD_LOGIC;
    signal batchnorm_V_t_empty_n : STD_LOGIC;
    signal ReLU_V_i_full_n : STD_LOGIC;
    signal ReLU_V_t_empty_n : STD_LOGIC;
    signal ReLU_V_t_d1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ReLU_V_t_we1 : STD_LOGIC;
    signal maxpool_V_i_full_n : STD_LOGIC;
    signal maxpool_V_t_empty_n : STD_LOGIC;
    signal padded_L2_V_i_full_n : STD_LOGIC;
    signal padded_L2_V_t_empty_n : STD_LOGIC;
    signal resampled_L2_V_i_full_n : STD_LOGIC;
    signal resampled_L2_V_t_empty_n : STD_LOGIC;
    signal conv_bias_L1_V_c_full_n : STD_LOGIC;
    signal conv_bias_L1_V_c_dout : STD_LOGIC_VECTOR (47 downto 0);
    signal conv_bias_L1_V_c_empty_n : STD_LOGIC;
    signal a_V_c_full_n : STD_LOGIC;
    signal a_V_c_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal a_V_c_empty_n : STD_LOGIC;
    signal b_V_c_full_n : STD_LOGIC;
    signal b_V_c_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal b_V_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_zero_mean_1chan50_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_zero_mean_1chan50_U0_ap_ready : STD_LOGIC;
    signal zero_mean_1chan50_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal zero_mean_1chan50_U0_start_full_n : STD_LOGIC;
    signal zero_mean_1chan50_U0_start_write : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_start_full_n : STD_LOGIC;
    signal efficient_pad_n_1cha_U0_start_write : STD_LOGIC;
    signal resample_U0_start_full_n : STD_LOGIC;
    signal resample_U0_start_write : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_start_full_n : STD_LOGIC;
    signal conv2d_3x3_1chan_rev_U0_start_write : STD_LOGIC;
    signal batch_norm_U0_start_full_n : STD_LOGIC;
    signal batch_norm_U0_start_write : STD_LOGIC;
    signal relu_U0_start_full_n : STD_LOGIC;
    signal relu_U0_start_write : STD_LOGIC;
    signal max_pool_1chan_U0_start_full_n : STD_LOGIC;
    signal max_pool_1chan_U0_start_write : STD_LOGIC;
    signal pad_for_conv2_U0_start_full_n : STD_LOGIC;
    signal pad_for_conv2_U0_start_write : STD_LOGIC;
    signal resample_for_conv2_U0_start_full_n : STD_LOGIC;
    signal resample_for_conv2_U0_start_write : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_start_full_n : STD_LOGIC;
    signal conv2d_3x3_4chan_rev_U0_start_write : STD_LOGIC;

    component zero_mean_1chan50 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        means_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        means_V_ce0 : OUT STD_LOGIC;
        means_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        conv_bias_L1_V : IN STD_LOGIC_VECTOR (47 downto 0);
        a_V : IN STD_LOGIC_VECTOR (17 downto 0);
        b_V : IN STD_LOGIC_VECTOR (17 downto 0);
        conv_bias_L1_V_out_din : OUT STD_LOGIC_VECTOR (47 downto 0);
        conv_bias_L1_V_out_full_n : IN STD_LOGIC;
        conv_bias_L1_V_out_write : OUT STD_LOGIC;
        a_V_out_din : OUT STD_LOGIC_VECTOR (17 downto 0);
        a_V_out_full_n : IN STD_LOGIC;
        a_V_out_write : OUT STD_LOGIC;
        b_V_out_din : OUT STD_LOGIC_VECTOR (17 downto 0);
        b_V_out_full_n : IN STD_LOGIC;
        b_V_out_write : OUT STD_LOGIC );
    end component;


    component efficient_pad_n_1cha IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        out_image_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce1 : OUT STD_LOGIC;
        out_image_V_we1 : OUT STD_LOGIC;
        out_image_V_d1 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component resample IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        square_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        square_image_V_ce0 : OUT STD_LOGIC;
        square_image_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        resampled_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        resampled_V_ce0 : OUT STD_LOGIC;
        resampled_V_we0 : OUT STD_LOGIC;
        resampled_V_d0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component conv2d_3x3_1chan_rev IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        kernel_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_V_ce0 : OUT STD_LOGIC;
        kernel_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        bias_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
        bias_V_empty_n : IN STD_LOGIC;
        bias_V_read : OUT STD_LOGIC;
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component batch_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        A_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
        A_V_empty_n : IN STD_LOGIC;
        A_V_read : OUT STD_LOGIC;
        B_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
        B_V_empty_n : IN STD_LOGIC;
        B_V_read : OUT STD_LOGIC;
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component relu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_features_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_features_V_ce0 : OUT STD_LOGIC;
        in_features_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
        activations_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        activations_V_ce0 : OUT STD_LOGIC;
        activations_V_we0 : OUT STD_LOGIC;
        activations_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component max_pool_1chan IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
        in_image_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_image_V_ce1 : OUT STD_LOGIC;
        in_image_V_q1 : IN STD_LOGIC_VECTOR (47 downto 0);
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component pad_for_conv2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        out_image_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_image_V_ce1 : OUT STD_LOGIC;
        out_image_V_we1 : OUT STD_LOGIC;
        out_image_V_d1 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component resample_for_conv2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        square_image_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        square_image_V_ce0 : OUT STD_LOGIC;
        square_image_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        resampled_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        resampled_V_ce0 : OUT STD_LOGIC;
        resampled_V_we0 : OUT STD_LOGIC;
        resampled_V_d0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component conv2d_3x3_4chan_rev IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_image_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_image_V_ce0 : OUT STD_LOGIC;
        in_image_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        kernel_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        kernel_V_ce0 : OUT STD_LOGIC;
        kernel_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
        bias_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        bias_V_ce0 : OUT STD_LOGIC;
        bias_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
        out_image_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_image_V_ce0 : OUT STD_LOGIC;
        out_image_V_we0 : OUT STD_LOGIC;
        out_image_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component CNN_mean_removed_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_padded_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (17 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (17 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_resampled_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (17 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_conv_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_batchnorm_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (47 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (47 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_ReLU_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (47 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (47 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (47 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (47 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_maxpool_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_padded_L2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component CNN_resampled_L2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w48_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (47 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (47 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w18_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    mean_removed_V_U : component CNN_mean_removed_V
    generic map (
        DataWidth => 18,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => zero_mean_1chan50_U0_out_image_V_address0,
        i_ce0 => zero_mean_1chan50_U0_out_image_V_ce0,
        i_we0 => zero_mean_1chan50_U0_out_image_V_we0,
        i_d0 => zero_mean_1chan50_U0_out_image_V_d0,
        i_q0 => mean_removed_V_i_q0,
        t_address0 => efficient_pad_n_1cha_U0_in_image_V_address0,
        t_ce0 => efficient_pad_n_1cha_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv18_0,
        t_q0 => mean_removed_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => mean_removed_V_i_full_n,
        i_write => zero_mean_1chan50_U0_ap_done,
        t_empty_n => mean_removed_V_t_empty_n,
        t_read => efficient_pad_n_1cha_U0_ap_ready);

    padded_V_U : component CNN_padded_V
    generic map (
        DataWidth => 18,
        AddressRange => 900,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => efficient_pad_n_1cha_U0_out_image_V_address0,
        i_ce0 => efficient_pad_n_1cha_U0_out_image_V_ce0,
        i_we0 => efficient_pad_n_1cha_U0_out_image_V_we0,
        i_d0 => efficient_pad_n_1cha_U0_out_image_V_d0,
        i_q0 => padded_V_i_q0,
        i_address1 => efficient_pad_n_1cha_U0_out_image_V_address1,
        i_ce1 => efficient_pad_n_1cha_U0_out_image_V_ce1,
        i_we1 => efficient_pad_n_1cha_U0_out_image_V_we1,
        i_d1 => efficient_pad_n_1cha_U0_out_image_V_d1,
        t_address0 => resample_U0_square_image_V_address0,
        t_ce0 => resample_U0_square_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv18_0,
        t_q0 => padded_V_t_q0,
        t_address1 => ap_const_lv10_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv18_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => padded_V_i_full_n,
        i_write => efficient_pad_n_1cha_U0_ap_done,
        t_empty_n => padded_V_t_empty_n,
        t_read => resample_U0_ap_ready);

    resampled_V_U : component CNN_resampled_V
    generic map (
        DataWidth => 18,
        AddressRange => 7056,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => resample_U0_resampled_V_address0,
        i_ce0 => resample_U0_resampled_V_ce0,
        i_we0 => resample_U0_resampled_V_we0,
        i_d0 => resample_U0_resampled_V_d0,
        i_q0 => resampled_V_i_q0,
        t_address0 => conv2d_3x3_1chan_rev_U0_in_image_V_address0,
        t_ce0 => conv2d_3x3_1chan_rev_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv18_0,
        t_q0 => resampled_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => resampled_V_i_full_n,
        i_write => resample_U0_ap_done,
        t_empty_n => resampled_V_t_empty_n,
        t_read => conv2d_3x3_1chan_rev_U0_ap_ready);

    conv_V_U : component CNN_conv_V
    generic map (
        DataWidth => 25,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => conv2d_3x3_1chan_rev_U0_out_image_V_address0,
        i_ce0 => conv2d_3x3_1chan_rev_U0_out_image_V_ce0,
        i_we0 => conv2d_3x3_1chan_rev_U0_out_image_V_we0,
        i_d0 => conv2d_3x3_1chan_rev_U0_out_image_V_d0,
        i_q0 => conv_V_i_q0,
        t_address0 => batch_norm_U0_in_image_V_address0,
        t_ce0 => batch_norm_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => conv_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => conv_V_i_full_n,
        i_write => conv2d_3x3_1chan_rev_U0_ap_done,
        t_empty_n => conv_V_t_empty_n,
        t_read => batch_norm_U0_ap_ready);

    batchnorm_V_U : component CNN_batchnorm_V
    generic map (
        DataWidth => 48,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => batch_norm_U0_out_image_V_address0,
        i_ce0 => batch_norm_U0_out_image_V_ce0,
        i_we0 => batch_norm_U0_out_image_V_we0,
        i_d0 => batch_norm_U0_out_image_V_d0,
        i_q0 => batchnorm_V_i_q0,
        t_address0 => relu_U0_in_features_V_address0,
        t_ce0 => relu_U0_in_features_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv48_0,
        t_q0 => batchnorm_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => batchnorm_V_i_full_n,
        i_write => batch_norm_U0_ap_done,
        t_empty_n => batchnorm_V_t_empty_n,
        t_read => relu_U0_ap_ready);

    ReLU_V_U : component CNN_ReLU_V
    generic map (
        DataWidth => 48,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => relu_U0_activations_V_address0,
        i_ce0 => relu_U0_activations_V_ce0,
        i_we0 => relu_U0_activations_V_we0,
        i_d0 => relu_U0_activations_V_d0,
        i_q0 => ReLU_V_i_q0,
        i_address1 => ap_const_lv10_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => ReLU_V_i_q1,
        t_address0 => max_pool_1chan_U0_in_image_V_address0,
        t_ce0 => max_pool_1chan_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv48_0,
        t_q0 => ReLU_V_t_q0,
        t_address1 => max_pool_1chan_U0_in_image_V_address1,
        t_ce1 => max_pool_1chan_U0_in_image_V_ce1,
        t_q1 => ReLU_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => ReLU_V_i_full_n,
        i_write => relu_U0_ap_done,
        t_empty_n => ReLU_V_t_empty_n,
        t_read => max_pool_1chan_U0_ap_ready);

    maxpool_V_U : component CNN_maxpool_V
    generic map (
        DataWidth => 25,
        AddressRange => 196,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => max_pool_1chan_U0_out_image_V_address0,
        i_ce0 => max_pool_1chan_U0_out_image_V_ce0,
        i_we0 => max_pool_1chan_U0_out_image_V_we0,
        i_d0 => max_pool_1chan_U0_out_image_V_d0,
        i_q0 => maxpool_V_i_q0,
        t_address0 => pad_for_conv2_U0_in_image_V_address0,
        t_ce0 => pad_for_conv2_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => maxpool_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => maxpool_V_i_full_n,
        i_write => max_pool_1chan_U0_ap_done,
        t_empty_n => maxpool_V_t_empty_n,
        t_read => pad_for_conv2_U0_ap_ready);

    padded_L2_V_U : component CNN_padded_L2_V
    generic map (
        DataWidth => 25,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => pad_for_conv2_U0_out_image_V_address0,
        i_ce0 => pad_for_conv2_U0_out_image_V_ce0,
        i_we0 => pad_for_conv2_U0_out_image_V_we0,
        i_d0 => pad_for_conv2_U0_out_image_V_d0,
        i_q0 => padded_L2_V_i_q0,
        i_address1 => pad_for_conv2_U0_out_image_V_address1,
        i_ce1 => pad_for_conv2_U0_out_image_V_ce1,
        i_we1 => pad_for_conv2_U0_out_image_V_we1,
        i_d1 => pad_for_conv2_U0_out_image_V_d1,
        t_address0 => resample_for_conv2_U0_square_image_V_address0,
        t_ce0 => resample_for_conv2_U0_square_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => padded_L2_V_t_q0,
        t_address1 => ap_const_lv8_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv25_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => padded_L2_V_i_full_n,
        i_write => pad_for_conv2_U0_ap_done,
        t_empty_n => padded_L2_V_t_empty_n,
        t_read => resample_for_conv2_U0_ap_ready);

    resampled_L2_V_U : component CNN_resampled_L2_V
    generic map (
        DataWidth => 25,
        AddressRange => 1764,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => resample_for_conv2_U0_resampled_V_address0,
        i_ce0 => resample_for_conv2_U0_resampled_V_ce0,
        i_we0 => resample_for_conv2_U0_resampled_V_we0,
        i_d0 => resample_for_conv2_U0_resampled_V_d0,
        i_q0 => resampled_L2_V_i_q0,
        t_address0 => conv2d_3x3_4chan_rev_U0_in_image_V_address0,
        t_ce0 => conv2d_3x3_4chan_rev_U0_in_image_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv25_0,
        t_q0 => resampled_L2_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => resampled_L2_V_i_full_n,
        i_write => resample_for_conv2_U0_ap_done,
        t_empty_n => resampled_L2_V_t_empty_n,
        t_read => conv2d_3x3_4chan_rev_U0_ap_ready);

    zero_mean_1chan50_U0 : component zero_mean_1chan50
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => zero_mean_1chan50_U0_ap_start,
        ap_done => zero_mean_1chan50_U0_ap_done,
        ap_continue => zero_mean_1chan50_U0_ap_continue,
        ap_idle => zero_mean_1chan50_U0_ap_idle,
        ap_ready => zero_mean_1chan50_U0_ap_ready,
        in_image_V_address0 => zero_mean_1chan50_U0_in_image_V_address0,
        in_image_V_ce0 => zero_mean_1chan50_U0_in_image_V_ce0,
        in_image_V_q0 => in_image_V_q0,
        out_image_V_address0 => zero_mean_1chan50_U0_out_image_V_address0,
        out_image_V_ce0 => zero_mean_1chan50_U0_out_image_V_ce0,
        out_image_V_we0 => zero_mean_1chan50_U0_out_image_V_we0,
        out_image_V_d0 => zero_mean_1chan50_U0_out_image_V_d0,
        means_V_address0 => zero_mean_1chan50_U0_means_V_address0,
        means_V_ce0 => zero_mean_1chan50_U0_means_V_ce0,
        means_V_q0 => means_V_q0,
        conv_bias_L1_V => conv_bias_L1_V,
        a_V => a_V,
        b_V => b_V,
        conv_bias_L1_V_out_din => zero_mean_1chan50_U0_conv_bias_L1_V_out_din,
        conv_bias_L1_V_out_full_n => conv_bias_L1_V_c_full_n,
        conv_bias_L1_V_out_write => zero_mean_1chan50_U0_conv_bias_L1_V_out_write,
        a_V_out_din => zero_mean_1chan50_U0_a_V_out_din,
        a_V_out_full_n => a_V_c_full_n,
        a_V_out_write => zero_mean_1chan50_U0_a_V_out_write,
        b_V_out_din => zero_mean_1chan50_U0_b_V_out_din,
        b_V_out_full_n => b_V_c_full_n,
        b_V_out_write => zero_mean_1chan50_U0_b_V_out_write);

    efficient_pad_n_1cha_U0 : component efficient_pad_n_1cha
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => efficient_pad_n_1cha_U0_ap_start,
        ap_done => efficient_pad_n_1cha_U0_ap_done,
        ap_continue => efficient_pad_n_1cha_U0_ap_continue,
        ap_idle => efficient_pad_n_1cha_U0_ap_idle,
        ap_ready => efficient_pad_n_1cha_U0_ap_ready,
        in_image_V_address0 => efficient_pad_n_1cha_U0_in_image_V_address0,
        in_image_V_ce0 => efficient_pad_n_1cha_U0_in_image_V_ce0,
        in_image_V_q0 => mean_removed_V_t_q0,
        out_image_V_address0 => efficient_pad_n_1cha_U0_out_image_V_address0,
        out_image_V_ce0 => efficient_pad_n_1cha_U0_out_image_V_ce0,
        out_image_V_we0 => efficient_pad_n_1cha_U0_out_image_V_we0,
        out_image_V_d0 => efficient_pad_n_1cha_U0_out_image_V_d0,
        out_image_V_address1 => efficient_pad_n_1cha_U0_out_image_V_address1,
        out_image_V_ce1 => efficient_pad_n_1cha_U0_out_image_V_ce1,
        out_image_V_we1 => efficient_pad_n_1cha_U0_out_image_V_we1,
        out_image_V_d1 => efficient_pad_n_1cha_U0_out_image_V_d1);

    resample_U0 : component resample
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => resample_U0_ap_start,
        ap_done => resample_U0_ap_done,
        ap_continue => resample_U0_ap_continue,
        ap_idle => resample_U0_ap_idle,
        ap_ready => resample_U0_ap_ready,
        square_image_V_address0 => resample_U0_square_image_V_address0,
        square_image_V_ce0 => resample_U0_square_image_V_ce0,
        square_image_V_q0 => padded_V_t_q0,
        resampled_V_address0 => resample_U0_resampled_V_address0,
        resampled_V_ce0 => resample_U0_resampled_V_ce0,
        resampled_V_we0 => resample_U0_resampled_V_we0,
        resampled_V_d0 => resample_U0_resampled_V_d0);

    conv2d_3x3_1chan_rev_U0 : component conv2d_3x3_1chan_rev
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv2d_3x3_1chan_rev_U0_ap_start,
        ap_done => conv2d_3x3_1chan_rev_U0_ap_done,
        ap_continue => conv2d_3x3_1chan_rev_U0_ap_continue,
        ap_idle => conv2d_3x3_1chan_rev_U0_ap_idle,
        ap_ready => conv2d_3x3_1chan_rev_U0_ap_ready,
        in_image_V_address0 => conv2d_3x3_1chan_rev_U0_in_image_V_address0,
        in_image_V_ce0 => conv2d_3x3_1chan_rev_U0_in_image_V_ce0,
        in_image_V_q0 => resampled_V_t_q0,
        kernel_V_address0 => conv2d_3x3_1chan_rev_U0_kernel_V_address0,
        kernel_V_ce0 => conv2d_3x3_1chan_rev_U0_kernel_V_ce0,
        kernel_V_q0 => conv_kernel_L1_V_q0,
        bias_V_dout => conv_bias_L1_V_c_dout,
        bias_V_empty_n => conv_bias_L1_V_c_empty_n,
        bias_V_read => conv2d_3x3_1chan_rev_U0_bias_V_read,
        out_image_V_address0 => conv2d_3x3_1chan_rev_U0_out_image_V_address0,
        out_image_V_ce0 => conv2d_3x3_1chan_rev_U0_out_image_V_ce0,
        out_image_V_we0 => conv2d_3x3_1chan_rev_U0_out_image_V_we0,
        out_image_V_d0 => conv2d_3x3_1chan_rev_U0_out_image_V_d0);

    batch_norm_U0 : component batch_norm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => batch_norm_U0_ap_start,
        ap_done => batch_norm_U0_ap_done,
        ap_continue => batch_norm_U0_ap_continue,
        ap_idle => batch_norm_U0_ap_idle,
        ap_ready => batch_norm_U0_ap_ready,
        in_image_V_address0 => batch_norm_U0_in_image_V_address0,
        in_image_V_ce0 => batch_norm_U0_in_image_V_ce0,
        in_image_V_q0 => conv_V_t_q0,
        A_V_dout => a_V_c_dout,
        A_V_empty_n => a_V_c_empty_n,
        A_V_read => batch_norm_U0_A_V_read,
        B_V_dout => b_V_c_dout,
        B_V_empty_n => b_V_c_empty_n,
        B_V_read => batch_norm_U0_B_V_read,
        out_image_V_address0 => batch_norm_U0_out_image_V_address0,
        out_image_V_ce0 => batch_norm_U0_out_image_V_ce0,
        out_image_V_we0 => batch_norm_U0_out_image_V_we0,
        out_image_V_d0 => batch_norm_U0_out_image_V_d0);

    relu_U0 : component relu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => relu_U0_ap_start,
        ap_done => relu_U0_ap_done,
        ap_continue => relu_U0_ap_continue,
        ap_idle => relu_U0_ap_idle,
        ap_ready => relu_U0_ap_ready,
        in_features_V_address0 => relu_U0_in_features_V_address0,
        in_features_V_ce0 => relu_U0_in_features_V_ce0,
        in_features_V_q0 => batchnorm_V_t_q0,
        activations_V_address0 => relu_U0_activations_V_address0,
        activations_V_ce0 => relu_U0_activations_V_ce0,
        activations_V_we0 => relu_U0_activations_V_we0,
        activations_V_d0 => relu_U0_activations_V_d0);

    max_pool_1chan_U0 : component max_pool_1chan
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => max_pool_1chan_U0_ap_start,
        ap_done => max_pool_1chan_U0_ap_done,
        ap_continue => max_pool_1chan_U0_ap_continue,
        ap_idle => max_pool_1chan_U0_ap_idle,
        ap_ready => max_pool_1chan_U0_ap_ready,
        in_image_V_address0 => max_pool_1chan_U0_in_image_V_address0,
        in_image_V_ce0 => max_pool_1chan_U0_in_image_V_ce0,
        in_image_V_q0 => ReLU_V_t_q0,
        in_image_V_address1 => max_pool_1chan_U0_in_image_V_address1,
        in_image_V_ce1 => max_pool_1chan_U0_in_image_V_ce1,
        in_image_V_q1 => ReLU_V_t_q1,
        out_image_V_address0 => max_pool_1chan_U0_out_image_V_address0,
        out_image_V_ce0 => max_pool_1chan_U0_out_image_V_ce0,
        out_image_V_we0 => max_pool_1chan_U0_out_image_V_we0,
        out_image_V_d0 => max_pool_1chan_U0_out_image_V_d0);

    pad_for_conv2_U0 : component pad_for_conv2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pad_for_conv2_U0_ap_start,
        ap_done => pad_for_conv2_U0_ap_done,
        ap_continue => pad_for_conv2_U0_ap_continue,
        ap_idle => pad_for_conv2_U0_ap_idle,
        ap_ready => pad_for_conv2_U0_ap_ready,
        in_image_V_address0 => pad_for_conv2_U0_in_image_V_address0,
        in_image_V_ce0 => pad_for_conv2_U0_in_image_V_ce0,
        in_image_V_q0 => maxpool_V_t_q0,
        out_image_V_address0 => pad_for_conv2_U0_out_image_V_address0,
        out_image_V_ce0 => pad_for_conv2_U0_out_image_V_ce0,
        out_image_V_we0 => pad_for_conv2_U0_out_image_V_we0,
        out_image_V_d0 => pad_for_conv2_U0_out_image_V_d0,
        out_image_V_address1 => pad_for_conv2_U0_out_image_V_address1,
        out_image_V_ce1 => pad_for_conv2_U0_out_image_V_ce1,
        out_image_V_we1 => pad_for_conv2_U0_out_image_V_we1,
        out_image_V_d1 => pad_for_conv2_U0_out_image_V_d1);

    resample_for_conv2_U0 : component resample_for_conv2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => resample_for_conv2_U0_ap_start,
        ap_done => resample_for_conv2_U0_ap_done,
        ap_continue => resample_for_conv2_U0_ap_continue,
        ap_idle => resample_for_conv2_U0_ap_idle,
        ap_ready => resample_for_conv2_U0_ap_ready,
        square_image_V_address0 => resample_for_conv2_U0_square_image_V_address0,
        square_image_V_ce0 => resample_for_conv2_U0_square_image_V_ce0,
        square_image_V_q0 => padded_L2_V_t_q0,
        resampled_V_address0 => resample_for_conv2_U0_resampled_V_address0,
        resampled_V_ce0 => resample_for_conv2_U0_resampled_V_ce0,
        resampled_V_we0 => resample_for_conv2_U0_resampled_V_we0,
        resampled_V_d0 => resample_for_conv2_U0_resampled_V_d0);

    conv2d_3x3_4chan_rev_U0 : component conv2d_3x3_4chan_rev
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv2d_3x3_4chan_rev_U0_ap_start,
        ap_done => conv2d_3x3_4chan_rev_U0_ap_done,
        ap_continue => conv2d_3x3_4chan_rev_U0_ap_continue,
        ap_idle => conv2d_3x3_4chan_rev_U0_ap_idle,
        ap_ready => conv2d_3x3_4chan_rev_U0_ap_ready,
        in_image_V_address0 => conv2d_3x3_4chan_rev_U0_in_image_V_address0,
        in_image_V_ce0 => conv2d_3x3_4chan_rev_U0_in_image_V_ce0,
        in_image_V_q0 => resampled_L2_V_t_q0,
        kernel_V_address0 => conv2d_3x3_4chan_rev_U0_kernel_V_address0,
        kernel_V_ce0 => conv2d_3x3_4chan_rev_U0_kernel_V_ce0,
        kernel_V_q0 => conv_kernel_L2_V_q0,
        bias_V_address0 => conv2d_3x3_4chan_rev_U0_bias_V_address0,
        bias_V_ce0 => conv2d_3x3_4chan_rev_U0_bias_V_ce0,
        bias_V_q0 => conv_bias_L2_V_q0,
        out_image_V_address0 => conv2d_3x3_4chan_rev_U0_out_image_V_address0,
        out_image_V_ce0 => conv2d_3x3_4chan_rev_U0_out_image_V_ce0,
        out_image_V_we0 => conv2d_3x3_4chan_rev_U0_out_image_V_we0,
        out_image_V_d0 => conv2d_3x3_4chan_rev_U0_out_image_V_d0);

    conv_bias_L1_V_c_U : component fifo_w48_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zero_mean_1chan50_U0_conv_bias_L1_V_out_din,
        if_full_n => conv_bias_L1_V_c_full_n,
        if_write => zero_mean_1chan50_U0_conv_bias_L1_V_out_write,
        if_dout => conv_bias_L1_V_c_dout,
        if_empty_n => conv_bias_L1_V_c_empty_n,
        if_read => conv2d_3x3_1chan_rev_U0_bias_V_read);

    a_V_c_U : component fifo_w18_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zero_mean_1chan50_U0_a_V_out_din,
        if_full_n => a_V_c_full_n,
        if_write => zero_mean_1chan50_U0_a_V_out_write,
        if_dout => a_V_c_dout,
        if_empty_n => a_V_c_empty_n,
        if_read => batch_norm_U0_A_V_read);

    b_V_c_U : component fifo_w18_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => zero_mean_1chan50_U0_b_V_out_din,
        if_full_n => b_V_c_full_n,
        if_write => zero_mean_1chan50_U0_b_V_out_write,
        if_dout => b_V_c_dout,
        if_empty_n => b_V_c_empty_n,
        if_read => batch_norm_U0_B_V_read);





    ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready <= ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready <= ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_zero_mean_1chan50_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_zero_mean_1chan50_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_zero_mean_1chan50_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_zero_mean_1chan50_U0_ap_ready <= ap_sync_zero_mean_1chan50_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    conv2d_3x3_1chan_rev_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (conv2d_3x3_1chan_rev_U0_ap_ready = ap_const_logic_0))) then 
                conv2d_3x3_1chan_rev_U0_ap_ready_count <= std_logic_vector(unsigned(conv2d_3x3_1chan_rev_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((conv2d_3x3_1chan_rev_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                conv2d_3x3_1chan_rev_U0_ap_ready_count <= std_logic_vector(unsigned(conv2d_3x3_1chan_rev_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    conv2d_3x3_4chan_rev_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (conv2d_3x3_4chan_rev_U0_ap_ready = ap_const_logic_0))) then 
                conv2d_3x3_4chan_rev_U0_ap_ready_count <= std_logic_vector(unsigned(conv2d_3x3_4chan_rev_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((conv2d_3x3_4chan_rev_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                conv2d_3x3_4chan_rev_U0_ap_ready_count <= std_logic_vector(unsigned(conv2d_3x3_4chan_rev_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    zero_mean_1chan50_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (zero_mean_1chan50_U0_ap_ready = ap_const_logic_0))) then 
                zero_mean_1chan50_U0_ap_ready_count <= std_logic_vector(unsigned(zero_mean_1chan50_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((zero_mean_1chan50_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                zero_mean_1chan50_U0_ap_ready_count <= std_logic_vector(unsigned(zero_mean_1chan50_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ReLU_V_t_d1 <= ap_const_lv48_0;
    ReLU_V_t_we1 <= ap_const_logic_0;
    ap_channel_done_ReLU_V <= relu_U0_ap_done;
    ap_channel_done_batchnorm_V <= batch_norm_U0_ap_done;
    ap_channel_done_conv_V <= conv2d_3x3_1chan_rev_U0_ap_done;
    ap_channel_done_maxpool_V <= max_pool_1chan_U0_ap_done;
    ap_channel_done_mean_removed_V <= zero_mean_1chan50_U0_ap_done;
    ap_channel_done_padded_L2_V <= pad_for_conv2_U0_ap_done;
    ap_channel_done_padded_V <= efficient_pad_n_1cha_U0_ap_done;
    ap_channel_done_resampled_L2_V <= resample_for_conv2_U0_ap_done;
    ap_channel_done_resampled_V <= resample_U0_ap_done;
    ap_done <= conv2d_3x3_4chan_rev_U0_ap_done;
    ap_idle <= (zero_mean_1chan50_U0_ap_idle and resample_for_conv2_U0_ap_idle and resample_U0_ap_idle and relu_U0_ap_idle and pad_for_conv2_U0_ap_idle and max_pool_1chan_U0_ap_idle and (resampled_L2_V_t_empty_n xor ap_const_logic_1) and (padded_L2_V_t_empty_n xor ap_const_logic_1) and (maxpool_V_t_empty_n xor ap_const_logic_1) and (ap_const_logic_1 xor ReLU_V_t_empty_n) and (batchnorm_V_t_empty_n xor ap_const_logic_1) and (conv_V_t_empty_n xor ap_const_logic_1) and (resampled_V_t_empty_n xor ap_const_logic_1) and (padded_V_t_empty_n xor ap_const_logic_1) and (mean_removed_V_t_empty_n xor ap_const_logic_1) and efficient_pad_n_1cha_U0_ap_idle and conv2d_3x3_4chan_rev_U0_ap_idle and conv2d_3x3_1chan_rev_U0_ap_idle and batch_norm_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready <= (conv2d_3x3_1chan_rev_U0_ap_ready or ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready);
    ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready <= (conv2d_3x3_4chan_rev_U0_ap_ready or ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready);
    ap_sync_done <= conv2d_3x3_4chan_rev_U0_ap_done;
    ap_sync_ready <= (ap_sync_zero_mean_1chan50_U0_ap_ready and ap_sync_conv2d_3x3_4chan_rev_U0_ap_ready and ap_sync_conv2d_3x3_1chan_rev_U0_ap_ready);
    ap_sync_zero_mean_1chan50_U0_ap_ready <= (zero_mean_1chan50_U0_ap_ready or ap_sync_reg_zero_mean_1chan50_U0_ap_ready);
    batch_norm_U0_ap_continue <= batchnorm_V_i_full_n;
    batch_norm_U0_ap_start <= conv_V_t_empty_n;
    batch_norm_U0_out_image_V_full_n <= batchnorm_V_i_full_n;
    batch_norm_U0_start_full_n <= ap_const_logic_1;
    batch_norm_U0_start_write <= ap_const_logic_0;
    conv2d_3x3_1chan_rev_U0_ap_continue <= conv_V_i_full_n;
    conv2d_3x3_1chan_rev_U0_ap_start <= (resampled_V_t_empty_n and (ap_sync_reg_conv2d_3x3_1chan_rev_U0_ap_ready xor ap_const_logic_1) and ap_start);
    conv2d_3x3_1chan_rev_U0_out_image_V_full_n <= conv_V_i_full_n;
    conv2d_3x3_1chan_rev_U0_start_full_n <= ap_const_logic_1;
    conv2d_3x3_1chan_rev_U0_start_write <= ap_const_logic_0;
    conv2d_3x3_4chan_rev_U0_ap_continue <= ap_const_logic_1;
    conv2d_3x3_4chan_rev_U0_ap_start <= (resampled_L2_V_t_empty_n and (ap_sync_reg_conv2d_3x3_4chan_rev_U0_ap_ready xor ap_const_logic_1) and ap_start);
    conv2d_3x3_4chan_rev_U0_start_full_n <= ap_const_logic_1;
    conv2d_3x3_4chan_rev_U0_start_write <= ap_const_logic_0;
    conv_bias_L2_V_address0 <= conv2d_3x3_4chan_rev_U0_bias_V_address0;
    conv_bias_L2_V_address1 <= ap_const_lv2_0;
    conv_bias_L2_V_ce0 <= conv2d_3x3_4chan_rev_U0_bias_V_ce0;
    conv_bias_L2_V_ce1 <= ap_const_logic_0;
    conv_bias_L2_V_d0 <= ap_const_lv48_0;
    conv_bias_L2_V_d1 <= ap_const_lv48_0;
    conv_bias_L2_V_we0 <= ap_const_logic_0;
    conv_bias_L2_V_we1 <= ap_const_logic_0;
    conv_kernel_L1_V_address0 <= conv2d_3x3_1chan_rev_U0_kernel_V_address0;
    conv_kernel_L1_V_address1 <= ap_const_lv4_0;
    conv_kernel_L1_V_ce0 <= conv2d_3x3_1chan_rev_U0_kernel_V_ce0;
    conv_kernel_L1_V_ce1 <= ap_const_logic_0;
    conv_kernel_L1_V_d0 <= ap_const_lv18_0;
    conv_kernel_L1_V_d1 <= ap_const_lv18_0;
    conv_kernel_L1_V_we0 <= ap_const_logic_0;
    conv_kernel_L1_V_we1 <= ap_const_logic_0;
    conv_kernel_L2_V_address0 <= conv2d_3x3_4chan_rev_U0_kernel_V_address0;
    conv_kernel_L2_V_address1 <= ap_const_lv6_0;
    conv_kernel_L2_V_ce0 <= conv2d_3x3_4chan_rev_U0_kernel_V_ce0;
    conv_kernel_L2_V_ce1 <= ap_const_logic_0;
    conv_kernel_L2_V_d0 <= ap_const_lv18_0;
    conv_kernel_L2_V_d1 <= ap_const_lv18_0;
    conv_kernel_L2_V_we0 <= ap_const_logic_0;
    conv_kernel_L2_V_we1 <= ap_const_logic_0;
    efficient_pad_n_1cha_U0_ap_continue <= padded_V_i_full_n;
    efficient_pad_n_1cha_U0_ap_start <= mean_removed_V_t_empty_n;
    efficient_pad_n_1cha_U0_out_image_V_full_n <= padded_V_i_full_n;
    efficient_pad_n_1cha_U0_start_full_n <= ap_const_logic_1;
    efficient_pad_n_1cha_U0_start_write <= ap_const_logic_0;
    in_image_V_address0 <= zero_mean_1chan50_U0_in_image_V_address0;
    in_image_V_address1 <= ap_const_lv10_0;
    in_image_V_ce0 <= zero_mean_1chan50_U0_in_image_V_ce0;
    in_image_V_ce1 <= ap_const_logic_0;
    in_image_V_d0 <= ap_const_lv18_0;
    in_image_V_d1 <= ap_const_lv18_0;
    in_image_V_we0 <= ap_const_logic_0;
    in_image_V_we1 <= ap_const_logic_0;
    max_pool_1chan_U0_ap_continue <= maxpool_V_i_full_n;
    max_pool_1chan_U0_ap_start <= ReLU_V_t_empty_n;
    max_pool_1chan_U0_out_image_V_full_n <= maxpool_V_i_full_n;
    max_pool_1chan_U0_start_full_n <= ap_const_logic_1;
    max_pool_1chan_U0_start_write <= ap_const_logic_0;
    means_V_address0 <= zero_mean_1chan50_U0_means_V_address0;
    means_V_address1 <= ap_const_lv10_0;
    means_V_ce0 <= zero_mean_1chan50_U0_means_V_ce0;
    means_V_ce1 <= ap_const_logic_0;
    means_V_d0 <= ap_const_lv18_0;
    means_V_d1 <= ap_const_lv18_0;
    means_V_we0 <= ap_const_logic_0;
    means_V_we1 <= ap_const_logic_0;
    pad_for_conv2_U0_ap_continue <= padded_L2_V_i_full_n;
    pad_for_conv2_U0_ap_start <= maxpool_V_t_empty_n;
    pad_for_conv2_U0_out_image_V_full_n <= padded_L2_V_i_full_n;
    pad_for_conv2_U0_start_full_n <= ap_const_logic_1;
    pad_for_conv2_U0_start_write <= ap_const_logic_0;
    relu_U0_activations_V_full_n <= ReLU_V_i_full_n;
    relu_U0_ap_continue <= ReLU_V_i_full_n;
    relu_U0_ap_start <= batchnorm_V_t_empty_n;
    relu_U0_start_full_n <= ap_const_logic_1;
    relu_U0_start_write <= ap_const_logic_0;
    resample_U0_ap_continue <= resampled_V_i_full_n;
    resample_U0_ap_start <= padded_V_t_empty_n;
    resample_U0_resampled_V_full_n <= resampled_V_i_full_n;
    resample_U0_start_full_n <= ap_const_logic_1;
    resample_U0_start_write <= ap_const_logic_0;
    resample_for_conv2_U0_ap_continue <= resampled_L2_V_i_full_n;
    resample_for_conv2_U0_ap_start <= padded_L2_V_t_empty_n;
    resample_for_conv2_U0_resampled_V_full_n <= resampled_L2_V_i_full_n;
    resample_for_conv2_U0_start_full_n <= ap_const_logic_1;
    resample_for_conv2_U0_start_write <= ap_const_logic_0;
    result_V_address0 <= conv2d_3x3_4chan_rev_U0_out_image_V_address0;
    result_V_address1 <= ap_const_lv10_0;
    result_V_ce0 <= conv2d_3x3_4chan_rev_U0_out_image_V_ce0;
    result_V_ce1 <= ap_const_logic_0;
    result_V_d0 <= conv2d_3x3_4chan_rev_U0_out_image_V_d0;
    result_V_d1 <= ap_const_lv48_0;
    result_V_we0 <= conv2d_3x3_4chan_rev_U0_out_image_V_we0;
    result_V_we1 <= ap_const_logic_0;
    zero_mean_1chan50_U0_ap_continue <= mean_removed_V_i_full_n;
    zero_mean_1chan50_U0_ap_start <= ((ap_sync_reg_zero_mean_1chan50_U0_ap_ready xor ap_const_logic_1) and ap_start);
    zero_mean_1chan50_U0_out_image_V_full_n <= mean_removed_V_i_full_n;
    zero_mean_1chan50_U0_start_full_n <= ap_const_logic_1;
    zero_mean_1chan50_U0_start_write <= ap_const_logic_0;
end behav;
