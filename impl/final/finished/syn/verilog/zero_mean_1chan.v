// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module zero_mean_1chan (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_image_0_V_address0,
        in_image_0_V_ce0,
        in_image_0_V_q0,
        in_image_1_V_address0,
        in_image_1_V_ce0,
        in_image_1_V_q0,
        in_image_2_V_address0,
        in_image_2_V_ce0,
        in_image_2_V_q0,
        in_image_3_V_address0,
        in_image_3_V_ce0,
        in_image_3_V_q0,
        in_image_4_V_address0,
        in_image_4_V_ce0,
        in_image_4_V_q0,
        in_image_5_V_address0,
        in_image_5_V_ce0,
        in_image_5_V_q0,
        in_image_6_V_address0,
        in_image_6_V_ce0,
        in_image_6_V_q0,
        in_image_7_V_address0,
        in_image_7_V_ce0,
        in_image_7_V_q0,
        in_image_8_V_address0,
        in_image_8_V_ce0,
        in_image_8_V_q0,
        in_image_9_V_address0,
        in_image_9_V_ce0,
        in_image_9_V_q0,
        in_image_10_V_address0,
        in_image_10_V_ce0,
        in_image_10_V_q0,
        in_image_11_V_address0,
        in_image_11_V_ce0,
        in_image_11_V_q0,
        in_image_12_V_address0,
        in_image_12_V_ce0,
        in_image_12_V_q0,
        in_image_13_V_address0,
        in_image_13_V_ce0,
        in_image_13_V_q0,
        in_image_14_V_address0,
        in_image_14_V_ce0,
        in_image_14_V_q0,
        in_image_15_V_address0,
        in_image_15_V_ce0,
        in_image_15_V_q0,
        in_image_16_V_address0,
        in_image_16_V_ce0,
        in_image_16_V_q0,
        in_image_17_V_address0,
        in_image_17_V_ce0,
        in_image_17_V_q0,
        in_image_18_V_address0,
        in_image_18_V_ce0,
        in_image_18_V_q0,
        in_image_19_V_address0,
        in_image_19_V_ce0,
        in_image_19_V_q0,
        in_image_20_V_address0,
        in_image_20_V_ce0,
        in_image_20_V_q0,
        in_image_21_V_address0,
        in_image_21_V_ce0,
        in_image_21_V_q0,
        in_image_22_V_address0,
        in_image_22_V_ce0,
        in_image_22_V_q0,
        in_image_23_V_address0,
        in_image_23_V_ce0,
        in_image_23_V_q0,
        in_image_24_V_address0,
        in_image_24_V_ce0,
        in_image_24_V_q0,
        in_image_25_V_address0,
        in_image_25_V_ce0,
        in_image_25_V_q0,
        in_image_26_V_address0,
        in_image_26_V_ce0,
        in_image_26_V_q0,
        in_image_27_V_address0,
        in_image_27_V_ce0,
        in_image_27_V_q0,
        out_image_0_V_address0,
        out_image_0_V_ce0,
        out_image_0_V_we0,
        out_image_0_V_d0,
        out_image_1_V_address0,
        out_image_1_V_ce0,
        out_image_1_V_we0,
        out_image_1_V_d0,
        out_image_2_V_address0,
        out_image_2_V_ce0,
        out_image_2_V_we0,
        out_image_2_V_d0,
        out_image_3_V_address0,
        out_image_3_V_ce0,
        out_image_3_V_we0,
        out_image_3_V_d0,
        out_image_4_V_address0,
        out_image_4_V_ce0,
        out_image_4_V_we0,
        out_image_4_V_d0,
        out_image_5_V_address0,
        out_image_5_V_ce0,
        out_image_5_V_we0,
        out_image_5_V_d0,
        out_image_6_V_address0,
        out_image_6_V_ce0,
        out_image_6_V_we0,
        out_image_6_V_d0,
        out_image_7_V_address0,
        out_image_7_V_ce0,
        out_image_7_V_we0,
        out_image_7_V_d0,
        out_image_8_V_address0,
        out_image_8_V_ce0,
        out_image_8_V_we0,
        out_image_8_V_d0,
        out_image_9_V_address0,
        out_image_9_V_ce0,
        out_image_9_V_we0,
        out_image_9_V_d0,
        out_image_10_V_address0,
        out_image_10_V_ce0,
        out_image_10_V_we0,
        out_image_10_V_d0,
        out_image_11_V_address0,
        out_image_11_V_ce0,
        out_image_11_V_we0,
        out_image_11_V_d0,
        out_image_12_V_address0,
        out_image_12_V_ce0,
        out_image_12_V_we0,
        out_image_12_V_d0,
        out_image_13_V_address0,
        out_image_13_V_ce0,
        out_image_13_V_we0,
        out_image_13_V_d0,
        out_image_14_V_address0,
        out_image_14_V_ce0,
        out_image_14_V_we0,
        out_image_14_V_d0,
        out_image_15_V_address0,
        out_image_15_V_ce0,
        out_image_15_V_we0,
        out_image_15_V_d0,
        out_image_16_V_address0,
        out_image_16_V_ce0,
        out_image_16_V_we0,
        out_image_16_V_d0,
        out_image_17_V_address0,
        out_image_17_V_ce0,
        out_image_17_V_we0,
        out_image_17_V_d0,
        out_image_18_V_address0,
        out_image_18_V_ce0,
        out_image_18_V_we0,
        out_image_18_V_d0,
        out_image_19_V_address0,
        out_image_19_V_ce0,
        out_image_19_V_we0,
        out_image_19_V_d0,
        out_image_20_V_address0,
        out_image_20_V_ce0,
        out_image_20_V_we0,
        out_image_20_V_d0,
        out_image_21_V_address0,
        out_image_21_V_ce0,
        out_image_21_V_we0,
        out_image_21_V_d0,
        out_image_22_V_address0,
        out_image_22_V_ce0,
        out_image_22_V_we0,
        out_image_22_V_d0,
        out_image_23_V_address0,
        out_image_23_V_ce0,
        out_image_23_V_we0,
        out_image_23_V_d0,
        out_image_24_V_address0,
        out_image_24_V_ce0,
        out_image_24_V_we0,
        out_image_24_V_d0,
        out_image_25_V_address0,
        out_image_25_V_ce0,
        out_image_25_V_we0,
        out_image_25_V_d0,
        out_image_26_V_address0,
        out_image_26_V_ce0,
        out_image_26_V_we0,
        out_image_26_V_d0,
        out_image_27_V_address0,
        out_image_27_V_ce0,
        out_image_27_V_we0,
        out_image_27_V_d0,
        means_0_V_address0,
        means_0_V_ce0,
        means_0_V_q0,
        means_1_V_address0,
        means_1_V_ce0,
        means_1_V_q0,
        means_2_V_address0,
        means_2_V_ce0,
        means_2_V_q0,
        means_3_V_address0,
        means_3_V_ce0,
        means_3_V_q0,
        means_4_V_address0,
        means_4_V_ce0,
        means_4_V_q0,
        means_5_V_address0,
        means_5_V_ce0,
        means_5_V_q0,
        means_6_V_address0,
        means_6_V_ce0,
        means_6_V_q0,
        means_7_V_address0,
        means_7_V_ce0,
        means_7_V_q0,
        means_8_V_address0,
        means_8_V_ce0,
        means_8_V_q0,
        means_9_V_address0,
        means_9_V_ce0,
        means_9_V_q0,
        means_10_V_address0,
        means_10_V_ce0,
        means_10_V_q0,
        means_11_V_address0,
        means_11_V_ce0,
        means_11_V_q0,
        means_12_V_address0,
        means_12_V_ce0,
        means_12_V_q0,
        means_13_V_address0,
        means_13_V_ce0,
        means_13_V_q0,
        means_14_V_address0,
        means_14_V_ce0,
        means_14_V_q0,
        means_15_V_address0,
        means_15_V_ce0,
        means_15_V_q0,
        means_16_V_address0,
        means_16_V_ce0,
        means_16_V_q0,
        means_17_V_address0,
        means_17_V_ce0,
        means_17_V_q0,
        means_18_V_address0,
        means_18_V_ce0,
        means_18_V_q0,
        means_19_V_address0,
        means_19_V_ce0,
        means_19_V_q0,
        means_20_V_address0,
        means_20_V_ce0,
        means_20_V_q0,
        means_21_V_address0,
        means_21_V_ce0,
        means_21_V_q0,
        means_22_V_address0,
        means_22_V_ce0,
        means_22_V_q0,
        means_23_V_address0,
        means_23_V_ce0,
        means_23_V_q0,
        means_24_V_address0,
        means_24_V_ce0,
        means_24_V_q0,
        means_25_V_address0,
        means_25_V_ce0,
        means_25_V_q0,
        means_26_V_address0,
        means_26_V_ce0,
        means_26_V_q0,
        means_27_V_address0,
        means_27_V_ce0,
        means_27_V_q0
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] in_image_0_V_address0;
output   in_image_0_V_ce0;
input  [17:0] in_image_0_V_q0;
output  [4:0] in_image_1_V_address0;
output   in_image_1_V_ce0;
input  [17:0] in_image_1_V_q0;
output  [4:0] in_image_2_V_address0;
output   in_image_2_V_ce0;
input  [17:0] in_image_2_V_q0;
output  [4:0] in_image_3_V_address0;
output   in_image_3_V_ce0;
input  [17:0] in_image_3_V_q0;
output  [4:0] in_image_4_V_address0;
output   in_image_4_V_ce0;
input  [17:0] in_image_4_V_q0;
output  [4:0] in_image_5_V_address0;
output   in_image_5_V_ce0;
input  [17:0] in_image_5_V_q0;
output  [4:0] in_image_6_V_address0;
output   in_image_6_V_ce0;
input  [17:0] in_image_6_V_q0;
output  [4:0] in_image_7_V_address0;
output   in_image_7_V_ce0;
input  [17:0] in_image_7_V_q0;
output  [4:0] in_image_8_V_address0;
output   in_image_8_V_ce0;
input  [17:0] in_image_8_V_q0;
output  [4:0] in_image_9_V_address0;
output   in_image_9_V_ce0;
input  [17:0] in_image_9_V_q0;
output  [4:0] in_image_10_V_address0;
output   in_image_10_V_ce0;
input  [17:0] in_image_10_V_q0;
output  [4:0] in_image_11_V_address0;
output   in_image_11_V_ce0;
input  [17:0] in_image_11_V_q0;
output  [4:0] in_image_12_V_address0;
output   in_image_12_V_ce0;
input  [17:0] in_image_12_V_q0;
output  [4:0] in_image_13_V_address0;
output   in_image_13_V_ce0;
input  [17:0] in_image_13_V_q0;
output  [4:0] in_image_14_V_address0;
output   in_image_14_V_ce0;
input  [17:0] in_image_14_V_q0;
output  [4:0] in_image_15_V_address0;
output   in_image_15_V_ce0;
input  [17:0] in_image_15_V_q0;
output  [4:0] in_image_16_V_address0;
output   in_image_16_V_ce0;
input  [17:0] in_image_16_V_q0;
output  [4:0] in_image_17_V_address0;
output   in_image_17_V_ce0;
input  [17:0] in_image_17_V_q0;
output  [4:0] in_image_18_V_address0;
output   in_image_18_V_ce0;
input  [17:0] in_image_18_V_q0;
output  [4:0] in_image_19_V_address0;
output   in_image_19_V_ce0;
input  [17:0] in_image_19_V_q0;
output  [4:0] in_image_20_V_address0;
output   in_image_20_V_ce0;
input  [17:0] in_image_20_V_q0;
output  [4:0] in_image_21_V_address0;
output   in_image_21_V_ce0;
input  [17:0] in_image_21_V_q0;
output  [4:0] in_image_22_V_address0;
output   in_image_22_V_ce0;
input  [17:0] in_image_22_V_q0;
output  [4:0] in_image_23_V_address0;
output   in_image_23_V_ce0;
input  [17:0] in_image_23_V_q0;
output  [4:0] in_image_24_V_address0;
output   in_image_24_V_ce0;
input  [17:0] in_image_24_V_q0;
output  [4:0] in_image_25_V_address0;
output   in_image_25_V_ce0;
input  [17:0] in_image_25_V_q0;
output  [4:0] in_image_26_V_address0;
output   in_image_26_V_ce0;
input  [17:0] in_image_26_V_q0;
output  [4:0] in_image_27_V_address0;
output   in_image_27_V_ce0;
input  [17:0] in_image_27_V_q0;
output  [4:0] out_image_0_V_address0;
output   out_image_0_V_ce0;
output   out_image_0_V_we0;
output  [17:0] out_image_0_V_d0;
output  [4:0] out_image_1_V_address0;
output   out_image_1_V_ce0;
output   out_image_1_V_we0;
output  [17:0] out_image_1_V_d0;
output  [4:0] out_image_2_V_address0;
output   out_image_2_V_ce0;
output   out_image_2_V_we0;
output  [17:0] out_image_2_V_d0;
output  [4:0] out_image_3_V_address0;
output   out_image_3_V_ce0;
output   out_image_3_V_we0;
output  [17:0] out_image_3_V_d0;
output  [4:0] out_image_4_V_address0;
output   out_image_4_V_ce0;
output   out_image_4_V_we0;
output  [17:0] out_image_4_V_d0;
output  [4:0] out_image_5_V_address0;
output   out_image_5_V_ce0;
output   out_image_5_V_we0;
output  [17:0] out_image_5_V_d0;
output  [4:0] out_image_6_V_address0;
output   out_image_6_V_ce0;
output   out_image_6_V_we0;
output  [17:0] out_image_6_V_d0;
output  [4:0] out_image_7_V_address0;
output   out_image_7_V_ce0;
output   out_image_7_V_we0;
output  [17:0] out_image_7_V_d0;
output  [4:0] out_image_8_V_address0;
output   out_image_8_V_ce0;
output   out_image_8_V_we0;
output  [17:0] out_image_8_V_d0;
output  [4:0] out_image_9_V_address0;
output   out_image_9_V_ce0;
output   out_image_9_V_we0;
output  [17:0] out_image_9_V_d0;
output  [4:0] out_image_10_V_address0;
output   out_image_10_V_ce0;
output   out_image_10_V_we0;
output  [17:0] out_image_10_V_d0;
output  [4:0] out_image_11_V_address0;
output   out_image_11_V_ce0;
output   out_image_11_V_we0;
output  [17:0] out_image_11_V_d0;
output  [4:0] out_image_12_V_address0;
output   out_image_12_V_ce0;
output   out_image_12_V_we0;
output  [17:0] out_image_12_V_d0;
output  [4:0] out_image_13_V_address0;
output   out_image_13_V_ce0;
output   out_image_13_V_we0;
output  [17:0] out_image_13_V_d0;
output  [4:0] out_image_14_V_address0;
output   out_image_14_V_ce0;
output   out_image_14_V_we0;
output  [17:0] out_image_14_V_d0;
output  [4:0] out_image_15_V_address0;
output   out_image_15_V_ce0;
output   out_image_15_V_we0;
output  [17:0] out_image_15_V_d0;
output  [4:0] out_image_16_V_address0;
output   out_image_16_V_ce0;
output   out_image_16_V_we0;
output  [17:0] out_image_16_V_d0;
output  [4:0] out_image_17_V_address0;
output   out_image_17_V_ce0;
output   out_image_17_V_we0;
output  [17:0] out_image_17_V_d0;
output  [4:0] out_image_18_V_address0;
output   out_image_18_V_ce0;
output   out_image_18_V_we0;
output  [17:0] out_image_18_V_d0;
output  [4:0] out_image_19_V_address0;
output   out_image_19_V_ce0;
output   out_image_19_V_we0;
output  [17:0] out_image_19_V_d0;
output  [4:0] out_image_20_V_address0;
output   out_image_20_V_ce0;
output   out_image_20_V_we0;
output  [17:0] out_image_20_V_d0;
output  [4:0] out_image_21_V_address0;
output   out_image_21_V_ce0;
output   out_image_21_V_we0;
output  [17:0] out_image_21_V_d0;
output  [4:0] out_image_22_V_address0;
output   out_image_22_V_ce0;
output   out_image_22_V_we0;
output  [17:0] out_image_22_V_d0;
output  [4:0] out_image_23_V_address0;
output   out_image_23_V_ce0;
output   out_image_23_V_we0;
output  [17:0] out_image_23_V_d0;
output  [4:0] out_image_24_V_address0;
output   out_image_24_V_ce0;
output   out_image_24_V_we0;
output  [17:0] out_image_24_V_d0;
output  [4:0] out_image_25_V_address0;
output   out_image_25_V_ce0;
output   out_image_25_V_we0;
output  [17:0] out_image_25_V_d0;
output  [4:0] out_image_26_V_address0;
output   out_image_26_V_ce0;
output   out_image_26_V_we0;
output  [17:0] out_image_26_V_d0;
output  [4:0] out_image_27_V_address0;
output   out_image_27_V_ce0;
output   out_image_27_V_we0;
output  [17:0] out_image_27_V_d0;
output  [4:0] means_0_V_address0;
output   means_0_V_ce0;
input  [17:0] means_0_V_q0;
output  [4:0] means_1_V_address0;
output   means_1_V_ce0;
input  [17:0] means_1_V_q0;
output  [4:0] means_2_V_address0;
output   means_2_V_ce0;
input  [17:0] means_2_V_q0;
output  [4:0] means_3_V_address0;
output   means_3_V_ce0;
input  [17:0] means_3_V_q0;
output  [4:0] means_4_V_address0;
output   means_4_V_ce0;
input  [17:0] means_4_V_q0;
output  [4:0] means_5_V_address0;
output   means_5_V_ce0;
input  [17:0] means_5_V_q0;
output  [4:0] means_6_V_address0;
output   means_6_V_ce0;
input  [17:0] means_6_V_q0;
output  [4:0] means_7_V_address0;
output   means_7_V_ce0;
input  [17:0] means_7_V_q0;
output  [4:0] means_8_V_address0;
output   means_8_V_ce0;
input  [17:0] means_8_V_q0;
output  [4:0] means_9_V_address0;
output   means_9_V_ce0;
input  [17:0] means_9_V_q0;
output  [4:0] means_10_V_address0;
output   means_10_V_ce0;
input  [17:0] means_10_V_q0;
output  [4:0] means_11_V_address0;
output   means_11_V_ce0;
input  [17:0] means_11_V_q0;
output  [4:0] means_12_V_address0;
output   means_12_V_ce0;
input  [17:0] means_12_V_q0;
output  [4:0] means_13_V_address0;
output   means_13_V_ce0;
input  [17:0] means_13_V_q0;
output  [4:0] means_14_V_address0;
output   means_14_V_ce0;
input  [17:0] means_14_V_q0;
output  [4:0] means_15_V_address0;
output   means_15_V_ce0;
input  [17:0] means_15_V_q0;
output  [4:0] means_16_V_address0;
output   means_16_V_ce0;
input  [17:0] means_16_V_q0;
output  [4:0] means_17_V_address0;
output   means_17_V_ce0;
input  [17:0] means_17_V_q0;
output  [4:0] means_18_V_address0;
output   means_18_V_ce0;
input  [17:0] means_18_V_q0;
output  [4:0] means_19_V_address0;
output   means_19_V_ce0;
input  [17:0] means_19_V_q0;
output  [4:0] means_20_V_address0;
output   means_20_V_ce0;
input  [17:0] means_20_V_q0;
output  [4:0] means_21_V_address0;
output   means_21_V_ce0;
input  [17:0] means_21_V_q0;
output  [4:0] means_22_V_address0;
output   means_22_V_ce0;
input  [17:0] means_22_V_q0;
output  [4:0] means_23_V_address0;
output   means_23_V_ce0;
input  [17:0] means_23_V_q0;
output  [4:0] means_24_V_address0;
output   means_24_V_ce0;
input  [17:0] means_24_V_q0;
output  [4:0] means_25_V_address0;
output   means_25_V_ce0;
input  [17:0] means_25_V_q0;
output  [4:0] means_26_V_address0;
output   means_26_V_ce0;
input  [17:0] means_26_V_q0;
output  [4:0] means_27_V_address0;
output   means_27_V_ce0;
input  [17:0] means_27_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_image_0_V_ce0;
reg in_image_1_V_ce0;
reg in_image_2_V_ce0;
reg in_image_3_V_ce0;
reg in_image_4_V_ce0;
reg in_image_5_V_ce0;
reg in_image_6_V_ce0;
reg in_image_7_V_ce0;
reg in_image_8_V_ce0;
reg in_image_9_V_ce0;
reg in_image_10_V_ce0;
reg in_image_11_V_ce0;
reg in_image_12_V_ce0;
reg in_image_13_V_ce0;
reg in_image_14_V_ce0;
reg in_image_15_V_ce0;
reg in_image_16_V_ce0;
reg in_image_17_V_ce0;
reg in_image_18_V_ce0;
reg in_image_19_V_ce0;
reg in_image_20_V_ce0;
reg in_image_21_V_ce0;
reg in_image_22_V_ce0;
reg in_image_23_V_ce0;
reg in_image_24_V_ce0;
reg in_image_25_V_ce0;
reg in_image_26_V_ce0;
reg in_image_27_V_ce0;
reg out_image_0_V_ce0;
reg out_image_0_V_we0;
reg out_image_1_V_ce0;
reg out_image_1_V_we0;
reg out_image_2_V_ce0;
reg out_image_2_V_we0;
reg out_image_3_V_ce0;
reg out_image_3_V_we0;
reg out_image_4_V_ce0;
reg out_image_4_V_we0;
reg out_image_5_V_ce0;
reg out_image_5_V_we0;
reg out_image_6_V_ce0;
reg out_image_6_V_we0;
reg out_image_7_V_ce0;
reg out_image_7_V_we0;
reg out_image_8_V_ce0;
reg out_image_8_V_we0;
reg out_image_9_V_ce0;
reg out_image_9_V_we0;
reg out_image_10_V_ce0;
reg out_image_10_V_we0;
reg out_image_11_V_ce0;
reg out_image_11_V_we0;
reg out_image_12_V_ce0;
reg out_image_12_V_we0;
reg out_image_13_V_ce0;
reg out_image_13_V_we0;
reg out_image_14_V_ce0;
reg out_image_14_V_we0;
reg out_image_15_V_ce0;
reg out_image_15_V_we0;
reg out_image_16_V_ce0;
reg out_image_16_V_we0;
reg out_image_17_V_ce0;
reg out_image_17_V_we0;
reg out_image_18_V_ce0;
reg out_image_18_V_we0;
reg out_image_19_V_ce0;
reg out_image_19_V_we0;
reg out_image_20_V_ce0;
reg out_image_20_V_we0;
reg out_image_21_V_ce0;
reg out_image_21_V_we0;
reg out_image_22_V_ce0;
reg out_image_22_V_we0;
reg out_image_23_V_ce0;
reg out_image_23_V_we0;
reg out_image_24_V_ce0;
reg out_image_24_V_we0;
reg out_image_25_V_ce0;
reg out_image_25_V_we0;
reg out_image_26_V_ce0;
reg out_image_26_V_we0;
reg out_image_27_V_ce0;
reg out_image_27_V_we0;
reg means_0_V_ce0;
reg means_1_V_ce0;
reg means_2_V_ce0;
reg means_3_V_ce0;
reg means_4_V_ce0;
reg means_5_V_ce0;
reg means_6_V_ce0;
reg means_7_V_ce0;
reg means_8_V_ce0;
reg means_9_V_ce0;
reg means_10_V_ce0;
reg means_11_V_ce0;
reg means_12_V_ce0;
reg means_13_V_ce0;
reg means_14_V_ce0;
reg means_15_V_ce0;
reg means_16_V_ce0;
reg means_17_V_ce0;
reg means_18_V_ce0;
reg means_19_V_ce0;
reg means_20_V_ce0;
reg means_21_V_ce0;
reg means_22_V_ce0;
reg means_23_V_ce0;
reg means_24_V_ce0;
reg means_25_V_ce0;
reg means_26_V_ce0;
reg means_27_V_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] exitcond_flatten_fu_1512_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_2_reg_1356;
reg   [4:0] j4_reg_1370;
reg   [4:0] i3_reg_1384;
reg   [9:0] indvar_flatten2_reg_1398;
wire   [4:0] i_mid2_fu_1426_p3;
reg   [4:0] i_mid2_reg_1670;
reg   [4:0] i_mid2_reg_1670_pp0_iter1_reg;
wire   [63:0] tmp_3_fu_1434_p1;
reg   [63:0] tmp_3_reg_1677;
reg   [63:0] tmp_3_reg_1677_pp0_iter1_reg;
wire   [9:0] indvar_flatten_next_fu_1494_p2;
reg   [9:0] indvar_flatten_next_reg_1989;
wire   [4:0] j_fu_1500_p2;
reg   [4:0] j_reg_1994;
wire   [0:0] tmp_1_fu_1506_p2;
reg   [0:0] tmp_1_reg_1999;
reg   [0:0] exitcond_flatten_reg_2004;
reg   [0:0] exitcond_flatten_reg_2004_pp0_iter1_reg;
reg   [17:0] tmp_s_reg_2008;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] ap_phi_mux_tmp_2_phi_fu_1360_p6;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_j4_phi_fu_1374_p6;
reg   [4:0] ap_phi_mux_i3_phi_fu_1388_p6;
reg   [9:0] ap_phi_mux_indvar_flatten2_phi_fu_1402_p6;
wire   [4:0] i_fu_1412_p2;
wire   [4:0] j_mid2_fu_1418_p3;
wire   [17:0] p_Val2_s_fu_1518_p30;
wire   [17:0] p_Val2_1_fu_1587_p30;
wire   [18:0] tmp_6_fu_1579_p3;
wire  signed [18:0] tmp_7_cast_fu_1648_p1;
wire   [18:0] p_Val2_2_fu_1652_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_737;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

CNN_mux_285_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 18 ),
    .din14_WIDTH( 18 ),
    .din15_WIDTH( 18 ),
    .din16_WIDTH( 18 ),
    .din17_WIDTH( 18 ),
    .din18_WIDTH( 18 ),
    .din19_WIDTH( 18 ),
    .din20_WIDTH( 18 ),
    .din21_WIDTH( 18 ),
    .din22_WIDTH( 18 ),
    .din23_WIDTH( 18 ),
    .din24_WIDTH( 18 ),
    .din25_WIDTH( 18 ),
    .din26_WIDTH( 18 ),
    .din27_WIDTH( 18 ),
    .din28_WIDTH( 5 ),
    .dout_WIDTH( 18 ))
CNN_mux_285_18_1_1_U1(
    .din0(in_image_0_V_q0),
    .din1(in_image_1_V_q0),
    .din2(in_image_2_V_q0),
    .din3(in_image_3_V_q0),
    .din4(in_image_4_V_q0),
    .din5(in_image_5_V_q0),
    .din6(in_image_6_V_q0),
    .din7(in_image_7_V_q0),
    .din8(in_image_8_V_q0),
    .din9(in_image_9_V_q0),
    .din10(in_image_10_V_q0),
    .din11(in_image_11_V_q0),
    .din12(in_image_12_V_q0),
    .din13(in_image_13_V_q0),
    .din14(in_image_14_V_q0),
    .din15(in_image_15_V_q0),
    .din16(in_image_16_V_q0),
    .din17(in_image_17_V_q0),
    .din18(in_image_18_V_q0),
    .din19(in_image_19_V_q0),
    .din20(in_image_20_V_q0),
    .din21(in_image_21_V_q0),
    .din22(in_image_22_V_q0),
    .din23(in_image_23_V_q0),
    .din24(in_image_24_V_q0),
    .din25(in_image_25_V_q0),
    .din26(in_image_26_V_q0),
    .din27(in_image_27_V_q0),
    .din28(i_mid2_reg_1670),
    .dout(p_Val2_s_fu_1518_p30)
);

CNN_mux_285_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 18 ),
    .din9_WIDTH( 18 ),
    .din10_WIDTH( 18 ),
    .din11_WIDTH( 18 ),
    .din12_WIDTH( 18 ),
    .din13_WIDTH( 18 ),
    .din14_WIDTH( 18 ),
    .din15_WIDTH( 18 ),
    .din16_WIDTH( 18 ),
    .din17_WIDTH( 18 ),
    .din18_WIDTH( 18 ),
    .din19_WIDTH( 18 ),
    .din20_WIDTH( 18 ),
    .din21_WIDTH( 18 ),
    .din22_WIDTH( 18 ),
    .din23_WIDTH( 18 ),
    .din24_WIDTH( 18 ),
    .din25_WIDTH( 18 ),
    .din26_WIDTH( 18 ),
    .din27_WIDTH( 18 ),
    .din28_WIDTH( 5 ),
    .dout_WIDTH( 18 ))
CNN_mux_285_18_1_1_U2(
    .din0(means_0_V_q0),
    .din1(means_1_V_q0),
    .din2(means_2_V_q0),
    .din3(means_3_V_q0),
    .din4(means_4_V_q0),
    .din5(means_5_V_q0),
    .din6(means_6_V_q0),
    .din7(means_7_V_q0),
    .din8(means_8_V_q0),
    .din9(means_9_V_q0),
    .din10(means_10_V_q0),
    .din11(means_11_V_q0),
    .din12(means_12_V_q0),
    .din13(means_13_V_q0),
    .din14(means_14_V_q0),
    .din15(means_15_V_q0),
    .din16(means_16_V_q0),
    .din17(means_17_V_q0),
    .din18(means_18_V_q0),
    .din19(means_19_V_q0),
    .din20(means_20_V_q0),
    .din21(means_21_V_q0),
    .din22(means_22_V_q0),
    .din23(means_23_V_q0),
    .din24(means_24_V_q0),
    .din25(means_25_V_q0),
    .din26(means_26_V_q0),
    .din27(means_27_V_q0),
    .din28(i_mid2_reg_1670),
    .dout(p_Val2_1_fu_1587_p30)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2004 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_reg_1384 <= i_mid2_reg_1670;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        i3_reg_1384 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2004 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten2_reg_1398 <= indvar_flatten_next_reg_1989;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        indvar_flatten2_reg_1398 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2004 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j4_reg_1370 <= j_reg_1994;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        j4_reg_1370 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2004 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_reg_1356 <= tmp_1_reg_1999;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_2_reg_1356 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_2004 <= exitcond_flatten_fu_1512_p2;
        exitcond_flatten_reg_2004_pp0_iter1_reg <= exitcond_flatten_reg_2004;
        i_mid2_reg_1670_pp0_iter1_reg <= i_mid2_reg_1670;
        tmp_3_reg_1677[4 : 0] <= tmp_3_fu_1434_p1[4 : 0];
        tmp_3_reg_1677_pp0_iter1_reg[4 : 0] <= tmp_3_reg_1677[4 : 0];
        tmp_s_reg_2008 <= {{p_Val2_2_fu_1652_p2[18:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_mid2_reg_1670 <= i_mid2_fu_1426_p3;
        indvar_flatten_next_reg_1989 <= indvar_flatten_next_fu_1494_p2;
        j_reg_1994 <= j_fu_1500_p2;
        tmp_1_reg_1999 <= tmp_1_fu_1506_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2004_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_737)) begin
        if ((exitcond_flatten_reg_2004 == 1'd1)) begin
            ap_phi_mux_i3_phi_fu_1388_p6 = 5'd0;
        end else if ((exitcond_flatten_reg_2004 == 1'd0)) begin
            ap_phi_mux_i3_phi_fu_1388_p6 = i_mid2_reg_1670;
        end else begin
            ap_phi_mux_i3_phi_fu_1388_p6 = i3_reg_1384;
        end
    end else begin
        ap_phi_mux_i3_phi_fu_1388_p6 = i3_reg_1384;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_737)) begin
        if ((exitcond_flatten_reg_2004 == 1'd1)) begin
            ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 = 10'd0;
        end else if ((exitcond_flatten_reg_2004 == 1'd0)) begin
            ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 = indvar_flatten_next_reg_1989;
        end else begin
            ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 = indvar_flatten2_reg_1398;
        end
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 = indvar_flatten2_reg_1398;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_737)) begin
        if ((exitcond_flatten_reg_2004 == 1'd1)) begin
            ap_phi_mux_j4_phi_fu_1374_p6 = 5'd0;
        end else if ((exitcond_flatten_reg_2004 == 1'd0)) begin
            ap_phi_mux_j4_phi_fu_1374_p6 = j_reg_1994;
        end else begin
            ap_phi_mux_j4_phi_fu_1374_p6 = j4_reg_1370;
        end
    end else begin
        ap_phi_mux_j4_phi_fu_1374_p6 = j4_reg_1370;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_737)) begin
        if ((exitcond_flatten_reg_2004 == 1'd1)) begin
            ap_phi_mux_tmp_2_phi_fu_1360_p6 = 1'd0;
        end else if ((exitcond_flatten_reg_2004 == 1'd0)) begin
            ap_phi_mux_tmp_2_phi_fu_1360_p6 = tmp_1_reg_1999;
        end else begin
            ap_phi_mux_tmp_2_phi_fu_1360_p6 = tmp_2_reg_1356;
        end
    end else begin
        ap_phi_mux_tmp_2_phi_fu_1360_p6 = tmp_2_reg_1356;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1512_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_0_V_ce0 = 1'b1;
    end else begin
        in_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_10_V_ce0 = 1'b1;
    end else begin
        in_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_11_V_ce0 = 1'b1;
    end else begin
        in_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_12_V_ce0 = 1'b1;
    end else begin
        in_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_13_V_ce0 = 1'b1;
    end else begin
        in_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_14_V_ce0 = 1'b1;
    end else begin
        in_image_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_15_V_ce0 = 1'b1;
    end else begin
        in_image_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_16_V_ce0 = 1'b1;
    end else begin
        in_image_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_17_V_ce0 = 1'b1;
    end else begin
        in_image_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_18_V_ce0 = 1'b1;
    end else begin
        in_image_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_19_V_ce0 = 1'b1;
    end else begin
        in_image_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_1_V_ce0 = 1'b1;
    end else begin
        in_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_20_V_ce0 = 1'b1;
    end else begin
        in_image_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_21_V_ce0 = 1'b1;
    end else begin
        in_image_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_22_V_ce0 = 1'b1;
    end else begin
        in_image_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_23_V_ce0 = 1'b1;
    end else begin
        in_image_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_24_V_ce0 = 1'b1;
    end else begin
        in_image_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_25_V_ce0 = 1'b1;
    end else begin
        in_image_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_26_V_ce0 = 1'b1;
    end else begin
        in_image_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_27_V_ce0 = 1'b1;
    end else begin
        in_image_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_2_V_ce0 = 1'b1;
    end else begin
        in_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_3_V_ce0 = 1'b1;
    end else begin
        in_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_4_V_ce0 = 1'b1;
    end else begin
        in_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_5_V_ce0 = 1'b1;
    end else begin
        in_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_6_V_ce0 = 1'b1;
    end else begin
        in_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_7_V_ce0 = 1'b1;
    end else begin
        in_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_8_V_ce0 = 1'b1;
    end else begin
        in_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_9_V_ce0 = 1'b1;
    end else begin
        in_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_0_V_ce0 = 1'b1;
    end else begin
        means_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_10_V_ce0 = 1'b1;
    end else begin
        means_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_11_V_ce0 = 1'b1;
    end else begin
        means_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_12_V_ce0 = 1'b1;
    end else begin
        means_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_13_V_ce0 = 1'b1;
    end else begin
        means_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_14_V_ce0 = 1'b1;
    end else begin
        means_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_15_V_ce0 = 1'b1;
    end else begin
        means_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_16_V_ce0 = 1'b1;
    end else begin
        means_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_17_V_ce0 = 1'b1;
    end else begin
        means_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_18_V_ce0 = 1'b1;
    end else begin
        means_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_19_V_ce0 = 1'b1;
    end else begin
        means_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_1_V_ce0 = 1'b1;
    end else begin
        means_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_20_V_ce0 = 1'b1;
    end else begin
        means_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_21_V_ce0 = 1'b1;
    end else begin
        means_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_22_V_ce0 = 1'b1;
    end else begin
        means_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_23_V_ce0 = 1'b1;
    end else begin
        means_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_24_V_ce0 = 1'b1;
    end else begin
        means_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_25_V_ce0 = 1'b1;
    end else begin
        means_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_26_V_ce0 = 1'b1;
    end else begin
        means_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_27_V_ce0 = 1'b1;
    end else begin
        means_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_2_V_ce0 = 1'b1;
    end else begin
        means_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_3_V_ce0 = 1'b1;
    end else begin
        means_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_4_V_ce0 = 1'b1;
    end else begin
        means_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_5_V_ce0 = 1'b1;
    end else begin
        means_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_6_V_ce0 = 1'b1;
    end else begin
        means_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_7_V_ce0 = 1'b1;
    end else begin
        means_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_8_V_ce0 = 1'b1;
    end else begin
        means_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        means_9_V_ce0 = 1'b1;
    end else begin
        means_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_0_V_ce0 = 1'b1;
    end else begin
        out_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_0_V_we0 = 1'b1;
    end else begin
        out_image_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_10_V_ce0 = 1'b1;
    end else begin
        out_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_10_V_we0 = 1'b1;
    end else begin
        out_image_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_11_V_ce0 = 1'b1;
    end else begin
        out_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_11_V_we0 = 1'b1;
    end else begin
        out_image_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_12_V_ce0 = 1'b1;
    end else begin
        out_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_12_V_we0 = 1'b1;
    end else begin
        out_image_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_13_V_ce0 = 1'b1;
    end else begin
        out_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_13_V_we0 = 1'b1;
    end else begin
        out_image_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_14_V_ce0 = 1'b1;
    end else begin
        out_image_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_14_V_we0 = 1'b1;
    end else begin
        out_image_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_15_V_ce0 = 1'b1;
    end else begin
        out_image_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_15_V_we0 = 1'b1;
    end else begin
        out_image_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_16_V_ce0 = 1'b1;
    end else begin
        out_image_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_16_V_we0 = 1'b1;
    end else begin
        out_image_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_17_V_ce0 = 1'b1;
    end else begin
        out_image_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_17_V_we0 = 1'b1;
    end else begin
        out_image_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_18_V_ce0 = 1'b1;
    end else begin
        out_image_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_18_V_we0 = 1'b1;
    end else begin
        out_image_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_19_V_ce0 = 1'b1;
    end else begin
        out_image_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_19_V_we0 = 1'b1;
    end else begin
        out_image_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_1_V_ce0 = 1'b1;
    end else begin
        out_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_1_V_we0 = 1'b1;
    end else begin
        out_image_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_20_V_ce0 = 1'b1;
    end else begin
        out_image_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_20_V_we0 = 1'b1;
    end else begin
        out_image_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_21_V_ce0 = 1'b1;
    end else begin
        out_image_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_21_V_we0 = 1'b1;
    end else begin
        out_image_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_22_V_ce0 = 1'b1;
    end else begin
        out_image_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_22_V_we0 = 1'b1;
    end else begin
        out_image_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_23_V_ce0 = 1'b1;
    end else begin
        out_image_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_23_V_we0 = 1'b1;
    end else begin
        out_image_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_24_V_ce0 = 1'b1;
    end else begin
        out_image_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_24_V_we0 = 1'b1;
    end else begin
        out_image_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_25_V_ce0 = 1'b1;
    end else begin
        out_image_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_25_V_we0 = 1'b1;
    end else begin
        out_image_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_26_V_ce0 = 1'b1;
    end else begin
        out_image_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_26_V_we0 = 1'b1;
    end else begin
        out_image_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_27_V_ce0 = 1'b1;
    end else begin
        out_image_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((i_mid2_reg_1670_pp0_iter1_reg == 5'd31) | (i_mid2_reg_1670_pp0_iter1_reg == 5'd30) | (i_mid2_reg_1670_pp0_iter1_reg == 5'd29) | (i_mid2_reg_1670_pp0_iter1_reg == 5'd28) | (i_mid2_reg_1670_pp0_iter1_reg == 5'd27)))) begin
        out_image_27_V_we0 = 1'b1;
    end else begin
        out_image_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_2_V_ce0 = 1'b1;
    end else begin
        out_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_2_V_we0 = 1'b1;
    end else begin
        out_image_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_3_V_ce0 = 1'b1;
    end else begin
        out_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_3_V_we0 = 1'b1;
    end else begin
        out_image_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_4_V_ce0 = 1'b1;
    end else begin
        out_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_4_V_we0 = 1'b1;
    end else begin
        out_image_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_5_V_ce0 = 1'b1;
    end else begin
        out_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_5_V_we0 = 1'b1;
    end else begin
        out_image_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_6_V_ce0 = 1'b1;
    end else begin
        out_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_6_V_we0 = 1'b1;
    end else begin
        out_image_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_7_V_ce0 = 1'b1;
    end else begin
        out_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_7_V_we0 = 1'b1;
    end else begin
        out_image_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_8_V_ce0 = 1'b1;
    end else begin
        out_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_8_V_we0 = 1'b1;
    end else begin
        out_image_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_9_V_ce0 = 1'b1;
    end else begin
        out_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i_mid2_reg_1670_pp0_iter1_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_9_V_we0 = 1'b1;
    end else begin
        out_image_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_737 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign exitcond_flatten_fu_1512_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 == 10'd783) ? 1'b1 : 1'b0);

assign i_fu_1412_p2 = (ap_phi_mux_i3_phi_fu_1388_p6 + 5'd1);

assign i_mid2_fu_1426_p3 = ((ap_phi_mux_tmp_2_phi_fu_1360_p6[0:0] === 1'b1) ? i_fu_1412_p2 : ap_phi_mux_i3_phi_fu_1388_p6);

assign in_image_0_V_address0 = tmp_3_fu_1434_p1;

assign in_image_10_V_address0 = tmp_3_fu_1434_p1;

assign in_image_11_V_address0 = tmp_3_fu_1434_p1;

assign in_image_12_V_address0 = tmp_3_fu_1434_p1;

assign in_image_13_V_address0 = tmp_3_fu_1434_p1;

assign in_image_14_V_address0 = tmp_3_fu_1434_p1;

assign in_image_15_V_address0 = tmp_3_fu_1434_p1;

assign in_image_16_V_address0 = tmp_3_fu_1434_p1;

assign in_image_17_V_address0 = tmp_3_fu_1434_p1;

assign in_image_18_V_address0 = tmp_3_fu_1434_p1;

assign in_image_19_V_address0 = tmp_3_fu_1434_p1;

assign in_image_1_V_address0 = tmp_3_fu_1434_p1;

assign in_image_20_V_address0 = tmp_3_fu_1434_p1;

assign in_image_21_V_address0 = tmp_3_fu_1434_p1;

assign in_image_22_V_address0 = tmp_3_fu_1434_p1;

assign in_image_23_V_address0 = tmp_3_fu_1434_p1;

assign in_image_24_V_address0 = tmp_3_fu_1434_p1;

assign in_image_25_V_address0 = tmp_3_fu_1434_p1;

assign in_image_26_V_address0 = tmp_3_fu_1434_p1;

assign in_image_27_V_address0 = tmp_3_fu_1434_p1;

assign in_image_2_V_address0 = tmp_3_fu_1434_p1;

assign in_image_3_V_address0 = tmp_3_fu_1434_p1;

assign in_image_4_V_address0 = tmp_3_fu_1434_p1;

assign in_image_5_V_address0 = tmp_3_fu_1434_p1;

assign in_image_6_V_address0 = tmp_3_fu_1434_p1;

assign in_image_7_V_address0 = tmp_3_fu_1434_p1;

assign in_image_8_V_address0 = tmp_3_fu_1434_p1;

assign in_image_9_V_address0 = tmp_3_fu_1434_p1;

assign indvar_flatten_next_fu_1494_p2 = (ap_phi_mux_indvar_flatten2_phi_fu_1402_p6 + 10'd1);

assign j_fu_1500_p2 = (j_mid2_fu_1418_p3 + 5'd1);

assign j_mid2_fu_1418_p3 = ((ap_phi_mux_tmp_2_phi_fu_1360_p6[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_j4_phi_fu_1374_p6);

assign means_0_V_address0 = tmp_3_fu_1434_p1;

assign means_10_V_address0 = tmp_3_fu_1434_p1;

assign means_11_V_address0 = tmp_3_fu_1434_p1;

assign means_12_V_address0 = tmp_3_fu_1434_p1;

assign means_13_V_address0 = tmp_3_fu_1434_p1;

assign means_14_V_address0 = tmp_3_fu_1434_p1;

assign means_15_V_address0 = tmp_3_fu_1434_p1;

assign means_16_V_address0 = tmp_3_fu_1434_p1;

assign means_17_V_address0 = tmp_3_fu_1434_p1;

assign means_18_V_address0 = tmp_3_fu_1434_p1;

assign means_19_V_address0 = tmp_3_fu_1434_p1;

assign means_1_V_address0 = tmp_3_fu_1434_p1;

assign means_20_V_address0 = tmp_3_fu_1434_p1;

assign means_21_V_address0 = tmp_3_fu_1434_p1;

assign means_22_V_address0 = tmp_3_fu_1434_p1;

assign means_23_V_address0 = tmp_3_fu_1434_p1;

assign means_24_V_address0 = tmp_3_fu_1434_p1;

assign means_25_V_address0 = tmp_3_fu_1434_p1;

assign means_26_V_address0 = tmp_3_fu_1434_p1;

assign means_27_V_address0 = tmp_3_fu_1434_p1;

assign means_2_V_address0 = tmp_3_fu_1434_p1;

assign means_3_V_address0 = tmp_3_fu_1434_p1;

assign means_4_V_address0 = tmp_3_fu_1434_p1;

assign means_5_V_address0 = tmp_3_fu_1434_p1;

assign means_6_V_address0 = tmp_3_fu_1434_p1;

assign means_7_V_address0 = tmp_3_fu_1434_p1;

assign means_8_V_address0 = tmp_3_fu_1434_p1;

assign means_9_V_address0 = tmp_3_fu_1434_p1;

assign out_image_0_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_0_V_d0 = tmp_s_reg_2008;

assign out_image_10_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_10_V_d0 = tmp_s_reg_2008;

assign out_image_11_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_11_V_d0 = tmp_s_reg_2008;

assign out_image_12_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_12_V_d0 = tmp_s_reg_2008;

assign out_image_13_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_13_V_d0 = tmp_s_reg_2008;

assign out_image_14_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_14_V_d0 = tmp_s_reg_2008;

assign out_image_15_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_15_V_d0 = tmp_s_reg_2008;

assign out_image_16_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_16_V_d0 = tmp_s_reg_2008;

assign out_image_17_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_17_V_d0 = tmp_s_reg_2008;

assign out_image_18_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_18_V_d0 = tmp_s_reg_2008;

assign out_image_19_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_19_V_d0 = tmp_s_reg_2008;

assign out_image_1_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_1_V_d0 = tmp_s_reg_2008;

assign out_image_20_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_20_V_d0 = tmp_s_reg_2008;

assign out_image_21_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_21_V_d0 = tmp_s_reg_2008;

assign out_image_22_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_22_V_d0 = tmp_s_reg_2008;

assign out_image_23_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_23_V_d0 = tmp_s_reg_2008;

assign out_image_24_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_24_V_d0 = tmp_s_reg_2008;

assign out_image_25_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_25_V_d0 = tmp_s_reg_2008;

assign out_image_26_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_26_V_d0 = tmp_s_reg_2008;

assign out_image_27_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_27_V_d0 = tmp_s_reg_2008;

assign out_image_2_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_2_V_d0 = tmp_s_reg_2008;

assign out_image_3_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_3_V_d0 = tmp_s_reg_2008;

assign out_image_4_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_4_V_d0 = tmp_s_reg_2008;

assign out_image_5_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_5_V_d0 = tmp_s_reg_2008;

assign out_image_6_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_6_V_d0 = tmp_s_reg_2008;

assign out_image_7_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_7_V_d0 = tmp_s_reg_2008;

assign out_image_8_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_8_V_d0 = tmp_s_reg_2008;

assign out_image_9_V_address0 = tmp_3_reg_1677_pp0_iter1_reg;

assign out_image_9_V_d0 = tmp_s_reg_2008;

assign p_Val2_2_fu_1652_p2 = ($signed(tmp_6_fu_1579_p3) - $signed(tmp_7_cast_fu_1648_p1));

assign tmp_1_fu_1506_p2 = ((j_fu_1500_p2 == 5'd28) ? 1'b1 : 1'b0);

assign tmp_3_fu_1434_p1 = j_mid2_fu_1418_p3;

assign tmp_6_fu_1579_p3 = {{p_Val2_s_fu_1518_p30}, {1'd0}};

assign tmp_7_cast_fu_1648_p1 = $signed(p_Val2_1_fu_1587_p30);

always @ (posedge ap_clk) begin
    tmp_3_reg_1677[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_3_reg_1677_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //zero_mean_1chan
