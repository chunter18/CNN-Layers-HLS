// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pad_for_conv2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_image_0_V_address0,
        in_image_0_V_ce0,
        in_image_0_V_q0,
        in_image_1_V_address0,
        in_image_1_V_ce0,
        in_image_1_V_q0,
        in_image_2_V_address0,
        in_image_2_V_ce0,
        in_image_2_V_q0,
        in_image_3_V_address0,
        in_image_3_V_ce0,
        in_image_3_V_q0,
        in_image_4_V_address0,
        in_image_4_V_ce0,
        in_image_4_V_q0,
        in_image_5_V_address0,
        in_image_5_V_ce0,
        in_image_5_V_q0,
        in_image_6_V_address0,
        in_image_6_V_ce0,
        in_image_6_V_q0,
        in_image_7_V_address0,
        in_image_7_V_ce0,
        in_image_7_V_q0,
        in_image_8_V_address0,
        in_image_8_V_ce0,
        in_image_8_V_q0,
        in_image_9_V_address0,
        in_image_9_V_ce0,
        in_image_9_V_q0,
        in_image_10_V_address0,
        in_image_10_V_ce0,
        in_image_10_V_q0,
        in_image_11_V_address0,
        in_image_11_V_ce0,
        in_image_11_V_q0,
        in_image_12_V_address0,
        in_image_12_V_ce0,
        in_image_12_V_q0,
        in_image_13_V_address0,
        in_image_13_V_ce0,
        in_image_13_V_q0,
        out_image_0_V_address0,
        out_image_0_V_ce0,
        out_image_0_V_we0,
        out_image_0_V_d0,
        out_image_0_V_address1,
        out_image_0_V_ce1,
        out_image_0_V_we1,
        out_image_0_V_d1,
        out_image_1_V_address0,
        out_image_1_V_ce0,
        out_image_1_V_we0,
        out_image_1_V_d0,
        out_image_1_V_address1,
        out_image_1_V_ce1,
        out_image_1_V_we1,
        out_image_1_V_d1,
        out_image_2_V_address0,
        out_image_2_V_ce0,
        out_image_2_V_we0,
        out_image_2_V_d0,
        out_image_2_V_address1,
        out_image_2_V_ce1,
        out_image_2_V_we1,
        out_image_2_V_d1,
        out_image_3_V_address0,
        out_image_3_V_ce0,
        out_image_3_V_we0,
        out_image_3_V_d0,
        out_image_3_V_address1,
        out_image_3_V_ce1,
        out_image_3_V_we1,
        out_image_3_V_d1,
        out_image_4_V_address0,
        out_image_4_V_ce0,
        out_image_4_V_we0,
        out_image_4_V_d0,
        out_image_4_V_address1,
        out_image_4_V_ce1,
        out_image_4_V_we1,
        out_image_4_V_d1,
        out_image_5_V_address0,
        out_image_5_V_ce0,
        out_image_5_V_we0,
        out_image_5_V_d0,
        out_image_5_V_address1,
        out_image_5_V_ce1,
        out_image_5_V_we1,
        out_image_5_V_d1,
        out_image_6_V_address0,
        out_image_6_V_ce0,
        out_image_6_V_we0,
        out_image_6_V_d0,
        out_image_6_V_address1,
        out_image_6_V_ce1,
        out_image_6_V_we1,
        out_image_6_V_d1,
        out_image_7_V_address0,
        out_image_7_V_ce0,
        out_image_7_V_we0,
        out_image_7_V_d0,
        out_image_7_V_address1,
        out_image_7_V_ce1,
        out_image_7_V_we1,
        out_image_7_V_d1,
        out_image_8_V_address0,
        out_image_8_V_ce0,
        out_image_8_V_we0,
        out_image_8_V_d0,
        out_image_8_V_address1,
        out_image_8_V_ce1,
        out_image_8_V_we1,
        out_image_8_V_d1,
        out_image_9_V_address0,
        out_image_9_V_ce0,
        out_image_9_V_we0,
        out_image_9_V_d0,
        out_image_9_V_address1,
        out_image_9_V_ce1,
        out_image_9_V_we1,
        out_image_9_V_d1,
        out_image_10_V_address0,
        out_image_10_V_ce0,
        out_image_10_V_we0,
        out_image_10_V_d0,
        out_image_10_V_address1,
        out_image_10_V_ce1,
        out_image_10_V_we1,
        out_image_10_V_d1,
        out_image_11_V_address0,
        out_image_11_V_ce0,
        out_image_11_V_we0,
        out_image_11_V_d0,
        out_image_11_V_address1,
        out_image_11_V_ce1,
        out_image_11_V_we1,
        out_image_11_V_d1,
        out_image_12_V_address0,
        out_image_12_V_ce0,
        out_image_12_V_we0,
        out_image_12_V_d0,
        out_image_12_V_address1,
        out_image_12_V_ce1,
        out_image_12_V_we1,
        out_image_12_V_d1,
        out_image_13_V_address0,
        out_image_13_V_ce0,
        out_image_13_V_we0,
        out_image_13_V_d0,
        out_image_13_V_address1,
        out_image_13_V_ce1,
        out_image_13_V_we1,
        out_image_13_V_d1,
        out_image_14_V_address0,
        out_image_14_V_ce0,
        out_image_14_V_we0,
        out_image_14_V_d0,
        out_image_14_V_address1,
        out_image_14_V_ce1,
        out_image_14_V_we1,
        out_image_14_V_d1,
        out_image_15_V_address0,
        out_image_15_V_ce0,
        out_image_15_V_we0,
        out_image_15_V_d0,
        out_image_15_V_address1,
        out_image_15_V_ce1,
        out_image_15_V_we1,
        out_image_15_V_d1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] in_image_0_V_address0;
output   in_image_0_V_ce0;
input  [24:0] in_image_0_V_q0;
output  [3:0] in_image_1_V_address0;
output   in_image_1_V_ce0;
input  [24:0] in_image_1_V_q0;
output  [3:0] in_image_2_V_address0;
output   in_image_2_V_ce0;
input  [24:0] in_image_2_V_q0;
output  [3:0] in_image_3_V_address0;
output   in_image_3_V_ce0;
input  [24:0] in_image_3_V_q0;
output  [3:0] in_image_4_V_address0;
output   in_image_4_V_ce0;
input  [24:0] in_image_4_V_q0;
output  [3:0] in_image_5_V_address0;
output   in_image_5_V_ce0;
input  [24:0] in_image_5_V_q0;
output  [3:0] in_image_6_V_address0;
output   in_image_6_V_ce0;
input  [24:0] in_image_6_V_q0;
output  [3:0] in_image_7_V_address0;
output   in_image_7_V_ce0;
input  [24:0] in_image_7_V_q0;
output  [3:0] in_image_8_V_address0;
output   in_image_8_V_ce0;
input  [24:0] in_image_8_V_q0;
output  [3:0] in_image_9_V_address0;
output   in_image_9_V_ce0;
input  [24:0] in_image_9_V_q0;
output  [3:0] in_image_10_V_address0;
output   in_image_10_V_ce0;
input  [24:0] in_image_10_V_q0;
output  [3:0] in_image_11_V_address0;
output   in_image_11_V_ce0;
input  [24:0] in_image_11_V_q0;
output  [3:0] in_image_12_V_address0;
output   in_image_12_V_ce0;
input  [24:0] in_image_12_V_q0;
output  [3:0] in_image_13_V_address0;
output   in_image_13_V_ce0;
input  [24:0] in_image_13_V_q0;
output  [3:0] out_image_0_V_address0;
output   out_image_0_V_ce0;
output   out_image_0_V_we0;
output  [0:0] out_image_0_V_d0;
output  [3:0] out_image_0_V_address1;
output   out_image_0_V_ce1;
output   out_image_0_V_we1;
output  [0:0] out_image_0_V_d1;
output  [3:0] out_image_1_V_address0;
output   out_image_1_V_ce0;
output   out_image_1_V_we0;
output  [24:0] out_image_1_V_d0;
output  [3:0] out_image_1_V_address1;
output   out_image_1_V_ce1;
output   out_image_1_V_we1;
output  [24:0] out_image_1_V_d1;
output  [3:0] out_image_2_V_address0;
output   out_image_2_V_ce0;
output   out_image_2_V_we0;
output  [24:0] out_image_2_V_d0;
output  [3:0] out_image_2_V_address1;
output   out_image_2_V_ce1;
output   out_image_2_V_we1;
output  [24:0] out_image_2_V_d1;
output  [3:0] out_image_3_V_address0;
output   out_image_3_V_ce0;
output   out_image_3_V_we0;
output  [24:0] out_image_3_V_d0;
output  [3:0] out_image_3_V_address1;
output   out_image_3_V_ce1;
output   out_image_3_V_we1;
output  [24:0] out_image_3_V_d1;
output  [3:0] out_image_4_V_address0;
output   out_image_4_V_ce0;
output   out_image_4_V_we0;
output  [24:0] out_image_4_V_d0;
output  [3:0] out_image_4_V_address1;
output   out_image_4_V_ce1;
output   out_image_4_V_we1;
output  [24:0] out_image_4_V_d1;
output  [3:0] out_image_5_V_address0;
output   out_image_5_V_ce0;
output   out_image_5_V_we0;
output  [24:0] out_image_5_V_d0;
output  [3:0] out_image_5_V_address1;
output   out_image_5_V_ce1;
output   out_image_5_V_we1;
output  [24:0] out_image_5_V_d1;
output  [3:0] out_image_6_V_address0;
output   out_image_6_V_ce0;
output   out_image_6_V_we0;
output  [24:0] out_image_6_V_d0;
output  [3:0] out_image_6_V_address1;
output   out_image_6_V_ce1;
output   out_image_6_V_we1;
output  [24:0] out_image_6_V_d1;
output  [3:0] out_image_7_V_address0;
output   out_image_7_V_ce0;
output   out_image_7_V_we0;
output  [24:0] out_image_7_V_d0;
output  [3:0] out_image_7_V_address1;
output   out_image_7_V_ce1;
output   out_image_7_V_we1;
output  [24:0] out_image_7_V_d1;
output  [3:0] out_image_8_V_address0;
output   out_image_8_V_ce0;
output   out_image_8_V_we0;
output  [24:0] out_image_8_V_d0;
output  [3:0] out_image_8_V_address1;
output   out_image_8_V_ce1;
output   out_image_8_V_we1;
output  [24:0] out_image_8_V_d1;
output  [3:0] out_image_9_V_address0;
output   out_image_9_V_ce0;
output   out_image_9_V_we0;
output  [24:0] out_image_9_V_d0;
output  [3:0] out_image_9_V_address1;
output   out_image_9_V_ce1;
output   out_image_9_V_we1;
output  [24:0] out_image_9_V_d1;
output  [3:0] out_image_10_V_address0;
output   out_image_10_V_ce0;
output   out_image_10_V_we0;
output  [24:0] out_image_10_V_d0;
output  [3:0] out_image_10_V_address1;
output   out_image_10_V_ce1;
output   out_image_10_V_we1;
output  [24:0] out_image_10_V_d1;
output  [3:0] out_image_11_V_address0;
output   out_image_11_V_ce0;
output   out_image_11_V_we0;
output  [24:0] out_image_11_V_d0;
output  [3:0] out_image_11_V_address1;
output   out_image_11_V_ce1;
output   out_image_11_V_we1;
output  [24:0] out_image_11_V_d1;
output  [3:0] out_image_12_V_address0;
output   out_image_12_V_ce0;
output   out_image_12_V_we0;
output  [24:0] out_image_12_V_d0;
output  [3:0] out_image_12_V_address1;
output   out_image_12_V_ce1;
output   out_image_12_V_we1;
output  [24:0] out_image_12_V_d1;
output  [3:0] out_image_13_V_address0;
output   out_image_13_V_ce0;
output   out_image_13_V_we0;
output  [24:0] out_image_13_V_d0;
output  [3:0] out_image_13_V_address1;
output   out_image_13_V_ce1;
output   out_image_13_V_we1;
output  [24:0] out_image_13_V_d1;
output  [3:0] out_image_14_V_address0;
output   out_image_14_V_ce0;
output   out_image_14_V_we0;
output  [24:0] out_image_14_V_d0;
output  [3:0] out_image_14_V_address1;
output   out_image_14_V_ce1;
output   out_image_14_V_we1;
output  [24:0] out_image_14_V_d1;
output  [3:0] out_image_15_V_address0;
output   out_image_15_V_ce0;
output   out_image_15_V_we0;
output  [0:0] out_image_15_V_d0;
output  [3:0] out_image_15_V_address1;
output   out_image_15_V_ce1;
output   out_image_15_V_we1;
output  [0:0] out_image_15_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_image_0_V_ce0;
reg in_image_1_V_ce0;
reg in_image_2_V_ce0;
reg in_image_3_V_ce0;
reg in_image_4_V_ce0;
reg in_image_5_V_ce0;
reg in_image_6_V_ce0;
reg in_image_7_V_ce0;
reg in_image_8_V_ce0;
reg in_image_9_V_ce0;
reg in_image_10_V_ce0;
reg in_image_11_V_ce0;
reg in_image_12_V_ce0;
reg in_image_13_V_ce0;
reg[3:0] out_image_0_V_address0;
reg out_image_0_V_ce0;
reg out_image_0_V_we0;
reg out_image_0_V_ce1;
reg out_image_0_V_we1;
reg[3:0] out_image_1_V_address0;
reg out_image_1_V_ce0;
reg out_image_1_V_we0;
reg[24:0] out_image_1_V_d0;
reg out_image_1_V_ce1;
reg out_image_1_V_we1;
reg[3:0] out_image_2_V_address0;
reg out_image_2_V_ce0;
reg out_image_2_V_we0;
reg[24:0] out_image_2_V_d0;
reg out_image_2_V_ce1;
reg out_image_2_V_we1;
reg[3:0] out_image_3_V_address0;
reg out_image_3_V_ce0;
reg out_image_3_V_we0;
reg[24:0] out_image_3_V_d0;
reg out_image_3_V_ce1;
reg out_image_3_V_we1;
reg[3:0] out_image_4_V_address0;
reg out_image_4_V_ce0;
reg out_image_4_V_we0;
reg[24:0] out_image_4_V_d0;
reg out_image_4_V_ce1;
reg out_image_4_V_we1;
reg[3:0] out_image_5_V_address0;
reg out_image_5_V_ce0;
reg out_image_5_V_we0;
reg[24:0] out_image_5_V_d0;
reg out_image_5_V_ce1;
reg out_image_5_V_we1;
reg[3:0] out_image_6_V_address0;
reg out_image_6_V_ce0;
reg out_image_6_V_we0;
reg[24:0] out_image_6_V_d0;
reg out_image_6_V_ce1;
reg out_image_6_V_we1;
reg[3:0] out_image_7_V_address0;
reg out_image_7_V_ce0;
reg out_image_7_V_we0;
reg[24:0] out_image_7_V_d0;
reg out_image_7_V_ce1;
reg out_image_7_V_we1;
reg[3:0] out_image_8_V_address0;
reg out_image_8_V_ce0;
reg out_image_8_V_we0;
reg[24:0] out_image_8_V_d0;
reg out_image_8_V_ce1;
reg out_image_8_V_we1;
reg[3:0] out_image_9_V_address0;
reg out_image_9_V_ce0;
reg out_image_9_V_we0;
reg[24:0] out_image_9_V_d0;
reg out_image_9_V_ce1;
reg out_image_9_V_we1;
reg[3:0] out_image_10_V_address0;
reg out_image_10_V_ce0;
reg out_image_10_V_we0;
reg[24:0] out_image_10_V_d0;
reg out_image_10_V_ce1;
reg out_image_10_V_we1;
reg[3:0] out_image_11_V_address0;
reg out_image_11_V_ce0;
reg out_image_11_V_we0;
reg[24:0] out_image_11_V_d0;
reg out_image_11_V_ce1;
reg out_image_11_V_we1;
reg[3:0] out_image_12_V_address0;
reg out_image_12_V_ce0;
reg out_image_12_V_we0;
reg[24:0] out_image_12_V_d0;
reg out_image_12_V_ce1;
reg out_image_12_V_we1;
reg[3:0] out_image_13_V_address0;
reg out_image_13_V_ce0;
reg out_image_13_V_we0;
reg[24:0] out_image_13_V_d0;
reg out_image_13_V_ce1;
reg out_image_13_V_we1;
reg[3:0] out_image_14_V_address0;
reg out_image_14_V_ce0;
reg out_image_14_V_we0;
reg[24:0] out_image_14_V_d0;
reg out_image_14_V_ce1;
reg out_image_14_V_we1;
reg[3:0] out_image_15_V_address0;
reg out_image_15_V_ce0;
reg out_image_15_V_we0;
reg out_image_15_V_ce1;
reg out_image_15_V_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_3_reg_891;
reg   [3:0] j4_reg_902;
reg   [3:0] i_s_reg_913;
reg   [7:0] indvar_flatten2_reg_924;
reg    ap_block_state1;
wire   [0:0] tmp_fu_935_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_2_fu_941_p2;
reg   [4:0] i_2_reg_1249;
wire   [3:0] tmp_2_fu_953_p1;
reg   [3:0] tmp_2_reg_1254;
wire   [3:0] i_1_mid2_fu_971_p3;
reg   [3:0] i_1_mid2_reg_1258;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_mid2_reg_1258_pp0_iter1_reg;
wire   [3:0] j_fu_979_p2;
reg   [3:0] j_reg_1264;
reg   [3:0] j_reg_1264_pp0_iter1_reg;
wire   [7:0] indvar_flatten_next_fu_1003_p2;
reg   [7:0] indvar_flatten_next_reg_1340;
wire   [0:0] tmp_6_fu_1009_p2;
reg   [0:0] tmp_6_reg_1345;
wire   [0:0] exitcond_flatten_fu_1015_p2;
reg   [0:0] exitcond_flatten_reg_1350;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] i_reg_880;
wire    ap_CS_fsm_state4;
reg   [0:0] ap_phi_mux_tmp_3_phi_fu_895_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_j4_phi_fu_906_p4;
reg   [3:0] ap_phi_mux_i_s_phi_fu_917_p4;
reg   [7:0] ap_phi_mux_indvar_flatten2_phi_fu_928_p4;
wire   [63:0] tmp_s_fu_947_p1;
wire   [63:0] tmp_8_fu_985_p1;
wire   [63:0] tmp_7_fu_1068_p1;
wire    ap_CS_fsm_state3;
wire   [24:0] grp_fu_1021_p16;
wire   [3:0] i_1_fu_957_p2;
wire   [3:0] j_mid2_fu_963_p3;
wire    ap_CS_fsm_state8;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

CNN_mux_144_25_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .din2_WIDTH( 25 ),
    .din3_WIDTH( 25 ),
    .din4_WIDTH( 25 ),
    .din5_WIDTH( 25 ),
    .din6_WIDTH( 25 ),
    .din7_WIDTH( 25 ),
    .din8_WIDTH( 25 ),
    .din9_WIDTH( 25 ),
    .din10_WIDTH( 25 ),
    .din11_WIDTH( 25 ),
    .din12_WIDTH( 25 ),
    .din13_WIDTH( 25 ),
    .din14_WIDTH( 4 ),
    .dout_WIDTH( 25 ))
CNN_mux_144_25_2_1_U406(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_image_0_V_q0),
    .din1(in_image_1_V_q0),
    .din2(in_image_2_V_q0),
    .din3(in_image_3_V_q0),
    .din4(in_image_4_V_q0),
    .din5(in_image_5_V_q0),
    .din6(in_image_6_V_q0),
    .din7(in_image_7_V_q0),
    .din8(in_image_8_V_q0),
    .din9(in_image_9_V_q0),
    .din10(in_image_10_V_q0),
    .din11(in_image_11_V_q0),
    .din12(in_image_12_V_q0),
    .din13(in_image_13_V_q0),
    .din14(i_1_mid2_reg_1258),
    .ce(1'b1),
    .dout(grp_fu_1021_p16)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_1015_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_880 <= i_2_reg_1249;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_880 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_s_reg_913 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_s_reg_913 <= i_1_mid2_reg_1258;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten2_reg_924 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten2_reg_924 <= indvar_flatten_next_reg_1340;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j4_reg_902 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j4_reg_902 <= j_reg_1264;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_reg_891 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_891 <= tmp_6_reg_1345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1350 <= exitcond_flatten_fu_1015_p2;
        i_1_mid2_reg_1258_pp0_iter1_reg <= i_1_mid2_reg_1258;
        j_reg_1264_pp0_iter1_reg <= j_reg_1264;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_mid2_reg_1258 <= i_1_mid2_fu_971_p3;
        indvar_flatten_next_reg_1340 <= indvar_flatten_next_fu_1003_p2;
        j_reg_1264 <= j_fu_979_p2;
        tmp_6_reg_1345 <= tmp_6_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1249 <= i_2_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_2_reg_1254 <= tmp_2_fu_953_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_s_phi_fu_917_p4 = i_1_mid2_reg_1258;
    end else begin
        ap_phi_mux_i_s_phi_fu_917_p4 = i_s_reg_913;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten2_phi_fu_928_p4 = indvar_flatten_next_reg_1340;
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_928_p4 = indvar_flatten2_reg_924;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j4_phi_fu_906_p4 = j_reg_1264;
    end else begin
        ap_phi_mux_j4_phi_fu_906_p4 = j4_reg_902;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1350 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_3_phi_fu_895_p4 = tmp_6_reg_1345;
    end else begin
        ap_phi_mux_tmp_3_phi_fu_895_p4 = tmp_3_reg_891;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_0_V_ce0 = 1'b1;
    end else begin
        in_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_10_V_ce0 = 1'b1;
    end else begin
        in_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_11_V_ce0 = 1'b1;
    end else begin
        in_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_12_V_ce0 = 1'b1;
    end else begin
        in_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_13_V_ce0 = 1'b1;
    end else begin
        in_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_1_V_ce0 = 1'b1;
    end else begin
        in_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_2_V_ce0 = 1'b1;
    end else begin
        in_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_3_V_ce0 = 1'b1;
    end else begin
        in_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_4_V_ce0 = 1'b1;
    end else begin
        in_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_5_V_ce0 = 1'b1;
    end else begin
        in_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_6_V_ce0 = 1'b1;
    end else begin
        in_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_7_V_ce0 = 1'b1;
    end else begin
        in_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_8_V_ce0 = 1'b1;
    end else begin
        in_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_9_V_ce0 = 1'b1;
    end else begin
        in_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_image_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_0_V_address0 = tmp_s_fu_947_p1;
    end else begin
        out_image_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        out_image_0_V_ce0 = 1'b1;
    end else begin
        out_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_image_0_V_ce1 = 1'b1;
    end else begin
        out_image_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1254 == 4'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_0_V_we0 = 1'b1;
    end else begin
        out_image_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_1254 == 4'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_image_0_V_we1 = 1'b1;
    end else begin
        out_image_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_10_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_10_V_address0 = 64'd0;
    end else begin
        out_image_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_10_V_ce0 = 1'b1;
    end else begin
        out_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_10_V_ce1 = 1'b1;
    end else begin
        out_image_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_10_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_10_V_d0 = 25'd0;
    end else begin
        out_image_10_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd10) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_10_V_we0 = 1'b1;
    end else begin
        out_image_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd10) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_10_V_we1 = 1'b1;
    end else begin
        out_image_10_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_11_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_11_V_address0 = 64'd0;
    end else begin
        out_image_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_11_V_ce0 = 1'b1;
    end else begin
        out_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_11_V_ce1 = 1'b1;
    end else begin
        out_image_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_11_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_11_V_d0 = 25'd0;
    end else begin
        out_image_11_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd11) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_11_V_we0 = 1'b1;
    end else begin
        out_image_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd11) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_11_V_we1 = 1'b1;
    end else begin
        out_image_11_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_12_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_12_V_address0 = 64'd0;
    end else begin
        out_image_12_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_12_V_ce0 = 1'b1;
    end else begin
        out_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_12_V_ce1 = 1'b1;
    end else begin
        out_image_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_12_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_12_V_d0 = 25'd0;
    end else begin
        out_image_12_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd12) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_12_V_we0 = 1'b1;
    end else begin
        out_image_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd12) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_12_V_we1 = 1'b1;
    end else begin
        out_image_12_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_13_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_13_V_address0 = 64'd0;
    end else begin
        out_image_13_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_13_V_ce0 = 1'b1;
    end else begin
        out_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_13_V_ce1 = 1'b1;
    end else begin
        out_image_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_13_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_13_V_d0 = 25'd0;
    end else begin
        out_image_13_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd13) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_13_V_we0 = 1'b1;
    end else begin
        out_image_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd13) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_13_V_we1 = 1'b1;
    end else begin
        out_image_13_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_14_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_14_V_address0 = 64'd0;
    end else begin
        out_image_14_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_14_V_ce0 = 1'b1;
    end else begin
        out_image_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_14_V_ce1 = 1'b1;
    end else begin
        out_image_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_14_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_14_V_d0 = 25'd0;
    end else begin
        out_image_14_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd13) | (i_1_mid2_reg_1258_pp0_iter1_reg == 4'd14) | (i_1_mid2_reg_1258_pp0_iter1_reg == 4'd15))) | ((tmp_2_fu_953_p1 == 4'd14) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_14_V_we0 = 1'b1;
    end else begin
        out_image_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd14) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_14_V_we1 = 1'b1;
    end else begin
        out_image_14_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_image_15_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_15_V_address0 = tmp_s_fu_947_p1;
    end else begin
        out_image_15_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        out_image_15_V_ce0 = 1'b1;
    end else begin
        out_image_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_image_15_V_ce1 = 1'b1;
    end else begin
        out_image_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1254 == 4'd15) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_15_V_we0 = 1'b1;
    end else begin
        out_image_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_1254 == 4'd15) & (1'b1 == ap_CS_fsm_state3))) begin
        out_image_15_V_we1 = 1'b1;
    end else begin
        out_image_15_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_1_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_1_V_address0 = 64'd0;
    end else begin
        out_image_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_1_V_ce0 = 1'b1;
    end else begin
        out_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_1_V_ce1 = 1'b1;
    end else begin
        out_image_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_1_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_1_V_d0 = 25'd0;
    end else begin
        out_image_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd1) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_1_V_we0 = 1'b1;
    end else begin
        out_image_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd1) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_1_V_we1 = 1'b1;
    end else begin
        out_image_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_2_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_2_V_address0 = 64'd0;
    end else begin
        out_image_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_2_V_ce0 = 1'b1;
    end else begin
        out_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_2_V_ce1 = 1'b1;
    end else begin
        out_image_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_2_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_2_V_d0 = 25'd0;
    end else begin
        out_image_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd2) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_2_V_we0 = 1'b1;
    end else begin
        out_image_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd2) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_2_V_we1 = 1'b1;
    end else begin
        out_image_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_3_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_3_V_address0 = 64'd0;
    end else begin
        out_image_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_3_V_ce0 = 1'b1;
    end else begin
        out_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_3_V_ce1 = 1'b1;
    end else begin
        out_image_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_3_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_3_V_d0 = 25'd0;
    end else begin
        out_image_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd3) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_3_V_we0 = 1'b1;
    end else begin
        out_image_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd3) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_3_V_we1 = 1'b1;
    end else begin
        out_image_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_4_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_4_V_address0 = 64'd0;
    end else begin
        out_image_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_4_V_ce0 = 1'b1;
    end else begin
        out_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_4_V_ce1 = 1'b1;
    end else begin
        out_image_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_4_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_4_V_d0 = 25'd0;
    end else begin
        out_image_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd4) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_4_V_we0 = 1'b1;
    end else begin
        out_image_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd4) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_4_V_we1 = 1'b1;
    end else begin
        out_image_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_5_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_5_V_address0 = 64'd0;
    end else begin
        out_image_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_5_V_ce0 = 1'b1;
    end else begin
        out_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_5_V_ce1 = 1'b1;
    end else begin
        out_image_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_5_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_5_V_d0 = 25'd0;
    end else begin
        out_image_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd5) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_5_V_we0 = 1'b1;
    end else begin
        out_image_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd5) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_5_V_we1 = 1'b1;
    end else begin
        out_image_5_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_6_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_6_V_address0 = 64'd0;
    end else begin
        out_image_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_6_V_ce0 = 1'b1;
    end else begin
        out_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_6_V_ce1 = 1'b1;
    end else begin
        out_image_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_6_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_6_V_d0 = 25'd0;
    end else begin
        out_image_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd6) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_6_V_we0 = 1'b1;
    end else begin
        out_image_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd6) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_6_V_we1 = 1'b1;
    end else begin
        out_image_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_7_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_7_V_address0 = 64'd0;
    end else begin
        out_image_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_7_V_ce0 = 1'b1;
    end else begin
        out_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_7_V_ce1 = 1'b1;
    end else begin
        out_image_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_7_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_7_V_d0 = 25'd0;
    end else begin
        out_image_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd7) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_7_V_we0 = 1'b1;
    end else begin
        out_image_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd7) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_7_V_we1 = 1'b1;
    end else begin
        out_image_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_8_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_8_V_address0 = 64'd0;
    end else begin
        out_image_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_8_V_ce0 = 1'b1;
    end else begin
        out_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_8_V_ce1 = 1'b1;
    end else begin
        out_image_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_8_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_8_V_d0 = 25'd0;
    end else begin
        out_image_8_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd8) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_8_V_we0 = 1'b1;
    end else begin
        out_image_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd8) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_8_V_we1 = 1'b1;
    end else begin
        out_image_8_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_9_V_address0 = tmp_7_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_9_V_address0 = 64'd0;
    end else begin
        out_image_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        out_image_9_V_ce0 = 1'b1;
    end else begin
        out_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_9_V_ce1 = 1'b1;
    end else begin
        out_image_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_image_9_V_d0 = grp_fu_1021_p16;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        out_image_9_V_d0 = 25'd0;
    end else begin
        out_image_9_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((i_1_mid2_reg_1258_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_2_fu_953_p1 == 4'd9) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        out_image_9_V_we0 = 1'b1;
    end else begin
        out_image_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_fu_953_p1 == 4'd9) & (tmp_fu_935_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_image_9_V_we1 = 1'b1;
    end else begin
        out_image_9_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_935_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_state2) & (((tmp_2_fu_953_p1 == 4'd1) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd2) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd3) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd4) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd5) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd6) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd7) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd8) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd9) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd10) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd11) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd12) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd13) & (tmp_fu_935_p2 == 1'd0)) | ((tmp_2_fu_953_p1 == 4'd14) & (tmp_fu_935_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_1015_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_928_p4 == 8'd195) ? 1'b1 : 1'b0);

assign i_1_fu_957_p2 = (ap_phi_mux_i_s_phi_fu_917_p4 + 4'd1);

assign i_1_mid2_fu_971_p3 = ((ap_phi_mux_tmp_3_phi_fu_895_p4[0:0] === 1'b1) ? i_1_fu_957_p2 : ap_phi_mux_i_s_phi_fu_917_p4);

assign i_2_fu_941_p2 = (i_reg_880 + 5'd1);

assign in_image_0_V_address0 = tmp_8_fu_985_p1;

assign in_image_10_V_address0 = tmp_8_fu_985_p1;

assign in_image_11_V_address0 = tmp_8_fu_985_p1;

assign in_image_12_V_address0 = tmp_8_fu_985_p1;

assign in_image_13_V_address0 = tmp_8_fu_985_p1;

assign in_image_1_V_address0 = tmp_8_fu_985_p1;

assign in_image_2_V_address0 = tmp_8_fu_985_p1;

assign in_image_3_V_address0 = tmp_8_fu_985_p1;

assign in_image_4_V_address0 = tmp_8_fu_985_p1;

assign in_image_5_V_address0 = tmp_8_fu_985_p1;

assign in_image_6_V_address0 = tmp_8_fu_985_p1;

assign in_image_7_V_address0 = tmp_8_fu_985_p1;

assign in_image_8_V_address0 = tmp_8_fu_985_p1;

assign in_image_9_V_address0 = tmp_8_fu_985_p1;

assign indvar_flatten_next_fu_1003_p2 = (ap_phi_mux_indvar_flatten2_phi_fu_928_p4 + 8'd1);

assign j_fu_979_p2 = (j_mid2_fu_963_p3 + 4'd1);

assign j_mid2_fu_963_p3 = ((ap_phi_mux_tmp_3_phi_fu_895_p4[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_j4_phi_fu_906_p4);

assign out_image_0_V_address1 = 64'd15;

assign out_image_0_V_d0 = 1'd0;

assign out_image_0_V_d1 = 1'd0;

assign out_image_10_V_address1 = 64'd15;

assign out_image_10_V_d1 = 25'd0;

assign out_image_11_V_address1 = 64'd15;

assign out_image_11_V_d1 = 25'd0;

assign out_image_12_V_address1 = 64'd15;

assign out_image_12_V_d1 = 25'd0;

assign out_image_13_V_address1 = 64'd15;

assign out_image_13_V_d1 = 25'd0;

assign out_image_14_V_address1 = 64'd15;

assign out_image_14_V_d1 = 25'd0;

assign out_image_15_V_address1 = 64'd15;

assign out_image_15_V_d0 = 1'd0;

assign out_image_15_V_d1 = 1'd0;

assign out_image_1_V_address1 = 64'd15;

assign out_image_1_V_d1 = 25'd0;

assign out_image_2_V_address1 = 64'd15;

assign out_image_2_V_d1 = 25'd0;

assign out_image_3_V_address1 = 64'd15;

assign out_image_3_V_d1 = 25'd0;

assign out_image_4_V_address1 = 64'd15;

assign out_image_4_V_d1 = 25'd0;

assign out_image_5_V_address1 = 64'd15;

assign out_image_5_V_d1 = 25'd0;

assign out_image_6_V_address1 = 64'd15;

assign out_image_6_V_d1 = 25'd0;

assign out_image_7_V_address1 = 64'd15;

assign out_image_7_V_d1 = 25'd0;

assign out_image_8_V_address1 = 64'd15;

assign out_image_8_V_d1 = 25'd0;

assign out_image_9_V_address1 = 64'd15;

assign out_image_9_V_d1 = 25'd0;

assign tmp_2_fu_953_p1 = i_reg_880[3:0];

assign tmp_6_fu_1009_p2 = ((j_fu_979_p2 == 4'd14) ? 1'b1 : 1'b0);

assign tmp_7_fu_1068_p1 = j_reg_1264_pp0_iter1_reg;

assign tmp_8_fu_985_p1 = j_mid2_fu_963_p3;

assign tmp_fu_935_p2 = ((i_reg_880 == 5'd16) ? 1'b1 : 1'b0);

assign tmp_s_fu_947_p1 = i_reg_880;

endmodule //pad_for_conv2
