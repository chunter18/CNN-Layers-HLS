// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module batch_norm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_image_0_V_address0,
        in_image_0_V_ce0,
        in_image_0_V_q0,
        in_image_1_V_address0,
        in_image_1_V_ce0,
        in_image_1_V_q0,
        in_image_2_V_address0,
        in_image_2_V_ce0,
        in_image_2_V_q0,
        in_image_3_V_address0,
        in_image_3_V_ce0,
        in_image_3_V_q0,
        in_image_4_V_address0,
        in_image_4_V_ce0,
        in_image_4_V_q0,
        in_image_5_V_address0,
        in_image_5_V_ce0,
        in_image_5_V_q0,
        in_image_6_V_address0,
        in_image_6_V_ce0,
        in_image_6_V_q0,
        in_image_7_V_address0,
        in_image_7_V_ce0,
        in_image_7_V_q0,
        in_image_8_V_address0,
        in_image_8_V_ce0,
        in_image_8_V_q0,
        in_image_9_V_address0,
        in_image_9_V_ce0,
        in_image_9_V_q0,
        in_image_10_V_address0,
        in_image_10_V_ce0,
        in_image_10_V_q0,
        in_image_11_V_address0,
        in_image_11_V_ce0,
        in_image_11_V_q0,
        in_image_12_V_address0,
        in_image_12_V_ce0,
        in_image_12_V_q0,
        in_image_13_V_address0,
        in_image_13_V_ce0,
        in_image_13_V_q0,
        in_image_14_V_address0,
        in_image_14_V_ce0,
        in_image_14_V_q0,
        in_image_15_V_address0,
        in_image_15_V_ce0,
        in_image_15_V_q0,
        in_image_16_V_address0,
        in_image_16_V_ce0,
        in_image_16_V_q0,
        in_image_17_V_address0,
        in_image_17_V_ce0,
        in_image_17_V_q0,
        in_image_18_V_address0,
        in_image_18_V_ce0,
        in_image_18_V_q0,
        in_image_19_V_address0,
        in_image_19_V_ce0,
        in_image_19_V_q0,
        in_image_20_V_address0,
        in_image_20_V_ce0,
        in_image_20_V_q0,
        in_image_21_V_address0,
        in_image_21_V_ce0,
        in_image_21_V_q0,
        in_image_22_V_address0,
        in_image_22_V_ce0,
        in_image_22_V_q0,
        in_image_23_V_address0,
        in_image_23_V_ce0,
        in_image_23_V_q0,
        in_image_24_V_address0,
        in_image_24_V_ce0,
        in_image_24_V_q0,
        in_image_25_V_address0,
        in_image_25_V_ce0,
        in_image_25_V_q0,
        in_image_26_V_address0,
        in_image_26_V_ce0,
        in_image_26_V_q0,
        in_image_27_V_address0,
        in_image_27_V_ce0,
        in_image_27_V_q0,
        A_V,
        B_V,
        out_image_0_V_address0,
        out_image_0_V_ce0,
        out_image_0_V_we0,
        out_image_0_V_d0,
        out_image_1_V_address0,
        out_image_1_V_ce0,
        out_image_1_V_we0,
        out_image_1_V_d0,
        out_image_2_V_address0,
        out_image_2_V_ce0,
        out_image_2_V_we0,
        out_image_2_V_d0,
        out_image_3_V_address0,
        out_image_3_V_ce0,
        out_image_3_V_we0,
        out_image_3_V_d0,
        out_image_4_V_address0,
        out_image_4_V_ce0,
        out_image_4_V_we0,
        out_image_4_V_d0,
        out_image_5_V_address0,
        out_image_5_V_ce0,
        out_image_5_V_we0,
        out_image_5_V_d0,
        out_image_6_V_address0,
        out_image_6_V_ce0,
        out_image_6_V_we0,
        out_image_6_V_d0,
        out_image_7_V_address0,
        out_image_7_V_ce0,
        out_image_7_V_we0,
        out_image_7_V_d0,
        out_image_8_V_address0,
        out_image_8_V_ce0,
        out_image_8_V_we0,
        out_image_8_V_d0,
        out_image_9_V_address0,
        out_image_9_V_ce0,
        out_image_9_V_we0,
        out_image_9_V_d0,
        out_image_10_V_address0,
        out_image_10_V_ce0,
        out_image_10_V_we0,
        out_image_10_V_d0,
        out_image_11_V_address0,
        out_image_11_V_ce0,
        out_image_11_V_we0,
        out_image_11_V_d0,
        out_image_12_V_address0,
        out_image_12_V_ce0,
        out_image_12_V_we0,
        out_image_12_V_d0,
        out_image_13_V_address0,
        out_image_13_V_ce0,
        out_image_13_V_we0,
        out_image_13_V_d0,
        out_image_14_V_address0,
        out_image_14_V_ce0,
        out_image_14_V_we0,
        out_image_14_V_d0,
        out_image_15_V_address0,
        out_image_15_V_ce0,
        out_image_15_V_we0,
        out_image_15_V_d0,
        out_image_16_V_address0,
        out_image_16_V_ce0,
        out_image_16_V_we0,
        out_image_16_V_d0,
        out_image_17_V_address0,
        out_image_17_V_ce0,
        out_image_17_V_we0,
        out_image_17_V_d0,
        out_image_18_V_address0,
        out_image_18_V_ce0,
        out_image_18_V_we0,
        out_image_18_V_d0,
        out_image_19_V_address0,
        out_image_19_V_ce0,
        out_image_19_V_we0,
        out_image_19_V_d0,
        out_image_20_V_address0,
        out_image_20_V_ce0,
        out_image_20_V_we0,
        out_image_20_V_d0,
        out_image_21_V_address0,
        out_image_21_V_ce0,
        out_image_21_V_we0,
        out_image_21_V_d0,
        out_image_22_V_address0,
        out_image_22_V_ce0,
        out_image_22_V_we0,
        out_image_22_V_d0,
        out_image_23_V_address0,
        out_image_23_V_ce0,
        out_image_23_V_we0,
        out_image_23_V_d0,
        out_image_24_V_address0,
        out_image_24_V_ce0,
        out_image_24_V_we0,
        out_image_24_V_d0,
        out_image_25_V_address0,
        out_image_25_V_ce0,
        out_image_25_V_we0,
        out_image_25_V_d0,
        out_image_26_V_address0,
        out_image_26_V_ce0,
        out_image_26_V_we0,
        out_image_26_V_d0,
        out_image_27_V_address0,
        out_image_27_V_ce0,
        out_image_27_V_we0,
        out_image_27_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] in_image_0_V_address0;
output   in_image_0_V_ce0;
input  [24:0] in_image_0_V_q0;
output  [4:0] in_image_1_V_address0;
output   in_image_1_V_ce0;
input  [24:0] in_image_1_V_q0;
output  [4:0] in_image_2_V_address0;
output   in_image_2_V_ce0;
input  [24:0] in_image_2_V_q0;
output  [4:0] in_image_3_V_address0;
output   in_image_3_V_ce0;
input  [24:0] in_image_3_V_q0;
output  [4:0] in_image_4_V_address0;
output   in_image_4_V_ce0;
input  [24:0] in_image_4_V_q0;
output  [4:0] in_image_5_V_address0;
output   in_image_5_V_ce0;
input  [24:0] in_image_5_V_q0;
output  [4:0] in_image_6_V_address0;
output   in_image_6_V_ce0;
input  [24:0] in_image_6_V_q0;
output  [4:0] in_image_7_V_address0;
output   in_image_7_V_ce0;
input  [24:0] in_image_7_V_q0;
output  [4:0] in_image_8_V_address0;
output   in_image_8_V_ce0;
input  [24:0] in_image_8_V_q0;
output  [4:0] in_image_9_V_address0;
output   in_image_9_V_ce0;
input  [24:0] in_image_9_V_q0;
output  [4:0] in_image_10_V_address0;
output   in_image_10_V_ce0;
input  [24:0] in_image_10_V_q0;
output  [4:0] in_image_11_V_address0;
output   in_image_11_V_ce0;
input  [24:0] in_image_11_V_q0;
output  [4:0] in_image_12_V_address0;
output   in_image_12_V_ce0;
input  [24:0] in_image_12_V_q0;
output  [4:0] in_image_13_V_address0;
output   in_image_13_V_ce0;
input  [24:0] in_image_13_V_q0;
output  [4:0] in_image_14_V_address0;
output   in_image_14_V_ce0;
input  [24:0] in_image_14_V_q0;
output  [4:0] in_image_15_V_address0;
output   in_image_15_V_ce0;
input  [24:0] in_image_15_V_q0;
output  [4:0] in_image_16_V_address0;
output   in_image_16_V_ce0;
input  [24:0] in_image_16_V_q0;
output  [4:0] in_image_17_V_address0;
output   in_image_17_V_ce0;
input  [24:0] in_image_17_V_q0;
output  [4:0] in_image_18_V_address0;
output   in_image_18_V_ce0;
input  [24:0] in_image_18_V_q0;
output  [4:0] in_image_19_V_address0;
output   in_image_19_V_ce0;
input  [24:0] in_image_19_V_q0;
output  [4:0] in_image_20_V_address0;
output   in_image_20_V_ce0;
input  [24:0] in_image_20_V_q0;
output  [4:0] in_image_21_V_address0;
output   in_image_21_V_ce0;
input  [24:0] in_image_21_V_q0;
output  [4:0] in_image_22_V_address0;
output   in_image_22_V_ce0;
input  [24:0] in_image_22_V_q0;
output  [4:0] in_image_23_V_address0;
output   in_image_23_V_ce0;
input  [24:0] in_image_23_V_q0;
output  [4:0] in_image_24_V_address0;
output   in_image_24_V_ce0;
input  [24:0] in_image_24_V_q0;
output  [4:0] in_image_25_V_address0;
output   in_image_25_V_ce0;
input  [24:0] in_image_25_V_q0;
output  [4:0] in_image_26_V_address0;
output   in_image_26_V_ce0;
input  [24:0] in_image_26_V_q0;
output  [4:0] in_image_27_V_address0;
output   in_image_27_V_ce0;
input  [24:0] in_image_27_V_q0;
input  [17:0] A_V;
input  [17:0] B_V;
output  [4:0] out_image_0_V_address0;
output   out_image_0_V_ce0;
output   out_image_0_V_we0;
output  [47:0] out_image_0_V_d0;
output  [4:0] out_image_1_V_address0;
output   out_image_1_V_ce0;
output   out_image_1_V_we0;
output  [47:0] out_image_1_V_d0;
output  [4:0] out_image_2_V_address0;
output   out_image_2_V_ce0;
output   out_image_2_V_we0;
output  [47:0] out_image_2_V_d0;
output  [4:0] out_image_3_V_address0;
output   out_image_3_V_ce0;
output   out_image_3_V_we0;
output  [47:0] out_image_3_V_d0;
output  [4:0] out_image_4_V_address0;
output   out_image_4_V_ce0;
output   out_image_4_V_we0;
output  [47:0] out_image_4_V_d0;
output  [4:0] out_image_5_V_address0;
output   out_image_5_V_ce0;
output   out_image_5_V_we0;
output  [47:0] out_image_5_V_d0;
output  [4:0] out_image_6_V_address0;
output   out_image_6_V_ce0;
output   out_image_6_V_we0;
output  [47:0] out_image_6_V_d0;
output  [4:0] out_image_7_V_address0;
output   out_image_7_V_ce0;
output   out_image_7_V_we0;
output  [47:0] out_image_7_V_d0;
output  [4:0] out_image_8_V_address0;
output   out_image_8_V_ce0;
output   out_image_8_V_we0;
output  [47:0] out_image_8_V_d0;
output  [4:0] out_image_9_V_address0;
output   out_image_9_V_ce0;
output   out_image_9_V_we0;
output  [47:0] out_image_9_V_d0;
output  [4:0] out_image_10_V_address0;
output   out_image_10_V_ce0;
output   out_image_10_V_we0;
output  [47:0] out_image_10_V_d0;
output  [4:0] out_image_11_V_address0;
output   out_image_11_V_ce0;
output   out_image_11_V_we0;
output  [47:0] out_image_11_V_d0;
output  [4:0] out_image_12_V_address0;
output   out_image_12_V_ce0;
output   out_image_12_V_we0;
output  [47:0] out_image_12_V_d0;
output  [4:0] out_image_13_V_address0;
output   out_image_13_V_ce0;
output   out_image_13_V_we0;
output  [47:0] out_image_13_V_d0;
output  [4:0] out_image_14_V_address0;
output   out_image_14_V_ce0;
output   out_image_14_V_we0;
output  [47:0] out_image_14_V_d0;
output  [4:0] out_image_15_V_address0;
output   out_image_15_V_ce0;
output   out_image_15_V_we0;
output  [47:0] out_image_15_V_d0;
output  [4:0] out_image_16_V_address0;
output   out_image_16_V_ce0;
output   out_image_16_V_we0;
output  [47:0] out_image_16_V_d0;
output  [4:0] out_image_17_V_address0;
output   out_image_17_V_ce0;
output   out_image_17_V_we0;
output  [47:0] out_image_17_V_d0;
output  [4:0] out_image_18_V_address0;
output   out_image_18_V_ce0;
output   out_image_18_V_we0;
output  [47:0] out_image_18_V_d0;
output  [4:0] out_image_19_V_address0;
output   out_image_19_V_ce0;
output   out_image_19_V_we0;
output  [47:0] out_image_19_V_d0;
output  [4:0] out_image_20_V_address0;
output   out_image_20_V_ce0;
output   out_image_20_V_we0;
output  [47:0] out_image_20_V_d0;
output  [4:0] out_image_21_V_address0;
output   out_image_21_V_ce0;
output   out_image_21_V_we0;
output  [47:0] out_image_21_V_d0;
output  [4:0] out_image_22_V_address0;
output   out_image_22_V_ce0;
output   out_image_22_V_we0;
output  [47:0] out_image_22_V_d0;
output  [4:0] out_image_23_V_address0;
output   out_image_23_V_ce0;
output   out_image_23_V_we0;
output  [47:0] out_image_23_V_d0;
output  [4:0] out_image_24_V_address0;
output   out_image_24_V_ce0;
output   out_image_24_V_we0;
output  [47:0] out_image_24_V_d0;
output  [4:0] out_image_25_V_address0;
output   out_image_25_V_ce0;
output   out_image_25_V_we0;
output  [47:0] out_image_25_V_d0;
output  [4:0] out_image_26_V_address0;
output   out_image_26_V_ce0;
output   out_image_26_V_we0;
output  [47:0] out_image_26_V_d0;
output  [4:0] out_image_27_V_address0;
output   out_image_27_V_ce0;
output   out_image_27_V_we0;
output  [47:0] out_image_27_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_image_0_V_ce0;
reg in_image_1_V_ce0;
reg in_image_2_V_ce0;
reg in_image_3_V_ce0;
reg in_image_4_V_ce0;
reg in_image_5_V_ce0;
reg in_image_6_V_ce0;
reg in_image_7_V_ce0;
reg in_image_8_V_ce0;
reg in_image_9_V_ce0;
reg in_image_10_V_ce0;
reg in_image_11_V_ce0;
reg in_image_12_V_ce0;
reg in_image_13_V_ce0;
reg in_image_14_V_ce0;
reg in_image_15_V_ce0;
reg in_image_16_V_ce0;
reg in_image_17_V_ce0;
reg in_image_18_V_ce0;
reg in_image_19_V_ce0;
reg in_image_20_V_ce0;
reg in_image_21_V_ce0;
reg in_image_22_V_ce0;
reg in_image_23_V_ce0;
reg in_image_24_V_ce0;
reg in_image_25_V_ce0;
reg in_image_26_V_ce0;
reg in_image_27_V_ce0;
reg out_image_0_V_ce0;
reg out_image_0_V_we0;
reg out_image_1_V_ce0;
reg out_image_1_V_we0;
reg out_image_2_V_ce0;
reg out_image_2_V_we0;
reg out_image_3_V_ce0;
reg out_image_3_V_we0;
reg out_image_4_V_ce0;
reg out_image_4_V_we0;
reg out_image_5_V_ce0;
reg out_image_5_V_we0;
reg out_image_6_V_ce0;
reg out_image_6_V_we0;
reg out_image_7_V_ce0;
reg out_image_7_V_we0;
reg out_image_8_V_ce0;
reg out_image_8_V_we0;
reg out_image_9_V_ce0;
reg out_image_9_V_we0;
reg out_image_10_V_ce0;
reg out_image_10_V_we0;
reg out_image_11_V_ce0;
reg out_image_11_V_we0;
reg out_image_12_V_ce0;
reg out_image_12_V_we0;
reg out_image_13_V_ce0;
reg out_image_13_V_we0;
reg out_image_14_V_ce0;
reg out_image_14_V_we0;
reg out_image_15_V_ce0;
reg out_image_15_V_we0;
reg out_image_16_V_ce0;
reg out_image_16_V_we0;
reg out_image_17_V_ce0;
reg out_image_17_V_we0;
reg out_image_18_V_ce0;
reg out_image_18_V_we0;
reg out_image_19_V_ce0;
reg out_image_19_V_we0;
reg out_image_20_V_ce0;
reg out_image_20_V_we0;
reg out_image_21_V_ce0;
reg out_image_21_V_we0;
reg out_image_22_V_ce0;
reg out_image_22_V_we0;
reg out_image_23_V_ce0;
reg out_image_23_V_we0;
reg out_image_24_V_ce0;
reg out_image_24_V_we0;
reg out_image_25_V_ce0;
reg out_image_25_V_we0;
reg out_image_26_V_ce0;
reg out_image_26_V_we0;
reg out_image_27_V_ce0;
reg out_image_27_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_950;
reg   [4:0] j_reg_961;
reg   [4:0] k_reg_972;
wire  signed [36:0] OP2_V_fu_983_p1;
reg  signed [36:0] OP2_V_reg_1182;
reg    ap_block_state1;
wire  signed [36:0] tmp_45_cast_fu_995_p1;
reg  signed [36:0] tmp_45_cast_reg_1187;
wire   [0:0] exitcond_flatten_fu_999_p2;
reg   [0:0] exitcond_flatten_reg_1192;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1192_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1192_pp0_iter2_reg;
wire   [9:0] indvar_flatten_next_fu_1005_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] j_mid2_fu_1031_p3;
reg   [4:0] j_mid2_reg_1201;
reg   [4:0] j_mid2_reg_1201_pp0_iter1_reg;
reg   [4:0] j_mid2_reg_1201_pp0_iter2_reg;
reg   [4:0] j_mid2_reg_1201_pp0_iter3_reg;
wire   [63:0] tmp_25_fu_1039_p1;
reg   [63:0] tmp_25_reg_1207;
reg   [63:0] tmp_25_reg_1207_pp0_iter1_reg;
reg   [63:0] tmp_25_reg_1207_pp0_iter2_reg;
reg   [63:0] tmp_25_reg_1207_pp0_iter3_reg;
wire   [4:0] k_3_fu_1071_p2;
wire   [24:0] tmp_13_fu_1077_p30;
reg  signed [24:0] tmp_13_reg_1384;
wire  signed [36:0] grp_fu_1176_p3;
reg  signed [36:0] p_Val2_s_24_reg_1394;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg   [4:0] ap_phi_mux_j_phi_fu_965_p4;
wire    ap_block_pp0_stage0;
wire   [47:0] tmp_26_fu_1141_p3;
wire   [33:0] tmp_s_fu_987_p3;
wire   [0:0] tmp_23_fu_1017_p2;
wire   [4:0] j_2_fu_1011_p2;
wire   [4:0] k_mid2_fu_1023_p3;
wire  signed [17:0] grp_fu_1176_p0;
wire  signed [33:0] grp_fu_1176_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

CNN_mux_285_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .din2_WIDTH( 25 ),
    .din3_WIDTH( 25 ),
    .din4_WIDTH( 25 ),
    .din5_WIDTH( 25 ),
    .din6_WIDTH( 25 ),
    .din7_WIDTH( 25 ),
    .din8_WIDTH( 25 ),
    .din9_WIDTH( 25 ),
    .din10_WIDTH( 25 ),
    .din11_WIDTH( 25 ),
    .din12_WIDTH( 25 ),
    .din13_WIDTH( 25 ),
    .din14_WIDTH( 25 ),
    .din15_WIDTH( 25 ),
    .din16_WIDTH( 25 ),
    .din17_WIDTH( 25 ),
    .din18_WIDTH( 25 ),
    .din19_WIDTH( 25 ),
    .din20_WIDTH( 25 ),
    .din21_WIDTH( 25 ),
    .din22_WIDTH( 25 ),
    .din23_WIDTH( 25 ),
    .din24_WIDTH( 25 ),
    .din25_WIDTH( 25 ),
    .din26_WIDTH( 25 ),
    .din27_WIDTH( 25 ),
    .din28_WIDTH( 5 ),
    .dout_WIDTH( 25 ))
CNN_mux_285_25_1_1_U244(
    .din0(in_image_0_V_q0),
    .din1(in_image_1_V_q0),
    .din2(in_image_2_V_q0),
    .din3(in_image_3_V_q0),
    .din4(in_image_4_V_q0),
    .din5(in_image_5_V_q0),
    .din6(in_image_6_V_q0),
    .din7(in_image_7_V_q0),
    .din8(in_image_8_V_q0),
    .din9(in_image_9_V_q0),
    .din10(in_image_10_V_q0),
    .din11(in_image_11_V_q0),
    .din12(in_image_12_V_q0),
    .din13(in_image_13_V_q0),
    .din14(in_image_14_V_q0),
    .din15(in_image_15_V_q0),
    .din16(in_image_16_V_q0),
    .din17(in_image_17_V_q0),
    .din18(in_image_18_V_q0),
    .din19(in_image_19_V_q0),
    .din20(in_image_20_V_q0),
    .din21(in_image_21_V_q0),
    .din22(in_image_22_V_q0),
    .din23(in_image_23_V_q0),
    .din24(in_image_24_V_q0),
    .din25(in_image_25_V_q0),
    .din26(in_image_26_V_q0),
    .din27(in_image_27_V_q0),
    .din28(j_mid2_reg_1201),
    .dout(tmp_13_fu_1077_p30)
);

CNN_mac_muladd_18dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 25 ),
    .din2_WIDTH( 34 ),
    .dout_WIDTH( 37 ))
CNN_mac_muladd_18dEe_U245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1176_p0),
    .din1(tmp_13_reg_1384),
    .din2(grp_fu_1176_p2),
    .ce(1'b1),
    .dout(grp_fu_1176_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_999_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_950 <= indvar_flatten_next_fu_1005_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_950 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1192 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_961 <= j_mid2_reg_1201;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_961 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_999_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_reg_972 <= k_3_fu_1071_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        k_reg_972 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_reg_1182 <= OP2_V_fu_983_p1;
        tmp_45_cast_reg_1187[36 : 16] <= tmp_45_cast_fu_995_p1[36 : 16];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1192 <= exitcond_flatten_fu_999_p2;
        exitcond_flatten_reg_1192_pp0_iter1_reg <= exitcond_flatten_reg_1192;
        j_mid2_reg_1201_pp0_iter1_reg <= j_mid2_reg_1201;
        tmp_25_reg_1207_pp0_iter1_reg[4 : 0] <= tmp_25_reg_1207[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_1192_pp0_iter2_reg <= exitcond_flatten_reg_1192_pp0_iter1_reg;
        j_mid2_reg_1201_pp0_iter2_reg <= j_mid2_reg_1201_pp0_iter1_reg;
        j_mid2_reg_1201_pp0_iter3_reg <= j_mid2_reg_1201_pp0_iter2_reg;
        tmp_25_reg_1207_pp0_iter2_reg[4 : 0] <= tmp_25_reg_1207_pp0_iter1_reg[4 : 0];
        tmp_25_reg_1207_pp0_iter3_reg[4 : 0] <= tmp_25_reg_1207_pp0_iter2_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_999_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_mid2_reg_1201 <= j_mid2_fu_1031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1192_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_Val2_s_24_reg_1394 <= grp_fu_1176_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1192 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_13_reg_1384 <= tmp_13_fu_1077_p30;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_25_reg_1207[4 : 0] <= tmp_25_fu_1039_p1[4 : 0];
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_999_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten_reg_1192 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_965_p4 = j_mid2_reg_1201;
    end else begin
        ap_phi_mux_j_phi_fu_965_p4 = j_reg_961;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_0_V_ce0 = 1'b1;
    end else begin
        in_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_10_V_ce0 = 1'b1;
    end else begin
        in_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_11_V_ce0 = 1'b1;
    end else begin
        in_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_12_V_ce0 = 1'b1;
    end else begin
        in_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_13_V_ce0 = 1'b1;
    end else begin
        in_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_14_V_ce0 = 1'b1;
    end else begin
        in_image_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_15_V_ce0 = 1'b1;
    end else begin
        in_image_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_16_V_ce0 = 1'b1;
    end else begin
        in_image_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_17_V_ce0 = 1'b1;
    end else begin
        in_image_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_18_V_ce0 = 1'b1;
    end else begin
        in_image_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_19_V_ce0 = 1'b1;
    end else begin
        in_image_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_1_V_ce0 = 1'b1;
    end else begin
        in_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_20_V_ce0 = 1'b1;
    end else begin
        in_image_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_21_V_ce0 = 1'b1;
    end else begin
        in_image_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_22_V_ce0 = 1'b1;
    end else begin
        in_image_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_23_V_ce0 = 1'b1;
    end else begin
        in_image_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_24_V_ce0 = 1'b1;
    end else begin
        in_image_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_25_V_ce0 = 1'b1;
    end else begin
        in_image_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_26_V_ce0 = 1'b1;
    end else begin
        in_image_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_27_V_ce0 = 1'b1;
    end else begin
        in_image_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_2_V_ce0 = 1'b1;
    end else begin
        in_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_3_V_ce0 = 1'b1;
    end else begin
        in_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_4_V_ce0 = 1'b1;
    end else begin
        in_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_5_V_ce0 = 1'b1;
    end else begin
        in_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_6_V_ce0 = 1'b1;
    end else begin
        in_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_7_V_ce0 = 1'b1;
    end else begin
        in_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_8_V_ce0 = 1'b1;
    end else begin
        in_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_image_9_V_ce0 = 1'b1;
    end else begin
        in_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_0_V_ce0 = 1'b1;
    end else begin
        out_image_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_0_V_we0 = 1'b1;
    end else begin
        out_image_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_10_V_ce0 = 1'b1;
    end else begin
        out_image_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_10_V_we0 = 1'b1;
    end else begin
        out_image_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_11_V_ce0 = 1'b1;
    end else begin
        out_image_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_11_V_we0 = 1'b1;
    end else begin
        out_image_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_12_V_ce0 = 1'b1;
    end else begin
        out_image_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_12_V_we0 = 1'b1;
    end else begin
        out_image_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_13_V_ce0 = 1'b1;
    end else begin
        out_image_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_13_V_we0 = 1'b1;
    end else begin
        out_image_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_14_V_ce0 = 1'b1;
    end else begin
        out_image_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_14_V_we0 = 1'b1;
    end else begin
        out_image_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_15_V_ce0 = 1'b1;
    end else begin
        out_image_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_15_V_we0 = 1'b1;
    end else begin
        out_image_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_16_V_ce0 = 1'b1;
    end else begin
        out_image_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_16_V_we0 = 1'b1;
    end else begin
        out_image_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_17_V_ce0 = 1'b1;
    end else begin
        out_image_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_17_V_we0 = 1'b1;
    end else begin
        out_image_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_18_V_ce0 = 1'b1;
    end else begin
        out_image_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_18_V_we0 = 1'b1;
    end else begin
        out_image_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_19_V_ce0 = 1'b1;
    end else begin
        out_image_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_19_V_we0 = 1'b1;
    end else begin
        out_image_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_1_V_ce0 = 1'b1;
    end else begin
        out_image_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_1_V_we0 = 1'b1;
    end else begin
        out_image_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_20_V_ce0 = 1'b1;
    end else begin
        out_image_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_20_V_we0 = 1'b1;
    end else begin
        out_image_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_21_V_ce0 = 1'b1;
    end else begin
        out_image_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_21_V_we0 = 1'b1;
    end else begin
        out_image_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_22_V_ce0 = 1'b1;
    end else begin
        out_image_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_22_V_we0 = 1'b1;
    end else begin
        out_image_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_23_V_ce0 = 1'b1;
    end else begin
        out_image_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_23_V_we0 = 1'b1;
    end else begin
        out_image_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_24_V_ce0 = 1'b1;
    end else begin
        out_image_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_24_V_we0 = 1'b1;
    end else begin
        out_image_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_25_V_ce0 = 1'b1;
    end else begin
        out_image_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_25_V_we0 = 1'b1;
    end else begin
        out_image_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_26_V_ce0 = 1'b1;
    end else begin
        out_image_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_26_V_we0 = 1'b1;
    end else begin
        out_image_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_27_V_ce0 = 1'b1;
    end else begin
        out_image_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & ((j_mid2_reg_1201_pp0_iter3_reg == 5'd31) | (j_mid2_reg_1201_pp0_iter3_reg == 5'd30) | (j_mid2_reg_1201_pp0_iter3_reg == 5'd29) | (j_mid2_reg_1201_pp0_iter3_reg == 5'd28) | (j_mid2_reg_1201_pp0_iter3_reg == 5'd27)))) begin
        out_image_27_V_we0 = 1'b1;
    end else begin
        out_image_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_2_V_ce0 = 1'b1;
    end else begin
        out_image_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_2_V_we0 = 1'b1;
    end else begin
        out_image_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_3_V_ce0 = 1'b1;
    end else begin
        out_image_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_3_V_we0 = 1'b1;
    end else begin
        out_image_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_4_V_ce0 = 1'b1;
    end else begin
        out_image_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_4_V_we0 = 1'b1;
    end else begin
        out_image_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_5_V_ce0 = 1'b1;
    end else begin
        out_image_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_5_V_we0 = 1'b1;
    end else begin
        out_image_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_6_V_ce0 = 1'b1;
    end else begin
        out_image_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_6_V_we0 = 1'b1;
    end else begin
        out_image_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_7_V_ce0 = 1'b1;
    end else begin
        out_image_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_7_V_we0 = 1'b1;
    end else begin
        out_image_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_8_V_ce0 = 1'b1;
    end else begin
        out_image_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_8_V_we0 = 1'b1;
    end else begin
        out_image_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_9_V_ce0 = 1'b1;
    end else begin
        out_image_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((j_mid2_reg_1201_pp0_iter3_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_image_9_V_we0 = 1'b1;
    end else begin
        out_image_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_999_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_999_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_fu_983_p1 = $signed(A_V);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_999_p2 = ((indvar_flatten_reg_950 == 10'd784) ? 1'b1 : 1'b0);

assign grp_fu_1176_p0 = OP2_V_reg_1182;

assign grp_fu_1176_p2 = tmp_45_cast_reg_1187;

assign in_image_0_V_address0 = tmp_25_fu_1039_p1;

assign in_image_10_V_address0 = tmp_25_fu_1039_p1;

assign in_image_11_V_address0 = tmp_25_fu_1039_p1;

assign in_image_12_V_address0 = tmp_25_fu_1039_p1;

assign in_image_13_V_address0 = tmp_25_fu_1039_p1;

assign in_image_14_V_address0 = tmp_25_fu_1039_p1;

assign in_image_15_V_address0 = tmp_25_fu_1039_p1;

assign in_image_16_V_address0 = tmp_25_fu_1039_p1;

assign in_image_17_V_address0 = tmp_25_fu_1039_p1;

assign in_image_18_V_address0 = tmp_25_fu_1039_p1;

assign in_image_19_V_address0 = tmp_25_fu_1039_p1;

assign in_image_1_V_address0 = tmp_25_fu_1039_p1;

assign in_image_20_V_address0 = tmp_25_fu_1039_p1;

assign in_image_21_V_address0 = tmp_25_fu_1039_p1;

assign in_image_22_V_address0 = tmp_25_fu_1039_p1;

assign in_image_23_V_address0 = tmp_25_fu_1039_p1;

assign in_image_24_V_address0 = tmp_25_fu_1039_p1;

assign in_image_25_V_address0 = tmp_25_fu_1039_p1;

assign in_image_26_V_address0 = tmp_25_fu_1039_p1;

assign in_image_27_V_address0 = tmp_25_fu_1039_p1;

assign in_image_2_V_address0 = tmp_25_fu_1039_p1;

assign in_image_3_V_address0 = tmp_25_fu_1039_p1;

assign in_image_4_V_address0 = tmp_25_fu_1039_p1;

assign in_image_5_V_address0 = tmp_25_fu_1039_p1;

assign in_image_6_V_address0 = tmp_25_fu_1039_p1;

assign in_image_7_V_address0 = tmp_25_fu_1039_p1;

assign in_image_8_V_address0 = tmp_25_fu_1039_p1;

assign in_image_9_V_address0 = tmp_25_fu_1039_p1;

assign indvar_flatten_next_fu_1005_p2 = (indvar_flatten_reg_950 + 10'd1);

assign j_2_fu_1011_p2 = (ap_phi_mux_j_phi_fu_965_p4 + 5'd1);

assign j_mid2_fu_1031_p3 = ((tmp_23_fu_1017_p2[0:0] === 1'b1) ? j_2_fu_1011_p2 : ap_phi_mux_j_phi_fu_965_p4);

assign k_3_fu_1071_p2 = (k_mid2_fu_1023_p3 + 5'd1);

assign k_mid2_fu_1023_p3 = ((tmp_23_fu_1017_p2[0:0] === 1'b1) ? 5'd0 : k_reg_972);

assign out_image_0_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_0_V_d0 = tmp_26_fu_1141_p3;

assign out_image_10_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_10_V_d0 = tmp_26_fu_1141_p3;

assign out_image_11_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_11_V_d0 = tmp_26_fu_1141_p3;

assign out_image_12_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_12_V_d0 = tmp_26_fu_1141_p3;

assign out_image_13_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_13_V_d0 = tmp_26_fu_1141_p3;

assign out_image_14_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_14_V_d0 = tmp_26_fu_1141_p3;

assign out_image_15_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_15_V_d0 = tmp_26_fu_1141_p3;

assign out_image_16_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_16_V_d0 = tmp_26_fu_1141_p3;

assign out_image_17_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_17_V_d0 = tmp_26_fu_1141_p3;

assign out_image_18_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_18_V_d0 = tmp_26_fu_1141_p3;

assign out_image_19_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_19_V_d0 = tmp_26_fu_1141_p3;

assign out_image_1_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_1_V_d0 = tmp_26_fu_1141_p3;

assign out_image_20_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_20_V_d0 = tmp_26_fu_1141_p3;

assign out_image_21_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_21_V_d0 = tmp_26_fu_1141_p3;

assign out_image_22_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_22_V_d0 = tmp_26_fu_1141_p3;

assign out_image_23_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_23_V_d0 = tmp_26_fu_1141_p3;

assign out_image_24_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_24_V_d0 = tmp_26_fu_1141_p3;

assign out_image_25_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_25_V_d0 = tmp_26_fu_1141_p3;

assign out_image_26_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_26_V_d0 = tmp_26_fu_1141_p3;

assign out_image_27_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_27_V_d0 = tmp_26_fu_1141_p3;

assign out_image_2_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_2_V_d0 = tmp_26_fu_1141_p3;

assign out_image_3_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_3_V_d0 = tmp_26_fu_1141_p3;

assign out_image_4_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_4_V_d0 = tmp_26_fu_1141_p3;

assign out_image_5_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_5_V_d0 = tmp_26_fu_1141_p3;

assign out_image_6_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_6_V_d0 = tmp_26_fu_1141_p3;

assign out_image_7_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_7_V_d0 = tmp_26_fu_1141_p3;

assign out_image_8_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_8_V_d0 = tmp_26_fu_1141_p3;

assign out_image_9_V_address0 = tmp_25_reg_1207_pp0_iter3_reg;

assign out_image_9_V_d0 = tmp_26_fu_1141_p3;

assign tmp_23_fu_1017_p2 = ((k_reg_972 == 5'd28) ? 1'b1 : 1'b0);

assign tmp_25_fu_1039_p1 = k_mid2_fu_1023_p3;

assign tmp_26_fu_1141_p3 = {{p_Val2_s_24_reg_1394}, {11'd0}};

assign tmp_45_cast_fu_995_p1 = $signed(tmp_s_fu_987_p3);

assign tmp_s_fu_987_p3 = {{B_V}, {16'd0}};

always @ (posedge ap_clk) begin
    tmp_45_cast_reg_1187[15:0] <= 16'b0000000000000000;
    tmp_25_reg_1207[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_25_reg_1207_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_25_reg_1207_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_25_reg_1207_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //batch_norm
