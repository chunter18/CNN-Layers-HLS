-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d_3x3_4chan_rev is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_image_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_V_ce0 : OUT STD_LOGIC;
    in_image_0_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_0_V_ce1 : OUT STD_LOGIC;
    in_image_0_V_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_V_ce0 : OUT STD_LOGIC;
    in_image_1_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_1_V_ce1 : OUT STD_LOGIC;
    in_image_1_V_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_2_V_ce0 : OUT STD_LOGIC;
    in_image_2_V_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    in_image_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_image_2_V_ce1 : OUT STD_LOGIC;
    in_image_2_V_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
    kernel_0_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_0_V_ce0 : OUT STD_LOGIC;
    kernel_0_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_1_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_1_V_ce0 : OUT STD_LOGIC;
    kernel_1_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_2_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_2_V_ce0 : OUT STD_LOGIC;
    kernel_2_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_3_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_3_V_ce0 : OUT STD_LOGIC;
    kernel_3_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_4_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_4_V_ce0 : OUT STD_LOGIC;
    kernel_4_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_5_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_5_V_ce0 : OUT STD_LOGIC;
    kernel_5_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_6_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_6_V_ce0 : OUT STD_LOGIC;
    kernel_6_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_7_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_7_V_ce0 : OUT STD_LOGIC;
    kernel_7_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    kernel_8_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    kernel_8_V_ce0 : OUT STD_LOGIC;
    kernel_8_V_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    bias_0_V : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_1_V : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_2_V : IN STD_LOGIC_VECTOR (47 downto 0);
    bias_3_V : IN STD_LOGIC_VECTOR (47 downto 0);
    out_image_0_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_0_V_ce0 : OUT STD_LOGIC;
    out_image_0_V_we0 : OUT STD_LOGIC;
    out_image_0_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_1_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_1_V_ce0 : OUT STD_LOGIC;
    out_image_1_V_we0 : OUT STD_LOGIC;
    out_image_1_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_2_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_2_V_ce0 : OUT STD_LOGIC;
    out_image_2_V_we0 : OUT STD_LOGIC;
    out_image_2_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_3_V_ce0 : OUT STD_LOGIC;
    out_image_3_V_we0 : OUT STD_LOGIC;
    out_image_3_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_4_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_4_V_ce0 : OUT STD_LOGIC;
    out_image_4_V_we0 : OUT STD_LOGIC;
    out_image_4_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_5_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_5_V_ce0 : OUT STD_LOGIC;
    out_image_5_V_we0 : OUT STD_LOGIC;
    out_image_5_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_6_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_6_V_ce0 : OUT STD_LOGIC;
    out_image_6_V_we0 : OUT STD_LOGIC;
    out_image_6_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_7_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_7_V_ce0 : OUT STD_LOGIC;
    out_image_7_V_we0 : OUT STD_LOGIC;
    out_image_7_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_8_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_8_V_ce0 : OUT STD_LOGIC;
    out_image_8_V_we0 : OUT STD_LOGIC;
    out_image_8_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_9_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_9_V_ce0 : OUT STD_LOGIC;
    out_image_9_V_we0 : OUT STD_LOGIC;
    out_image_9_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_10_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_10_V_ce0 : OUT STD_LOGIC;
    out_image_10_V_we0 : OUT STD_LOGIC;
    out_image_10_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_11_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_11_V_ce0 : OUT STD_LOGIC;
    out_image_11_V_we0 : OUT STD_LOGIC;
    out_image_11_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_12_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_12_V_ce0 : OUT STD_LOGIC;
    out_image_12_V_we0 : OUT STD_LOGIC;
    out_image_12_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_image_13_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_image_13_V_ce0 : OUT STD_LOGIC;
    out_image_13_V_we0 : OUT STD_LOGIC;
    out_image_13_V_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of conv2d_3x3_4chan_rev is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_C4 : STD_LOGIC_VECTOR (9 downto 0) := "0011000100";
    constant ap_const_lv10_188 : STD_LOGIC_VECTOR (9 downto 0) := "0110001000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal exitcond_flatten_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_22_reg_578 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_reg_593 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_607 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_reg_621 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_reg_649 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_663 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_667 : STD_LOGIC_VECTOR (24 downto 0);
    signal reg_671 : STD_LOGIC_VECTOR (24 downto 0);
    signal i_mid2_fu_681_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_mid2_reg_1132 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_mid2_fu_689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_mid2_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_mid2_fu_697_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_mid2_reg_1143 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_reg_1150 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_reg_1158 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_fu_743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_reg_1173 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_748_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_reg_1224 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_752_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_reg_1229 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_reg_1229_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_reg_1229_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_reg_1229_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_0_V_load_reg_1248 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_0_V_load_2_reg_1258 : STD_LOGIC_VECTOR (24 downto 0);
    signal kernel_4_V_load_reg_1273 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_5_V_load_reg_1278 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_1_V_load_3_reg_1283 : STD_LOGIC_VECTOR (24 downto 0);
    signal kernel_6_V_load_reg_1288 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_7_V_load_reg_1293 : STD_LOGIC_VECTOR (17 downto 0);
    signal in_image_2_V_load_2_reg_1298 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_8_fu_764_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_reg_1308 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_fu_768_p6 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_12_reg_1313 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_12_reg_1313_pp0_iter1_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_12_reg_1313_pp0_iter2_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal indvar_flatten_next_fu_781_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1318 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_x_1_8_fu_804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_x_1_8_reg_1323 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_8_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_8_reg_1328 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_fu_819_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_5_reg_1333 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1343_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1343_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1343_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_1_V_load_reg_1357 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_2_V_load_reg_1362 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_3_V_load_reg_1367 : STD_LOGIC_VECTOR (17 downto 0);
    signal kernel_8_V_load_reg_1412 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_fu_893_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_reg_1417 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_reg_1417_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_reg_1417_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1078_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_reg_1422 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1084_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_4_reg_1457 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_4_reg_1457_pp0_iter2_reg : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1090_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_5_reg_1462 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_5_reg_1462_pp0_iter2_reg : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1096_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_6_reg_1467 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1102_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_7_reg_1472 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1108_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_1_reg_1487 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1114_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_2_reg_1492 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1120_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_3_reg_1497 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1126_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Val2_9_8_reg_1502 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp2_fu_974_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp2_reg_1507 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp3_fu_980_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp3_reg_1512 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp6_fu_992_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp6_reg_1517 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp4_fu_1018_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp4_reg_1522 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_78_8_reg_1527 : STD_LOGIC_VECTOR (47 downto 0);
    signal rewind_ap_ready : STD_LOGIC;
    signal rewind_ap_ready_reg : STD_LOGIC := '0';
    signal rewind_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_tmp_22_phi_fu_582_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_x_phi_fu_597_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_phi_fu_611_p6 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_k_phi_fu_625_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_y_phi_fu_639_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_653_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_cast_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_1059_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_2_fu_675_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_cast_fu_720_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_724_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_737_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_mid2_fu_756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_4_8_fu_787_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_8_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_4_8_fu_799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_843_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_836_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_850_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_854_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_21_fu_925_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_1_fu_932_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_2_fu_939_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_3_fu_946_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_7_fu_960_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_8_fu_967_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp7_fu_986_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_6_fu_953_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_4_fu_998_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_70_5_fu_1005_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp5_fu_1012_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp1_fu_1023_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_10_8_fu_1027_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_75_8_fu_1032_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_76_8_cast_fu_1040_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_13_8_fu_1043_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_1078_ce : STD_LOGIC;
    signal grp_fu_1084_ce : STD_LOGIC;
    signal grp_fu_1090_ce : STD_LOGIC;
    signal grp_fu_1096_ce : STD_LOGIC;
    signal grp_fu_1102_ce : STD_LOGIC;
    signal grp_fu_1108_ce : STD_LOGIC;
    signal grp_fu_1114_ce : STD_LOGIC;
    signal grp_fu_1120_ce : STD_LOGIC;
    signal grp_fu_1126_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_467 : BOOLEAN;
    signal ap_condition_483 : BOOLEAN;

    component CNN_mux_42_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (47 downto 0);
        din1 : IN STD_LOGIC_VECTOR (47 downto 0);
        din2 : IN STD_LOGIC_VECTOR (47 downto 0);
        din3 : IN STD_LOGIC_VECTOR (47 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component CNN_mul_mul_25s_1eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;



begin
    CNN_mux_42_48_1_1_U457 : component CNN_mux_42_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 48,
        din1_WIDTH => 48,
        din2_WIDTH => 48,
        din3_WIDTH => 48,
        din4_WIDTH => 2,
        dout_WIDTH => 48)
    port map (
        din0 => bias_0_V,
        din1 => bias_1_V,
        din2 => bias_2_V,
        din3 => bias_3_V,
        din4 => tmp_9_reg_1224,
        dout => tmp_12_fu_768_p6);

    CNN_mul_mul_25s_1eOg_U458 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_663,
        din1 => kernel_0_V_load_reg_1248,
        ce => grp_fu_1078_ce,
        dout => grp_fu_1078_p2);

    CNN_mul_mul_25s_1eOg_U459 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_667,
        din1 => kernel_4_V_load_reg_1273,
        ce => grp_fu_1084_ce,
        dout => grp_fu_1084_p2);

    CNN_mul_mul_25s_1eOg_U460 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_1_V_load_3_reg_1283,
        din1 => kernel_5_V_load_reg_1278,
        ce => grp_fu_1090_ce,
        dout => grp_fu_1090_p2);

    CNN_mul_mul_25s_1eOg_U461 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_671,
        din1 => kernel_6_V_load_reg_1288,
        ce => grp_fu_1096_ce,
        dout => grp_fu_1096_p2);

    CNN_mul_mul_25s_1eOg_U462 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_2_V_load_2_reg_1298,
        din1 => kernel_7_V_load_reg_1293,
        ce => grp_fu_1102_ce,
        dout => grp_fu_1102_p2);

    CNN_mul_mul_25s_1eOg_U463 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_image_0_V_load_2_reg_1258,
        din1 => kernel_1_V_load_reg_1357,
        ce => grp_fu_1108_ce,
        dout => grp_fu_1108_p2);

    CNN_mul_mul_25s_1eOg_U464 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_663,
        din1 => kernel_2_V_load_reg_1362,
        ce => grp_fu_1114_ce,
        dout => grp_fu_1114_p2);

    CNN_mul_mul_25s_1eOg_U465 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_667,
        din1 => kernel_3_V_load_reg_1367,
        ce => grp_fu_1120_ce,
        dout => grp_fu_1120_p2);

    CNN_mul_mul_25s_1eOg_U466 : component CNN_mul_mul_25s_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_671,
        din1 => kernel_8_V_load_reg_1412,
        ce => grp_fu_1126_ce,
        dout => grp_fu_1126_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= rewind_enable;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rewind_ap_ready_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                rewind_ap_ready_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
                    rewind_ap_ready_reg <= rewind_ap_ready;
                else 
                    rewind_ap_ready_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_607 <= i_5_reg_1333;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i_reg_607 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_reg_649 <= indvar_flatten_next_reg_1318;
            elsif ((((exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten_reg_649 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    k_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k_reg_621 <= k_mid2_reg_1143;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                k_reg_621 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    tmp_22_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                tmp_22_reg_578 <= tmp_s_reg_1338;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                tmp_22_reg_578 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    x_reg_593_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_reg_593 <= p_x_1_8_reg_1323;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                x_reg_593 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    y_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1343 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                y_reg_635 <= p_8_reg_1328;
            elsif ((((exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                y_reg_635 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exitcond_flatten_reg_1343 <= exitcond_flatten_fu_830_p2;
                exitcond_flatten_reg_1343_pp0_iter1_reg <= exitcond_flatten_reg_1343;
                exitcond_flatten_reg_1343_pp0_iter2_reg <= exitcond_flatten_reg_1343_pp0_iter1_reg;
                exitcond_flatten_reg_1343_pp0_iter3_reg <= exitcond_flatten_reg_1343_pp0_iter2_reg;
                kernel_0_V_load_reg_1248 <= kernel_0_V_q0;
                kernel_4_V_load_reg_1273 <= kernel_4_V_q0;
                kernel_5_V_load_reg_1278 <= kernel_5_V_q0;
                kernel_6_V_load_reg_1288 <= kernel_6_V_q0;
                kernel_7_V_load_reg_1293 <= kernel_7_V_q0;
                p_Val2_9_4_reg_1457 <= grp_fu_1084_p2;
                p_Val2_9_4_reg_1457_pp0_iter2_reg <= p_Val2_9_4_reg_1457;
                p_Val2_9_5_reg_1462 <= grp_fu_1090_p2;
                p_Val2_9_5_reg_1462_pp0_iter2_reg <= p_Val2_9_5_reg_1462;
                p_Val2_9_6_reg_1467 <= grp_fu_1096_p2;
                p_Val2_9_7_reg_1472 <= grp_fu_1102_p2;
                p_Val2_9_reg_1422 <= grp_fu_1078_p2;
                    tmp2_reg_1507(47 downto 7) <= tmp2_fu_974_p2(47 downto 7);
                    tmp3_reg_1512(47 downto 7) <= tmp3_fu_980_p2(47 downto 7);
                    tmp6_reg_1517(47 downto 7) <= tmp6_fu_992_p2(47 downto 7);
                tmp_12_reg_1313 <= tmp_12_fu_768_p6;
                tmp_12_reg_1313_pp0_iter1_reg <= tmp_12_reg_1313;
                tmp_12_reg_1313_pp0_iter2_reg <= tmp_12_reg_1313_pp0_iter1_reg;
                tmp_78_8_reg_1527 <= p_Val2_13_8_fu_1043_p2(49 downto 2);
                tmp_8_reg_1308 <= tmp_8_fu_764_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_5_reg_1333 <= i_5_fu_819_p2;
                in_image_0_V_load_2_reg_1258 <= in_image_0_V_q1;
                in_image_1_V_load_3_reg_1283 <= in_image_1_V_q1;
                in_image_2_V_load_2_reg_1298 <= in_image_2_V_q1;
                indvar_flatten_next_reg_1318 <= indvar_flatten_next_fu_781_p2;
                p_8_reg_1328 <= p_8_fu_811_p3;
                p_x_1_8_reg_1323 <= p_x_1_8_fu_804_p3;
                tmp_s_reg_1338 <= tmp_s_fu_824_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_mid2_reg_1132 <= i_mid2_fu_681_p3;
                kernel_1_V_load_reg_1357 <= kernel_1_V_q0;
                kernel_2_V_load_reg_1362 <= kernel_2_V_q0;
                kernel_3_V_load_reg_1367 <= kernel_3_V_q0;
                kernel_8_V_load_reg_1412 <= kernel_8_V_q0;
                p_Val2_9_1_reg_1487 <= grp_fu_1108_p2;
                p_Val2_9_2_reg_1492 <= grp_fu_1114_p2;
                p_Val2_9_3_reg_1497 <= grp_fu_1120_p2;
                p_Val2_9_8_reg_1502 <= grp_fu_1126_p2;
                    tmp4_reg_1522(47 downto 7) <= tmp4_fu_1018_p2(47 downto 7);
                tmp_10_reg_1229 <= tmp_10_fu_752_p1;
                tmp_10_reg_1229_pp0_iter1_reg <= tmp_10_reg_1229;
                tmp_10_reg_1229_pp0_iter2_reg <= tmp_10_reg_1229_pp0_iter1_reg;
                tmp_10_reg_1229_pp0_iter3_reg <= tmp_10_reg_1229_pp0_iter2_reg;
                    tmp_19_reg_1150(2 downto 0) <= tmp_19_fu_705_p1(2 downto 0);
                    tmp_20_reg_1158(8 downto 0) <= tmp_20_fu_714_p1(8 downto 0);
                    tmp_6_cast_reg_1173(9 downto 0) <= tmp_6_cast_fu_743_p1(9 downto 0);
                tmp_7_reg_1417 <= tmp_7_fu_893_p2;
                tmp_7_reg_1417_pp0_iter2_reg <= tmp_7_reg_1417;
                tmp_7_reg_1417_pp0_iter3_reg <= tmp_7_reg_1417_pp0_iter2_reg;
                tmp_9_reg_1224 <= tmp_9_fu_748_p1;
                x_mid2_reg_1137 <= x_mid2_fu_689_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                k_mid2_reg_1143 <= k_mid2_fu_697_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_663 <= in_image_0_V_q0;
                reg_667 <= in_image_1_V_q0;
                reg_671 <= in_image_2_V_q0;
            end if;
        end if;
    end process;
    tmp_19_reg_1150(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_20_reg_1158(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_6_cast_reg_1173(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp2_reg_1507(6 downto 0) <= "0000000";
    tmp3_reg_1512(6 downto 0) <= "0000000";
    tmp6_reg_1517(6 downto 0) <= "0000000";
    tmp4_reg_1522(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage1_11001 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage1_subdone <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_467_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_467 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_483_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_483 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, exitcond_flatten_reg_1343_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, rewind_enable, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= rewind_enable;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_611_p6_assign_proc : process(exitcond_flatten_reg_1343, i_reg_607, i_5_reg_1333, ap_condition_467)
    begin
        if ((ap_const_boolean_1 = ap_condition_467)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_i_phi_fu_611_p6 <= ap_const_lv9_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_i_phi_fu_611_p6 <= i_5_reg_1333;
            else 
                ap_phi_mux_i_phi_fu_611_p6 <= i_reg_607;
            end if;
        else 
            ap_phi_mux_i_phi_fu_611_p6 <= i_reg_607;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_653_p6_assign_proc : process(exitcond_flatten_reg_1343, indvar_flatten_reg_649, indvar_flatten_next_reg_1318, ap_condition_483)
    begin
        if ((ap_const_boolean_1 = ap_condition_483)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten_phi_fu_653_p6 <= ap_const_lv10_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten_phi_fu_653_p6 <= indvar_flatten_next_reg_1318;
            else 
                ap_phi_mux_indvar_flatten_phi_fu_653_p6 <= indvar_flatten_reg_649;
            end if;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_653_p6 <= indvar_flatten_reg_649;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_625_p6_assign_proc : process(exitcond_flatten_reg_1343, k_reg_621, k_mid2_reg_1143, ap_condition_467)
    begin
        if ((ap_const_boolean_1 = ap_condition_467)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_k_phi_fu_625_p6 <= ap_const_lv3_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_k_phi_fu_625_p6 <= k_mid2_reg_1143;
            else 
                ap_phi_mux_k_phi_fu_625_p6 <= k_reg_621;
            end if;
        else 
            ap_phi_mux_k_phi_fu_625_p6 <= k_reg_621;
        end if; 
    end process;


    ap_phi_mux_tmp_22_phi_fu_582_p6_assign_proc : process(exitcond_flatten_reg_1343, tmp_22_reg_578, tmp_s_reg_1338, ap_condition_467)
    begin
        if ((ap_const_boolean_1 = ap_condition_467)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_tmp_22_phi_fu_582_p6 <= ap_const_lv1_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_tmp_22_phi_fu_582_p6 <= tmp_s_reg_1338;
            else 
                ap_phi_mux_tmp_22_phi_fu_582_p6 <= tmp_22_reg_578;
            end if;
        else 
            ap_phi_mux_tmp_22_phi_fu_582_p6 <= tmp_22_reg_578;
        end if; 
    end process;


    ap_phi_mux_x_phi_fu_597_p6_assign_proc : process(exitcond_flatten_reg_1343, x_reg_593, p_x_1_8_reg_1323, ap_condition_467)
    begin
        if ((ap_const_boolean_1 = ap_condition_467)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_x_phi_fu_597_p6 <= ap_const_lv32_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_x_phi_fu_597_p6 <= p_x_1_8_reg_1323;
            else 
                ap_phi_mux_x_phi_fu_597_p6 <= x_reg_593;
            end if;
        else 
            ap_phi_mux_x_phi_fu_597_p6 <= x_reg_593;
        end if; 
    end process;


    ap_phi_mux_y_phi_fu_639_p6_assign_proc : process(exitcond_flatten_reg_1343, y_reg_635, p_8_reg_1328, ap_condition_483)
    begin
        if ((ap_const_boolean_1 = ap_condition_483)) then
            if ((exitcond_flatten_reg_1343 = ap_const_lv1_1)) then 
                ap_phi_mux_y_phi_fu_639_p6 <= ap_const_lv32_0;
            elsif ((exitcond_flatten_reg_1343 = ap_const_lv1_0)) then 
                ap_phi_mux_y_phi_fu_639_p6 <= p_8_reg_1328;
            else 
                ap_phi_mux_y_phi_fu_639_p6 <= y_reg_635;
            end if;
        else 
            ap_phi_mux_y_phi_fu_639_p6 <= y_reg_635;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_830_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_653_p6 = ap_const_lv10_3FF) else "0";

    grp_fu_1078_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1078_ce <= ap_const_logic_1;
        else 
            grp_fu_1078_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1084_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1084_ce <= ap_const_logic_1;
        else 
            grp_fu_1084_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1090_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1090_ce <= ap_const_logic_1;
        else 
            grp_fu_1090_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1096_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1096_ce <= ap_const_logic_1;
        else 
            grp_fu_1096_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1102_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1102_ce <= ap_const_logic_1;
        else 
            grp_fu_1102_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1108_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1108_ce <= ap_const_logic_1;
        else 
            grp_fu_1108_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1114_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1114_ce <= ap_const_logic_1;
        else 
            grp_fu_1114_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1120_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1120_ce <= ap_const_logic_1;
        else 
            grp_fu_1120_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1126_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1126_ce <= ap_const_logic_1;
        else 
            grp_fu_1126_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_5_fu_819_p2 <= std_logic_vector(unsigned(i_mid2_reg_1132) + unsigned(ap_const_lv9_1));
    i_mid2_fu_681_p3 <= 
        ap_const_lv9_0 when (ap_phi_mux_tmp_22_phi_fu_582_p6(0) = '1') else 
        ap_phi_mux_i_phi_fu_611_p6;

    in_image_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_20_fu_714_p1, tmp_6_cast_reg_1173, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_0_V_address0 <= tmp_6_cast_reg_1173(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_0_V_address0 <= tmp_20_fu_714_p1(10 - 1 downto 0);
            else 
                in_image_0_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    in_image_0_V_address1 <= tmp_5_cast_fu_730_p1(10 - 1 downto 0);

    in_image_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_0_V_ce0 <= ap_const_logic_1;
        else 
            in_image_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            in_image_0_V_ce1 <= ap_const_logic_1;
        else 
            in_image_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_20_reg_1158, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_5_cast_fu_730_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_1_V_address0 <= tmp_20_reg_1158(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_1_V_address0 <= tmp_5_cast_fu_730_p1(10 - 1 downto 0);
            else 
                in_image_1_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    in_image_1_V_address1 <= tmp_6_cast_fu_743_p1(10 - 1 downto 0);

    in_image_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_1_V_ce0 <= ap_const_logic_1;
        else 
            in_image_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            in_image_1_V_ce1 <= ap_const_logic_1;
        else 
            in_image_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_20_fu_714_p1, tmp_6_cast_reg_1173, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_image_2_V_address0 <= tmp_6_cast_reg_1173(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_image_2_V_address0 <= tmp_20_fu_714_p1(10 - 1 downto 0);
            else 
                in_image_2_V_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_image_2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    in_image_2_V_address1 <= tmp_5_cast_fu_730_p1(10 - 1 downto 0);

    in_image_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            in_image_2_V_ce0 <= ap_const_logic_1;
        else 
            in_image_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_image_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            in_image_2_V_ce1 <= ap_const_logic_1;
        else 
            in_image_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ap_phi_mux_indvar_flatten_phi_fu_653_p6));

    internal_ap_ready_assign_proc : process(exitcond_flatten_reg_1343, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1343 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    k_2_fu_675_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ap_phi_mux_k_phi_fu_625_p6));
    k_mid2_fu_697_p3 <= 
        k_2_fu_675_p2 when (ap_phi_mux_tmp_22_phi_fu_582_p6(0) = '1') else 
        ap_phi_mux_k_phi_fu_625_p6;
    kernel_0_V_address0 <= tmp_19_fu_705_p1(2 - 1 downto 0);

    kernel_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_0_V_ce0 <= ap_const_logic_1;
        else 
            kernel_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_1_V_address0 <= tmp_19_reg_1150(2 - 1 downto 0);

    kernel_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_1_V_ce0 <= ap_const_logic_1;
        else 
            kernel_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_2_V_address0 <= tmp_19_reg_1150(2 - 1 downto 0);

    kernel_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_2_V_ce0 <= ap_const_logic_1;
        else 
            kernel_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_3_V_address0 <= tmp_19_reg_1150(2 - 1 downto 0);

    kernel_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_3_V_ce0 <= ap_const_logic_1;
        else 
            kernel_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_4_V_address0 <= tmp_19_fu_705_p1(2 - 1 downto 0);

    kernel_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_4_V_ce0 <= ap_const_logic_1;
        else 
            kernel_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_5_V_address0 <= tmp_19_fu_705_p1(2 - 1 downto 0);

    kernel_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_5_V_ce0 <= ap_const_logic_1;
        else 
            kernel_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_6_V_address0 <= tmp_19_fu_705_p1(2 - 1 downto 0);

    kernel_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_6_V_ce0 <= ap_const_logic_1;
        else 
            kernel_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_7_V_address0 <= tmp_19_fu_705_p1(2 - 1 downto 0);

    kernel_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            kernel_7_V_ce0 <= ap_const_logic_1;
        else 
            kernel_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kernel_8_V_address0 <= tmp_19_reg_1150(2 - 1 downto 0);

    kernel_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            kernel_8_V_ce0 <= ap_const_logic_1;
        else 
            kernel_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_0_V_ce0 <= ap_const_logic_1;
        else 
            out_image_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_0_V_d0 <= tmp_78_8_reg_1527;

    out_image_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_0_V_we0 <= ap_const_logic_1;
        else 
            out_image_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_10_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_10_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_10_V_ce0 <= ap_const_logic_1;
        else 
            out_image_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_10_V_d0 <= tmp_78_8_reg_1527;

    out_image_10_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_A) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_10_V_we0 <= ap_const_logic_1;
        else 
            out_image_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_11_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_11_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_11_V_ce0 <= ap_const_logic_1;
        else 
            out_image_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_11_V_d0 <= tmp_78_8_reg_1527;

    out_image_11_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_B) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_11_V_we0 <= ap_const_logic_1;
        else 
            out_image_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_12_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_12_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_12_V_ce0 <= ap_const_logic_1;
        else 
            out_image_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_12_V_d0 <= tmp_78_8_reg_1527;

    out_image_12_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_C) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_12_V_we0 <= ap_const_logic_1;
        else 
            out_image_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_13_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_13_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_13_V_ce0 <= ap_const_logic_1;
        else 
            out_image_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_13_V_d0 <= tmp_78_8_reg_1527;

    out_image_13_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_F) or (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_E) or (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_D)))) then 
            out_image_13_V_we0 <= ap_const_logic_1;
        else 
            out_image_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_1_V_ce0 <= ap_const_logic_1;
        else 
            out_image_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_1_V_d0 <= tmp_78_8_reg_1527;

    out_image_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_1_V_we0 <= ap_const_logic_1;
        else 
            out_image_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_2_V_ce0 <= ap_const_logic_1;
        else 
            out_image_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_2_V_d0 <= tmp_78_8_reg_1527;

    out_image_2_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_2_V_we0 <= ap_const_logic_1;
        else 
            out_image_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_3_V_ce0 <= ap_const_logic_1;
        else 
            out_image_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_3_V_d0 <= tmp_78_8_reg_1527;

    out_image_3_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_3_V_we0 <= ap_const_logic_1;
        else 
            out_image_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_4_V_ce0 <= ap_const_logic_1;
        else 
            out_image_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_4_V_d0 <= tmp_78_8_reg_1527;

    out_image_4_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_4_V_we0 <= ap_const_logic_1;
        else 
            out_image_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_5_V_ce0 <= ap_const_logic_1;
        else 
            out_image_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_5_V_d0 <= tmp_78_8_reg_1527;

    out_image_5_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_5_V_we0 <= ap_const_logic_1;
        else 
            out_image_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_6_V_ce0 <= ap_const_logic_1;
        else 
            out_image_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_6_V_d0 <= tmp_78_8_reg_1527;

    out_image_6_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_6_V_we0 <= ap_const_logic_1;
        else 
            out_image_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_7_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_7_V_ce0 <= ap_const_logic_1;
        else 
            out_image_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_7_V_d0 <= tmp_78_8_reg_1527;

    out_image_7_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_7_V_we0 <= ap_const_logic_1;
        else 
            out_image_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_8_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_8_V_ce0 <= ap_const_logic_1;
        else 
            out_image_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_8_V_d0 <= tmp_78_8_reg_1527;

    out_image_8_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_8_V_we0 <= ap_const_logic_1;
        else 
            out_image_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_9_V_address0 <= tmp_7_cast_fu_1059_p1(6 - 1 downto 0);

    out_image_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_9_V_ce0 <= ap_const_logic_1;
        else 
            out_image_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_image_9_V_d0 <= tmp_78_8_reg_1527;

    out_image_9_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_10_reg_1229_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_10_reg_1229_pp0_iter3_reg = ap_const_lv4_9) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_image_9_V_we0 <= ap_const_logic_1;
        else 
            out_image_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_8_fu_811_p3 <= 
        ap_const_lv32_0 when (tmp_79_8_fu_793_p2(0) = '1') else 
        y_4_8_fu_787_p2;
    p_Val2_10_8_fu_1027_p2 <= std_logic_vector(unsigned(tmp4_reg_1522) + unsigned(tmp1_fu_1023_p2));
    p_Val2_13_8_fu_1043_p2 <= std_logic_vector(unsigned(tmp_75_8_fu_1032_p3) + unsigned(tmp_76_8_cast_fu_1040_p1));
    p_shl1_cast_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_843_p3),7));
    p_x_1_8_fu_804_p3 <= 
        x_4_8_fu_799_p2 when (tmp_79_8_fu_793_p2(0) = '1') else 
        x_mid2_reg_1137;

    rewind_ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, exitcond_flatten_fu_830_p2, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_1) or ((exitcond_flatten_fu_830_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            rewind_ap_ready <= ap_const_logic_1;
        else 
            rewind_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    rewind_enable_assign_proc : process(ap_start, rewind_ap_ready_reg)
    begin
        if (((rewind_ap_ready_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1))) then 
            rewind_enable <= ap_const_logic_1;
        else 
            rewind_enable <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_1023_p2 <= std_logic_vector(unsigned(tmp3_reg_1512) + unsigned(tmp2_reg_1507));
    tmp2_fu_974_p2 <= std_logic_vector(unsigned(tmp_21_fu_925_p3) + unsigned(tmp_70_1_fu_932_p3));
    tmp3_fu_980_p2 <= std_logic_vector(unsigned(tmp_70_2_fu_939_p3) + unsigned(tmp_70_3_fu_946_p3));
    tmp4_fu_1018_p2 <= std_logic_vector(unsigned(tmp6_reg_1517) + unsigned(tmp5_fu_1012_p2));
    tmp5_fu_1012_p2 <= std_logic_vector(unsigned(tmp_70_4_fu_998_p3) + unsigned(tmp_70_5_fu_1005_p3));
    tmp6_fu_992_p2 <= std_logic_vector(unsigned(tmp7_fu_986_p2) + unsigned(tmp_70_6_fu_953_p3));
    tmp7_fu_986_p2 <= std_logic_vector(unsigned(tmp_70_7_fu_960_p3) + unsigned(tmp_70_8_fu_967_p3));
    tmp_10_fu_752_p1 <= x_mid2_fu_689_p3(4 - 1 downto 0);
    tmp_19_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_fu_697_p3),64));
    tmp_20_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_mid2_fu_681_p3),10));
    tmp_20_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_mid2_fu_681_p3),64));
    tmp_21_fu_925_p3 <= (p_Val2_9_reg_1422 & ap_const_lv7_0);
    tmp_3_fu_843_p3 <= (k_mid2_reg_1143 & ap_const_lv1_0);
    tmp_4_fu_854_p2 <= std_logic_vector(unsigned(tmp_fu_836_p3) - unsigned(p_shl1_cast_fu_850_p1));
    tmp_5_cast_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_724_p2),64));
    tmp_5_fu_724_p2 <= std_logic_vector(unsigned(ap_const_lv10_C4) + unsigned(tmp_20_cast_fu_720_p1));
    tmp_6_cast_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_737_p2),64));
    tmp_6_fu_737_p2 <= std_logic_vector(unsigned(ap_const_lv10_188) + unsigned(tmp_20_cast_fu_720_p1));
    tmp_70_1_fu_932_p3 <= (p_Val2_9_1_reg_1487 & ap_const_lv7_0);
    tmp_70_2_fu_939_p3 <= (p_Val2_9_2_reg_1492 & ap_const_lv7_0);
    tmp_70_3_fu_946_p3 <= (p_Val2_9_3_reg_1497 & ap_const_lv7_0);
    tmp_70_4_fu_998_p3 <= (p_Val2_9_4_reg_1457_pp0_iter2_reg & ap_const_lv7_0);
    tmp_70_5_fu_1005_p3 <= (p_Val2_9_5_reg_1462_pp0_iter2_reg & ap_const_lv7_0);
    tmp_70_6_fu_953_p3 <= (p_Val2_9_6_reg_1467 & ap_const_lv7_0);
    tmp_70_7_fu_960_p3 <= (p_Val2_9_7_reg_1472 & ap_const_lv7_0);
    tmp_70_8_fu_967_p3 <= (p_Val2_9_8_reg_1502 & ap_const_lv7_0);
    tmp_75_8_fu_1032_p3 <= (p_Val2_10_8_fu_1027_p2 & ap_const_lv2_0);
        tmp_76_8_cast_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_reg_1313_pp0_iter2_reg),50));

    tmp_79_8_fu_793_p2 <= "1" when (y_4_8_fu_787_p2 = ap_const_lv32_E) else "0";
        tmp_7_cast_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_reg_1417_pp0_iter3_reg),64));

    tmp_7_fu_893_p2 <= std_logic_vector(unsigned(tmp_8_reg_1308) + unsigned(tmp_4_fu_854_p2));
    tmp_8_fu_764_p1 <= y_mid2_fu_756_p3(7 - 1 downto 0);
    tmp_9_fu_748_p1 <= k_mid2_fu_697_p3(2 - 1 downto 0);
    tmp_fu_836_p3 <= (k_mid2_reg_1143 & ap_const_lv4_0);
    tmp_s_fu_824_p2 <= "1" when (i_5_fu_819_p2 = ap_const_lv9_100) else "0";
    x_4_8_fu_799_p2 <= std_logic_vector(unsigned(x_mid2_reg_1137) + unsigned(ap_const_lv32_1));
    x_mid2_fu_689_p3 <= 
        ap_const_lv32_0 when (ap_phi_mux_tmp_22_phi_fu_582_p6(0) = '1') else 
        ap_phi_mux_x_phi_fu_597_p6;
    y_4_8_fu_787_p2 <= std_logic_vector(unsigned(y_mid2_fu_756_p3) + unsigned(ap_const_lv32_1));
    y_mid2_fu_756_p3 <= 
        ap_const_lv32_0 when (tmp_22_reg_578(0) = '1') else 
        ap_phi_mux_y_phi_fu_639_p6;
end behav;
